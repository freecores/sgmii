//IP Functional Simulation Model
//VERSION_BEGIN 11.1SP2 cbx_mgl 2012:01:25:21:15:41:SJ cbx_simgen 2012:01:25:21:13:53:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



// Copyright (C) 1991-2011 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// You may only use these simulation model output files for simulation
// purposes and expressly not for synthesis or any other purposes (in which
// event Altera disclaims all warranties of any kind).


//synopsys translate_off

//synthesis_resources = altera_std_synchronizer 7 altera_std_synchronizer_bundle 3 altpll 1 altsyncram 2 cycloneiv_hssi_calibration_block 1 cycloneiv_hssi_cmu 1 cycloneiv_hssi_rx_pcs 1 cycloneiv_hssi_rx_pma 1 cycloneiv_hssi_tx_pcs 1 cycloneiv_hssi_tx_pma 1 lut 937 mux21 1092 oper_add 27 oper_decoder 4 oper_less_than 11 oper_mux 16 oper_selector 42 
`timescale 1 ps / 1 ps
module  sgmii
	( 
	address,
	clk,
	gmii_rx_d,
	gmii_rx_dv,
	gmii_rx_err,
	gmii_tx_d,
	gmii_tx_en,
	gmii_tx_err,
	gxb_cal_blk_clk,
	gxb_pwrdn_in,
	hd_ena,
	led_an,
	led_char_err,
	led_col,
	led_crs,
	led_disp_err,
	led_link,
	mii_col,
	mii_crs,
	mii_rx_d,
	mii_rx_dv,
	mii_rx_err,
	mii_tx_d,
	mii_tx_en,
	mii_tx_err,
	pcs_pwrdn_out,
	read,
	readdata,
	reconfig_busy,
	reconfig_clk,
	reconfig_fromgxb,
	reconfig_togxb,
	ref_clk,
	reset,
	reset_rx_clk,
	reset_tx_clk,
	rx_clk,
	rx_clkena,
	rx_recovclkout,
	rxp,
	set_10,
	set_100,
	set_1000,
	tx_clk,
	tx_clkena,
	txp,
	waitrequest,
	write,
	writedata) /* synthesis synthesis_clearbox=1 */;
	input   [4:0]  address;
	input   clk;
	output   [7:0]  gmii_rx_d;
	output   gmii_rx_dv;
	output   gmii_rx_err;
	input   [7:0]  gmii_tx_d;
	input   gmii_tx_en;
	input   gmii_tx_err;
	input   gxb_cal_blk_clk;
	input   gxb_pwrdn_in;
	output   hd_ena;
	output   led_an;
	output   led_char_err;
	output   led_col;
	output   led_crs;
	output   led_disp_err;
	output   led_link;
	output   mii_col;
	output   mii_crs;
	output   [3:0]  mii_rx_d;
	output   mii_rx_dv;
	output   mii_rx_err;
	input   [3:0]  mii_tx_d;
	input   mii_tx_en;
	input   mii_tx_err;
	output   pcs_pwrdn_out;
	input   read;
	output   [15:0]  readdata;
	input   reconfig_busy;
	input   reconfig_clk;
	output   [16:0]  reconfig_fromgxb;
	input   [3:0]  reconfig_togxb;
	input   ref_clk;
	input   reset;
	input   reset_rx_clk;
	input   reset_tx_clk;
	output   rx_clk;
	output   rx_clkena;
	output   rx_recovclkout;
	input   rxp;
	output   set_10;
	output   set_100;
	output   set_1000;
	output   tx_clk;
	output   tx_clkena;
	output   txp;
	output   waitrequest;
	input   write;
	input   [15:0]  writedata;

	wire  wire_n1i1ii_dout;
	wire  wire_n1i1il_dout;
	wire  wire_n1i1li_dout;
	wire  wire_n1i1ll_dout;
	wire  wire_nliliOl_dout;
	wire  wire_nliliOO_dout;
	wire  wire_nlill1i_dout;
	wire  [1:0]   wire_n01l0O_dout;
	wire  [1:0]   wire_n01lii_dout;
	wire  [15:0]   wire_n1i1iO_dout;
	wire  [5:0]   wire_nl11O_clk;
	wire  wire_nl11O_fref;
	wire  wire_nl11O_icdrclk;
	wire  wire_nl11O_locked;
	wire  [9:0]   wire_n00OOO_q_b;
	wire  [9:0]   wire_ni1O0i_q_b;
	wire  wire_nl1iO_nonusertocmu;
	wire  wire_nl1il_dpriodisableout;
	wire  wire_nl1il_dprioout;
	wire  wire_nl1il_quadresetout;
	wire  [3:0]   wire_nl1il_rxanalogresetout;
	wire  [3:0]   wire_nl1il_rxcrupowerdown;
	wire  [3:0]   wire_nl1il_rxdigitalresetout;
	wire  [3:0]   wire_nl1il_rxibpowerdown;
	wire  [1599:0]   wire_nl1il_rxpcsdprioout;
	wire  [1199:0]   wire_nl1il_rxpmadprioout;
	wire  [3:0]   wire_nl1il_txanalogresetout;
	wire  [3:0]   wire_nl1il_txdetectrxpowerdown;
	wire  [3:0]   wire_nl1il_txdigitalresetout;
	wire  [3:0]   wire_nl1il_txdividerpowerdown;
	wire  [3:0]   wire_nl1il_txobpowerdown;
	wire  [599:0]   wire_nl1il_txpcsdprioout;
	wire  [1199:0]   wire_nl1il_txpmadprioout;
	wire  wire_nl1ii_cdrctrllocktorefclkout;
	wire  wire_nl1ii_clkout;
	wire  [1:0]   wire_nl1ii_ctrldetect;
	wire  [19:0]   wire_nl1ii_dataout;
	wire  [1:0]   wire_nl1ii_disperr;
	wire  [399:0]   wire_nl1ii_dprioout;
	wire  [1:0]   wire_nl1ii_errdetect;
	wire  [1:0]   wire_nl1ii_patterndetect;
	wire  wire_nl1ii_rlv;
	wire  [1:0]   wire_nl1ii_runningdisp;
	wire  [1:0]   wire_nl1ii_syncstatus;
	wire  wire_nl10O_clockout;
	wire  wire_nl10O_diagnosticlpbkout;
	wire  [299:0]   wire_nl10O_dprioout;
	wire  wire_nl10O_freqlocked;
	wire  [9:0]   wire_nl10O_recoverdataout;
	wire  wire_nl10O_reverselpbkout;
	wire  wire_nl10O_signaldetect;
	wire  wire_nl10l_clkout;
	wire  [9:0]   wire_nl10l_dataout;
	wire  [149:0]   wire_nl10l_dprioout;
	wire  wire_nl10l_txdetectrx;
	wire  wire_nl10i_clockout;
	wire  wire_nl10i_dataout;
	wire  [299:0]   wire_nl10i_dprioout;
	wire  wire_nl10i_seriallpbkout;
	reg	nli00Oi61;
	reg	nli00Oi62;
	reg	nli00Ol59;
	reg	nli00Ol60;
	reg	nli00OO57;
	reg	nli00OO58;
	reg	nli010l71;
	reg	nli010l72;
	reg	nli010O69;
	reg	nli010O70;
	reg	nli011i73;
	reg	nli011i74;
	reg	nli01li67;
	reg	nli01li68;
	reg	nli01ll65;
	reg	nli01ll66;
	reg	nli01Ol63;
	reg	nli01Ol64;
	reg	nli0iOO55;
	reg	nli0iOO56;
	reg	nli0llO53;
	reg	nli0llO54;
	reg	nli0lOO51;
	reg	nli0lOO52;
	reg	nli0O0i47;
	reg	nli0O0i48;
	reg	nli0O1l49;
	reg	nli0O1l50;
	reg	nli0Oii45;
	reg	nli0Oii46;
	reg	nli0Oli43;
	reg	nli0Oli44;
	reg	nli0OlO41;
	reg	nli0OlO42;
	reg	nli0OOO39;
	reg	nli0OOO40;
	reg	nli1OiO79;
	reg	nli1OiO80;
	reg	nli1Oli77;
	reg	nli1Oli78;
	reg	nli1OOO75;
	reg	nli1OOO76;
	reg	nlii00i23;
	reg	nlii00i24;
	reg	nlii01l25;
	reg	nlii01l26;
	reg	nlii0ii21;
	reg	nlii0ii22;
	reg	nlii0il19;
	reg	nlii0il20;
	reg	nlii0iO17;
	reg	nlii0iO18;
	reg	nlii0ll15;
	reg	nlii0ll16;
	reg	nlii0Ol13;
	reg	nlii0Ol14;
	reg	nlii0OO11;
	reg	nlii0OO12;
	reg	nlii10l35;
	reg	nlii10l36;
	reg	nlii11O37;
	reg	nlii11O38;
	reg	nlii1il33;
	reg	nlii1il34;
	reg	nlii1li31;
	reg	nlii1li32;
	reg	nlii1lO29;
	reg	nlii1lO30;
	reg	nlii1OO27;
	reg	nlii1OO28;
	reg	nliii0O7;
	reg	nliii0O8;
	reg	nliii1i10;
	reg	nliii1i9;
	reg	nliiiii5;
	reg	nliiiii6;
	reg	nliiiil3;
	reg	nliiiil4;
	reg	nliiili1;
	reg	nliiili2;
	reg	n000l;
	reg	n00ii;
	wire	wire_n000O_PRN;
	reg	n00Oii;
	reg	n00Oll;
	reg	n00OOl;
	reg	n01l0l;
	reg	n01l1O;
	reg	n011i;
	reg	n01iO;
	reg	n01ll;
	reg	n101l;
	reg	n10ii;
	reg	n10ll;
	reg	n10Ol;
	reg	n110l;
	reg	n110O;
	reg	n11lO;
	reg	n11Oi;
	reg	n1i0l;
	reg	n1i0O;
	reg	n1i1i;
	reg	n1ill;
	reg	n1ilO;
	reg	n1l0i;
	reg	n1l0l;
	reg	n1l0O;
	reg	n1l1l;
	reg	n1l1O;
	reg	n1lOi;
	reg	n1O0i;
	reg	n1O1O;
	reg	n1OlO;
	reg	n1OOi;
	reg	n1OOO;
	reg	n0i01l;
	reg	n0i10i;
	reg	n0i10l;
	reg	n0i11i;
	reg	n0i11l;
	reg	n0i11O;
	reg	n0i1iO;
	reg	n0i1li;
	reg	n0i1ll;
	reg	n0i1Ol;
	reg	n0i1OO;
	reg	n0i1Oi;
	reg	n0ii0O;
	reg	n0i0iO;
	reg	n0i0li;
	reg	n0i0ll;
	reg	n0i0lO;
	reg	n0i0Oi;
	reg	n0ii0i;
	reg	n0ii1l;
	reg	n0ii1O;
	reg	n0iiil;
	reg	n0iiiO;
	reg	n0iill;
	reg	n0iOii;
	reg	n0iO0i;
	reg	n0010i;
	reg	n0010l;
	reg	n0010O;
	reg	n0011O;
	reg	n001ii;
	reg	n001il;
	reg	n001iO;
	reg	n001li;
	reg	n00lOO;
	reg	n00O0l;
	reg	n00O0O;
	reg	n00O1i;
	reg	n00Oil;
	reg	n00OiO;
	reg	n00Oli;
	reg	n00OlO;
	reg	n01lOO;
	reg	n01O0i;
	reg	n01O0l;
	reg	n01O0O;
	reg	n01O1i;
	reg	n01O1l;
	reg	n01O1O;
	reg	n01Oii;
	reg	n01Oil;
	reg	n01OiO;
	reg	n01Oli;
	reg	n01OOO;
	reg	n0ilOi;
	reg	n0ilOO;
	reg	n0iO1i;
	reg	n0iO1l;
	reg	n0l01i;
	reg	n0l01O;
	reg	n0l11l;
	reg	n0l1iO;
	reg	n0l1ll;
	reg	n0l1lO;
	reg	n0l1Oi;
	reg	n0l1Ol;
	reg	n0l1OO;
	reg	n0iOil;
	reg	n0iOli;
	reg	n0iOll;
	reg	n0iOlO;
	reg	n0iOOi;
	reg	n0iOOl;
	reg	n0iOOO;
	reg	n0l0ll;
	reg	n0l11i;
	reg	n0li0O;
	reg	n0liil;
	reg	n0lili;
	reg	n0liOi;
	reg	n0liOl;
	reg	n0liOO;
	reg	n0ll1i;
	reg	n0ll1l;
	reg	n0ll1O;
	reg	n0llli;
	reg	n0llll;
	reg	n0lllO;
	reg	n0llOi;
	reg	n0llOl;
	reg	n0llOO;
	reg	n0O10i;
	reg	n0O10l;
	reg	n0O10O;
	reg	n0O11O;
	reg	n0O1ii;
	reg	n0O1il;
	reg	n0O1iO;
	reg	n0O1li;
	reg	n0O1ll;
	reg	n0O1Oi;
	reg	n0O0ll;
	reg	n0O0Oi;
	reg	n0Oiil;
	reg	n101OO;
	reg	nlOi00O;
	reg	n0lO0O;
	reg	n0lO1i;
	reg	n0O0iO;
	reg	n0O11i;
	reg	n0Oi1i;
	reg	n0Oili;
	reg	nlil00i;
	reg	nlil00l;
	reg	nlil00O;
	reg	nlil01O;
	reg	nlil0ii;
	reg	nlil0il;
	reg	nlil0iO;
	reg	nlil0li;
	reg	nlil0ll;
	reg	nlil1lO;
	reg	nliliiO;
	reg	n0O0li;
	reg	n0O0lO;
	reg	n0OilO;
	reg	nlil01i;
	reg	nliliil;
	reg	nlilili;
	reg	n01l1i;
	reg	n01l1l;
	reg	n0OiOi;
	reg	n0OiOl;
	reg	n0OiOO;
	reg	n0Ol1l;
	reg	n0Ol0i;
	reg	n0Ol0l;
	reg	n0Ol0O;
	reg	n0Ol1O;
	reg	n0Olii;
	reg	n0Olil;
	reg	n0OliO;
	reg	n0Olli;
	reg	n0Olll;
	reg	n0OO1l;
	reg	ni00ll;
	reg	ni001i;
	reg	ni001l;
	reg	ni001O;
	reg	ni00ii;
	reg	ni00il;
	reg	ni00iO;
	reg	ni00lO;
	reg	ni00Oi;
	reg	ni00OO;
	reg	ni01Ol;
	reg	ni01OO;
	reg	ni010i;
	reg	ni010l;
	reg	ni01ii;
	reg	ni1O0l;
	reg	ni1O0O;
	reg	ni1Oii;
	reg	ni1Oil;
	reg	ni1OiO;
	reg	ni1OOi;
	reg	ni1OOl;
	reg	ni1OOO;
	reg	ni011l;
	reg	ni0lli;
	reg	ni0l0i;
	reg	ni0l0l;
	reg	ni0l0O;
	reg	ni0l1l;
	reg	ni0O0O;
	reg	ni1i1l;
	reg	ni0OOi;
	reg	ni0OOO;
	reg	nii10i;
	reg	nii10l;
	reg	nii11i;
	reg	nii11l;
	reg	nii11O;
	reg	nii1ii;
	reg	ni0lll;
	reg	ni0lOi;
	reg	ni0lOl;
	reg	ni0lOO;
	reg	ni0O0i;
	reg	ni0O1i;
	reg	ni0O1l;
	reg	ni0O1O;
	reg	nii00l;
	reg	nii00O;
	reg	nii0ii;
	reg	nii0il;
	reg	nii0iO;
	reg	nii0li;
	reg	nii0ll;
	reg	nii0lO;
	reg	nii0Oi;
	reg	nii0Ol;
	reg	nii0OO;
	reg	niii0l;
	reg	niii0O;
	reg	niii1l;
	reg	niiiii;
	reg	niiiil;
	reg	niiiiO;
	reg	niiili;
	reg	niiill;
	reg	niiilO;
	reg	nil00i;
	reg	nil01l;
	reg	nil01O;
	reg	nil0ii;
	reg	nil1Ol;
	reg	nil1OO;
	reg	ni0lii;
	reg	nil00l;
	reg	nil01i;
	reg	nil0iO;
	reg	n0l1i;
	reg	nil0O;
	reg	niliO;
	reg	nilil_clk_prev;
	wire	wire_nilil_CLRN;
	wire	wire_nilil_PRN;
	reg	n0101O;
	reg	n1i01i;
	reg	n1i0il;
	reg	n1i0iO;
	reg	n1i0li;
	reg	n1i0ll;
	reg	n1i0Oi;
	reg	n1i1lO;
	reg	nili0i;
	reg	nili0l;
	reg	niO00i;
	reg	niO01l;
	reg	niO0ii;
	reg	niO1ll;
	reg	niO1Oi;
	reg	niO1OO;
	reg	nliilOi;
	reg	nlil10l;
	reg	nlil1ii;
	reg	n0OllO;
	reg	n0OlOl;
	reg	n0OlOO;
	reg	n0OO0i;
	reg	n0OO0l;
	reg	n0OO0O;
	reg	n0OO1O;
	reg	n0OOii;
	reg	n0OOil;
	reg	n0OOiO;
	reg	n0OOli;
	reg	ni10Ol;
	reg	ni10OO;
	reg	ni1i0i;
	reg	ni1i0l;
	reg	ni1i0O;
	reg	ni1i1O;
	reg	ni1iii;
	reg	ni1iil;
	reg	ni1iiO;
	reg	ni1ili;
	reg	ni1ill;
	reg	ni1ilO;
	reg	ni1iOi;
	reg	ni1iOl;
	reg	ni1iOO;
	reg	ni1l0i;
	reg	ni1l0l;
	reg	ni1l0O;
	reg	ni1l1i;
	reg	ni1l1l;
	reg	ni1l1O;
	reg	ni1lii;
	reg	ni1lil;
	reg	ni1liO;
	reg	ni1lli;
	reg	ni1lll;
	reg	ni1llO;
	reg	ni1lOi;
	reg	ni1lOl;
	reg	ni1lOO;
	reg	ni1O1i;
	reg	ni1O1l;
	reg	ni1O1O;
	reg	nill0l;
	reg	nilOOi;
	reg	nilOOl;
	reg	nilOOO;
	reg	niO0il;
	reg	niO0li;
	reg	niO10i;
	reg	niO10l;
	reg	niO10O;
	reg	niO11i;
	reg	niO11l;
	reg	niO11O;
	reg	nl00ii;
	wire	wire_nl000O_ENA;
	reg	nl00ll;
	reg	nl00Oi;
	reg	nl00Ol;
	reg	nl00OO;
	reg	nl0i1i;
	reg	nl0i1O;
	reg	n000i;
	reg	n110i;
	reg	n111i;
	reg	n111l;
	reg	n111O;
	reg	nl00O;
	reg	nl01l;
	reg	nl0il;
	reg	nlOOOl;
	reg	nlOOOO;
	reg	nl0ii_clk_prev;
	wire	wire_nl0ii_CLRN;
	wire	wire_nl0ii_PRN;
	reg	nl0i0i;
	reg	nl0i0O;
	reg	nl0iii;
	reg	nl0iiO;
	reg	nl0ilO;
	reg	nl0iOl;
	reg	nl0iOO;
	reg	nl0l0i;
	reg	nl0l0O;
	reg	nl0l1O;
	reg	nl0iil;
	reg	nl0ili;
	reg	nl0ill;
	reg	nl0iOi;
	reg	nl0l1l;
	reg	nl0liO;
	reg	nl0lll;
	reg	nl0lli_clk_prev;
	wire	wire_nl0lli_PRN;
	reg	nl0lii;
	reg	nl0lil;
	reg	nl0lOi;
	reg	nl0llO_clk_prev;
	wire	wire_nl0llO_CLRN;
	reg	nl00l;
	reg	nl0Oi;
	reg	nl0lO_clk_prev;
	wire	wire_nl0lO_CLRN;
	wire	wire_nl0lO_PRN;
	reg	n0iil;
	reg	nil1i;
	reg	nilii;
	reg	nilli;
	reg	nilll;
	reg	nillO;
	reg	nilOi;
	reg	nilOl;
	reg	nilOO;
	reg	niO0i;
	reg	niO0l;
	reg	niO0O;
	reg	niO1i;
	reg	niO1l;
	reg	niO1O;
	reg	niOii;
	reg	niOil;
	reg	niOiO;
	reg	niOli;
	reg	niOll;
	reg	niOlO;
	reg	niOOi;
	reg	niOOl;
	reg	niOOO;
	reg	nl11l;
	reg	nl111i;
	reg	nl1i0l;
	reg	nl1i0O;
	reg	nl1iii;
	reg	nl1iil;
	reg	nl1iiO;
	reg	nl1ili;
	reg	nl1ill;
	reg	nl1ilO;
	reg	nl1iOi;
	reg	nl1iOl;
	reg	nl1iOO;
	reg	nl1l0l;
	reg	nl1l1i;
	reg	nl1l1l;
	reg	nl1l1O;
	reg	nl1li;
	reg	nl1lO;
	wire	wire_nl1ll_CLRN;
	reg	nl0lOl;
	reg	nl0O0i;
	reg	nl0O0l;
	reg	nl0O0O;
	reg	nl0O1l;
	reg	nl0O1O;
	reg	nl0Oii;
	reg	nl0Oil;
	reg	nl0OiO;
	reg	nl0Oli;
	reg	nl0Oll;
	reg	nl0OlO;
	reg	nl0OOi;
	reg	nl0OOl;
	reg	nl0OOO;
	reg	nli11l;
	reg	nli11i_clk_prev;
	wire	wire_nli11i_CLRN;
	wire	wire_nli11i_PRN;
	reg	nli00i;
	reg	nli00l;
	reg	nli00O;
	reg	nli01O;
	reg	nli0ii;
	reg	nli0il;
	reg	nli0iO;
	reg	nli0li;
	reg	nli0ll;
	reg	nli0lO;
	reg	nli0Oi;
	reg	nli0Ol;
	reg	nli0OO;
	reg	nli1OO;
	reg	nlii1i;
	reg	nlii1O;
	reg	nliiiOl;
	reg	nliil1i;
	reg	nliil0i;
	reg	nliil1l;
	reg	nlii0i;
	reg	nliilO;
	reg	nliiOl;
	reg	nliiOi_clk_prev;
	wire	wire_nliiOi_CLRN;
	reg	nliill;
	reg	nliiOO;
	reg	nlil1l;
	wire	wire_nlil1i_CLRN;
	reg	nlilill;
	reg	nliliOi;
	reg	nliOOi;
	reg	nliOlO_clk_prev;
	wire	wire_nliOlO_CLRN;
	reg	nliOli;
	reg	nliOll;
	reg	nliOOO;
	wire	wire_nliOOl_CLRN;
	reg	n0101i;
	reg	n0101l;
	reg	n0110i;
	reg	n0110l;
	reg	n0110O;
	reg	n011ii;
	reg	n011il;
	reg	n011iO;
	reg	n011li;
	reg	n011ll;
	reg	n011lO;
	reg	n011Oi;
	reg	n011Ol;
	reg	n011OO;
	reg	n01i0l;
	reg	n01i0O;
	reg	n01ill;
	reg	n01iOi;
	reg	n01iOl;
	reg	n01iOO;
	reg	n1i00l;
	reg	n1i00O;
	reg	n1i0ii;
	reg	n1i0lO;
	reg	n1i0Ol;
	reg	nili1l;
	reg	nili1O;
	reg	niliil;
	reg	nilill;
	reg	nililO;
	reg	niliOi;
	reg	niliOl;
	reg	niliOO;
	reg	nill0i;
	reg	nill1i;
	reg	nill1l;
	reg	nill1O;
	reg	niO00l;
	reg	niO01i;
	reg	niO01O;
	reg	niO0OO;
	reg	niO1ii;
	reg	niO1il;
	reg	niO1lO;
	reg	niO1Ol;
	reg	niOi0i;
	reg	niOi1l;
	reg	niOi1O;
	reg	niOiiO;
	reg	niOill;
	reg	niOiOi;
	reg	niOiOl;
	reg	niOiOO;
	reg	niOl1i;
	reg	niOl1l;
	reg	nliiliO;
	reg	nliilOO;
	reg	nliiO0i;
	reg	nliiO0l;
	reg	nliiO0O;
	reg	nliiO1i;
	reg	nliiO1l;
	reg	nliiO1O;
	reg	nliiOii;
	reg	nliiOil;
	reg	nlil10O;
	reg	nll00i;
	reg	nll00O;
	reg	nll01l;
	reg	nll01O;
	reg	n0O11l;
	reg	n0Oi0i;
	reg	n1010i;
	reg	n1010l;
	reg	n1010O;
	reg	n1011i;
	reg	n1011l;
	reg	n1011O;
	reg	n101ii;
	reg	n101il;
	reg	n101iO;
	reg	n101li;
	reg	n101ll;
	reg	n101lO;
	reg	n101Oi;
	reg	n101Ol;
	reg	n10lil;
	reg	n10liO;
	reg	n10lli;
	reg	n10lll;
	reg	n10llO;
	reg	n10lOi;
	reg	n10lOl;
	reg	n10lOO;
	reg	n10O0i;
	reg	n10O1i;
	reg	n10O1l;
	reg	n10O1O;
	reg	n11OOi;
	reg	n11OOl;
	reg	n11OOO;
	reg	n1i10O;
	reg	n1i11i;
	reg	n1i11l;
	reg	nl011i;
	reg	nl1l0O;
	reg	nl1Oil;
	reg	nl1OiO;
	reg	nl1Oli;
	reg	nl1Oll;
	reg	nl1OlO;
	reg	nl1OOi;
	reg	nl1OOl;
	reg	nl1OOO;
	reg	nli1lO;
	reg	nli1Oi;
	reg	nli1Ol;
	reg	nliOO0l;
	reg	nliOOlO;
	reg	nll000i;
	reg	nll00ii;
	reg	nll00il;
	reg	nll00iO;
	reg	nll01lO;
	reg	nll01Oi;
	reg	nll01OO;
	reg	nll0iiO;
	reg	nll0ili;
	reg	nll0iOO;
	reg	nll0l0i;
	reg	nll0l0l;
	reg	nll0l0O;
	reg	nll0l1i;
	reg	nll0l1l;
	reg	nll0l1O;
	reg	nll0lii;
	reg	nll0lil;
	reg	nll0liO;
	reg	nll0ll;
	reg	nll0lli;
	reg	nll0lll;
	reg	nll0llO;
	reg	nll0lOi;
	reg	nll0lOl;
	reg	nll0lOO;
	reg	nll0Oi;
	reg	nll0OO;
	reg	nll100i;
	reg	nll100l;
	reg	nll100O;
	reg	nll101i;
	reg	nll101l;
	reg	nll101O;
	reg	nll10ii;
	reg	nll110i;
	reg	nll110l;
	reg	nll110O;
	reg	nll111i;
	reg	nll111l;
	reg	nll111O;
	reg	nll11ii;
	reg	nll11il;
	reg	nll11iO;
	reg	nll11li;
	reg	nll11ll;
	reg	nll11lO;
	reg	nll11Oi;
	reg	nll11Ol;
	reg	nll11OO;
	reg	nlli1i;
	reg	nlli1O;
	reg	nllil0l;
	reg	nlliliO;
	reg	nllilli;
	reg	nllilll;
	reg	nllillO;
	reg	nllilOi;
	reg	nllilOl;
	reg	nllilOO;
	reg	nlliO0i;
	reg	nlliO0l;
	reg	nlliO0O;
	reg	nlliO1i;
	reg	nlliO1l;
	reg	nlliO1O;
	reg	nlliOii;
	reg	nlliOil;
	reg	nlliOiO;
	reg	nlliOli;
	reg	nlliOll;
	reg	nlliOlO;
	reg	nlliOOi;
	reg	nlliOOl;
	reg	nllO01i;
	reg	nllO01l;
	reg	nllO01O;
	reg	nllOi0O;
	reg	nllOiii;
	reg	nllOiil;
	reg	nllOiiO;
	reg	nllOO0l;
	reg	nllOO0O;
	reg	nllOOii;
	reg	nllOOil;
	reg	nllOOiO;
	reg	nllOOli;
	reg	nllOOll;
	reg	nllOOlO;
	reg	nllOOOi;
	reg	nllOOOl;
	reg	nllOOOO;
	reg	nlO100i;
	reg	nlO100l;
	reg	nlO100O;
	reg	nlO101i;
	reg	nlO101l;
	reg	nlO101O;
	reg	nlO110i;
	reg	nlO110l;
	reg	nlO110O;
	reg	nlO111i;
	reg	nlO111l;
	reg	nlO111O;
	reg	nlO11ii;
	reg	nlO11il;
	reg	nlO11iO;
	reg	nlO11li;
	reg	nlO11ll;
	reg	nlO11lO;
	reg	nlO11Oi;
	reg	nlO11Ol;
	reg	nlO11OO;
	reg	nlOi00i;
	reg	nlOi00l;
	reg	nlOi01i;
	reg	nlOi01l;
	reg	nlOi01O;
	reg	nlOi0ii;
	reg	nlOi1OO;
	reg	nlOil1i;
	reg	nlOil1l;
	reg	nlOiliO;
	reg	nlOilli;
	reg	nlOilll;
	reg	nlOillO;
	reg	nlOilOi;
	reg	nlOilOl;
	reg	nlOilOO;
	reg	nlOiO0i;
	reg	nlOiO0l;
	reg	nlOiO0O;
	reg	nlOiO1i;
	reg	nlOiO1l;
	reg	nlOiO1O;
	reg	nlOiOii;
	reg	nlOiOil;
	reg	nlOiOiO;
	reg	nlOiOli;
	reg	nlOiOll;
	reg	nlOiOlO;
	reg	nlOiOOi;
	reg	nlOiOOl;
	reg	nlOiOOO;
	reg	nlOl10i;
	reg	nlOl10l;
	reg	nlOl10O;
	reg	nlOl11i;
	reg	nlOl11l;
	reg	nlOl11O;
	reg	nlOl1ii;
	reg	nlOl1il;
	reg	nlOO00i;
	reg	nlOO00l;
	reg	nlOO00O;
	reg	nlOO01i;
	reg	nlOO01l;
	reg	nlOO01O;
	reg	nlOO0ii;
	reg	nlOO0il;
	reg	nlOO10O;
	reg	nlOO11i;
	reg	nlOO1il;
	reg	nlOO1iO;
	reg	nlOO1li;
	reg	nlOO1ll;
	reg	nlOO1lO;
	reg	nlOO1Oi;
	reg	nlOO1Ol;
	reg	nlOO1OO;
	reg	nlOOO0i;
	wire	wire_nlli1l_CLRN;
	reg	nl010i;
	reg	nlll0l;
	reg	nlOO0l;
	reg	nlOO0i_clk_prev;
	wire	wire_nlOO0i_CLRN;
	wire	wire_nlOO0i_PRN;
	reg	niOO0i;
	reg	niOO0l;
	reg	niOO0O;
	reg	niOO1i;
	reg	niOO1l;
	reg	niOO1O;
	reg	niOOii;
	reg	niOOil;
	reg	niOOiO;
	reg	niOOli;
	reg	niOOll;
	reg	niOOlO;
	reg	niOOOi;
	reg	niOOOl;
	reg	niOOOO;
	reg	nl010l;
	reg	nl011l;
	reg	nl011O;
	reg	nl1i0i;
	reg	nli10l;
	reg	nli10O;
	reg	nli11O;
	reg	nli1ll;
	reg	nlil0i;
	reg	nlil0O;
	reg	nlil1O;
	reg	nlilii;
	reg	nlilOl;
	reg	nliO0l;
	reg	nliO0O;
	reg	nliOii;
	reg	nliOil;
	reg	nll0ii;
	reg	nll0iO;
	reg	nll0li;
	reg	nll11i;
	reg	nll11l;
	reg	nll1il;
	reg	nll1iO;
	reg	nll1li;
	reg	nll1ll;
	reg	nll1lO;
	reg	nll1Oi;
	reg	nlli0i;
	reg	nlli0O;
	reg	nlliii;
	reg	nlliil;
	reg	nllilO;
	reg	nlliOi;
	reg	nlliOl;
	reg	nlliOO;
	reg	nlll0i;
	reg	nlll1i;
	reg	nlll1l;
	reg	nlll1O;
	reg	nllO0i;
	reg	nllO0l;
	reg	nllO0O;
	reg	nllO1i;
	reg	nllO1l;
	reg	nllO1O;
	reg	nllOii;
	reg	nllOil;
	reg	nllOiO;
	reg	nllOli;
	reg	nllOll;
	reg	nllOlO;
	reg	nllOOi;
	reg	nllOOl;
	reg	nllOOO;
	reg	nlO00i;
	reg	nlO00l;
	reg	nlO00O;
	reg	nlO01i;
	reg	nlO01l;
	reg	nlO01O;
	reg	nlO0ii;
	reg	nlO0il;
	reg	nlO0iO;
	reg	nlO0li;
	reg	nlO10i;
	reg	nlO10l;
	reg	nlO10O;
	reg	nlO11i;
	reg	nlO11l;
	reg	nlO11O;
	reg	nlO1ii;
	reg	nlO1il;
	reg	nlO1iO;
	reg	nlO1li;
	reg	nlO1ll;
	reg	nlO1lO;
	reg	nlO1Oi;
	reg	nlO1Ol;
	reg	nlO1OO;
	reg	nlOlOO;
	reg	nlOO1i;
	reg	nlOO1l;
	reg	nlOO1O;
	reg	nlOOii;
	reg	nlOO0O_clk_prev;
	wire	wire_nlOO0O_PRN;
	wire	wire_n0000i_dataout;
	wire	wire_n0000l_dataout;
	wire	wire_n0000O_dataout;
	wire	wire_n0001i_dataout;
	wire	wire_n0001l_dataout;
	wire	wire_n0001O_dataout;
	wire	wire_n000ii_dataout;
	wire	wire_n000il_dataout;
	wire	wire_n000iO_dataout;
	wire	wire_n000li_dataout;
	wire	wire_n000ll_dataout;
	wire	wire_n000lO_dataout;
	wire	wire_n000Oi_dataout;
	wire	wire_n000Ol_dataout;
	wire	wire_n000OO_dataout;
	wire	wire_n0011i_dataout;
	wire	wire_n0011l_dataout;
	wire	wire_n001ll_dataout;
	wire	wire_n001lO_dataout;
	wire	wire_n001Oi_dataout;
	wire	wire_n001Ol_dataout;
	wire	wire_n001OO_dataout;
	wire	wire_n00i0i_dataout;
	wire	wire_n00i0l_dataout;
	wire	wire_n00i0O_dataout;
	wire	wire_n00i1i_dataout;
	wire	wire_n00iii_dataout;
	wire	wire_n00iil_dataout;
	wire	wire_n00iiO_dataout;
	wire	wire_n00ili_dataout;
	wire	wire_n00l0i_dataout;
	wire	wire_n00l1O_dataout;
	wire	wire_n00lii_dataout;
	wire	wire_n00lil_dataout;
	wire	wire_n00liO_dataout;
	wire	wire_n00lli_dataout;
	wire	wire_n00lll_dataout;
	wire	wire_n00O1l_dataout;
	wire	wire_n00O1O_dataout;
	wire	wire_n0100i_dataout;
	wire	wire_n0100l_dataout;
	wire	wire_n0100O_dataout;
	wire	wire_n010i_dataout;
	wire	wire_n010ii_dataout;
	wire	wire_n010il_dataout;
	wire	wire_n010iO_dataout;
	wire	wire_n010l_dataout;
	wire	wire_n010li_dataout;
	wire	wire_n010ll_dataout;
	wire	wire_n010lO_dataout;
	wire	wire_n010O_dataout;
	wire	wire_n010Oi_dataout;
	wire	wire_n010Ol_dataout;
	wire	wire_n010OO_dataout;
	wire	wire_n011l_dataout;
	wire	wire_n011O_dataout;
	wire	wire_n01i0i_dataout;
	wire	wire_n01i1i_dataout;
	wire	wire_n01i1l_dataout;
	wire	wire_n01i1O_dataout;
	wire	wire_n01ii_dataout;
	wire	wire_n01iii_dataout;
	wire	wire_n01ilO_dataout;
	wire	wire_n01Oll_dataout;
	wire	wire_n0i00i_dataout;
	wire	wire_n0i00l_dataout;
	wire	wire_n0i00O_dataout;
	wire	wire_n0i01O_dataout;
	wire	wire_n0iilO_dataout;
	wire	wire_n0iiOi_dataout;
	wire	wire_n0iiOl_dataout;
	wire	wire_n0iiOO_dataout;
	wire	wire_n0il0i_dataout;
	wire	wire_n0il0l_dataout;
	wire	wire_n0il0O_dataout;
	wire	wire_n0il1O_dataout;
	wire	wire_n0ilii_dataout;
	wire	wire_n0ilil_dataout;
	wire	wire_n0iliO_dataout;
	wire	wire_n0illi_dataout;
	wire	wire_n0illl_dataout;
	wire	wire_n0illO_dataout;
	wire	wire_n0l0lO_dataout;
	wire	wire_n0l0Oi_dataout;
	wire	wire_n0lill_dataout;
	wire	wire_n0ll0i_dataout;
	wire	wire_n0ll0l_dataout;
	wire	wire_n0ll0O_dataout;
	wire	wire_n0llii_dataout;
	wire	wire_n0llil_dataout;
	wire	wire_n0lliO_dataout;
	wire	wire_n0lO0i_dataout;
	wire	wire_n0lO0l_dataout;
	wire	wire_n0lO1l_dataout;
	wire	wire_n0lO1O_dataout;
	wire	wire_n0O00i_dataout;
	wire	wire_n0O00l_dataout;
	wire	wire_n0O00O_dataout;
	wire	wire_n0O01i_dataout;
	wire	wire_n0O01l_dataout;
	wire	wire_n0O01O_dataout;
	wire	wire_n0O0ii_dataout;
	wire	wire_n0O0il_dataout;
	wire	wire_n0O1Ol_dataout;
	wire	wire_n0O1OO_dataout;
	wire	wire_n0Oi0l_dataout;
	wire	wire_n0Oi0O_dataout;
	wire	wire_n0OOll_dataout;
	wire	wire_n0OOlO_dataout;
	wire	wire_n0OOOi_dataout;
	wire	wire_n0OOOl_dataout;
	wire	wire_n0OOOO_dataout;
	wire	wire_n1000i_dataout;
	wire	wire_n1000l_dataout;
	wire	wire_n1000O_dataout;
	wire	wire_n1001i_dataout;
	wire	wire_n1001l_dataout;
	wire	wire_n1001O_dataout;
	wire	wire_n100ii_dataout;
	wire	wire_n100il_dataout;
	wire	wire_n100iO_dataout;
	wire	wire_n100li_dataout;
	wire	wire_n100ll_dataout;
	wire	wire_n100lO_dataout;
	wire	wire_n100Oi_dataout;
	wire	wire_n100Ol_dataout;
	wire	wire_n100OO_dataout;
	wire	wire_n10i0i_dataout;
	wire	wire_n10i0l_dataout;
	wire	wire_n10i0O_dataout;
	wire	wire_n10i1i_dataout;
	wire	wire_n10i1l_dataout;
	wire	wire_n10i1O_dataout;
	wire	wire_n10iii_dataout;
	wire	wire_n10iil_dataout;
	wire	wire_n10iiO_dataout;
	wire	wire_n10ili_dataout;
	wire	wire_n10ill_dataout;
	wire	wire_n10ilO_dataout;
	wire	wire_n10iOi_dataout;
	wire	wire_n10iOl_dataout;
	wire	wire_n10iOO_dataout;
	wire	wire_n10l0i_dataout;
	wire	wire_n10l0l_dataout;
	wire	wire_n10l0O_dataout;
	wire	wire_n10l1i_dataout;
	wire	wire_n10l1l_dataout;
	wire	wire_n10l1O_dataout;
	wire	wire_n10lii_dataout;
	wire	wire_n10O0l_dataout;
	wire	wire_n10O0O_dataout;
	wire	wire_n10Oii_dataout;
	wire	wire_n10Oil_dataout;
	wire	wire_n10OiO_dataout;
	wire	wire_n10Oli_dataout;
	wire	wire_n10Oll_dataout;
	wire	wire_n10OlO_dataout;
	wire	wire_n10OOi_dataout;
	wire	wire_n10OOl_dataout;
	wire	wire_n10OOO_dataout;
	wire	wire_n110ii_dataout;
	wire	wire_n110il_dataout;
	wire	wire_n110iO_dataout;
	wire	wire_n110li_dataout;
	wire	wire_n110ll_dataout;
	wire	wire_n110Oi_dataout;
	wire	wire_n110Ol_dataout;
	wire	wire_n110OO_dataout;
	wire	wire_n1111O_dataout;
	wire	wire_n111ii_dataout;
	wire	wire_n111li_dataout;
	wire	wire_n111ll_dataout;
	wire	wire_n11i0i_dataout;
	wire	wire_n11i0l_dataout;
	wire	wire_n11i0O_dataout;
	wire	wire_n11i1i_dataout;
	wire	wire_n11i1l_dataout;
	wire	wire_n11i1O_dataout;
	wire	wire_n11ii_dataout;
	wire	wire_n11iii_dataout;
	wire	wire_n11iil_dataout;
	wire	wire_n11il_dataout;
	wire	wire_n11iO_dataout;
	wire	wire_n11iOO_dataout;
	wire	wire_n11l0i_dataout;
	wire	wire_n11l0O_dataout;
	wire	wire_n11l1i_dataout;
	wire	wire_n11l1O_dataout;
	wire	wire_n11li_dataout;
	wire	wire_n11lii_dataout;
	wire	wire_n11lil_dataout;
	wire	wire_n11liO_dataout;
	wire	wire_n11lli_dataout;
	wire	wire_n11lll_dataout;
	wire	wire_n11llO_dataout;
	wire	wire_n11lOi_dataout;
	wire	wire_n11Oil_dataout;
	wire	wire_n11OiO_dataout;
	wire	wire_n1i00i_dataout;
	wire	wire_n1i01l_dataout;
	wire	wire_n1i01O_dataout;
	wire	wire_n1i0OO_dataout;
	wire	wire_n1i10i_dataout;
	wire	wire_n1i11O_dataout;
	wire	wire_n1i1Oi_dataout;
	wire	wire_n1i1Ol_dataout;
	wire	wire_n1i1OO_dataout;
	wire	wire_n1ii0i_dataout;
	wire	wire_n1ii0l_dataout;
	wire	wire_n1ii0O_dataout;
	wire	wire_n1ii1i_dataout;
	wire	wire_n1ii1l_dataout;
	wire	wire_n1ii1O_dataout;
	wire	wire_n1iii_dataout;
	wire	wire_n1iiii_dataout;
	wire	wire_n1iiil_dataout;
	wire	wire_n1iiiO_dataout;
	wire	wire_n1iil_dataout;
	wire	wire_n1iili_dataout;
	wire	wire_n1iill_dataout;
	wire	wire_n1iilO_dataout;
	wire	wire_n1iiOi_dataout;
	wire	wire_n1iiOl_dataout;
	wire	wire_n1iiOO_dataout;
	wire	wire_n1il0i_dataout;
	wire	wire_n1il0l_dataout;
	wire	wire_n1il0O_dataout;
	wire	wire_n1il1i_dataout;
	wire	wire_n1il1l_dataout;
	wire	wire_n1il1O_dataout;
	wire	wire_n1ilii_dataout;
	wire	wire_n1ilil_dataout;
	wire	wire_n1iliO_dataout;
	wire	wire_n1illi_dataout;
	wire	wire_n1illl_dataout;
	wire	wire_n1illO_dataout;
	wire	wire_n1ilOi_dataout;
	wire	wire_n1ilOl_dataout;
	wire	wire_n1ilOO_dataout;
	wire	wire_n1iO0i_dataout;
	wire	wire_n1iO0l_dataout;
	wire	wire_n1iO0O_dataout;
	wire	wire_n1iO1i_dataout;
	wire	wire_n1iO1l_dataout;
	wire	wire_n1iO1O_dataout;
	wire	wire_n1iOii_dataout;
	wire	wire_n1iOil_dataout;
	wire	wire_n1iOiO_dataout;
	wire	wire_n1iOli_dataout;
	wire	wire_n1iOll_dataout;
	wire	wire_n1iOlO_dataout;
	wire	wire_n1iOOi_dataout;
	wire	wire_n1iOOl_dataout;
	wire	wire_n1iOOO_dataout;
	wire	wire_n1l00i_dataout;
	wire	wire_n1l00l_dataout;
	wire	wire_n1l00O_dataout;
	wire	wire_n1l01i_dataout;
	wire	wire_n1l01l_dataout;
	wire	wire_n1l01O_dataout;
	wire	wire_n1l0ii_dataout;
	wire	wire_n1l0il_dataout;
	wire	wire_n1l0iO_dataout;
	wire	wire_n1l0li_dataout;
	wire	wire_n1l0ll_dataout;
	wire	wire_n1l0lO_dataout;
	wire	wire_n1l0Oi_dataout;
	wire	wire_n1l0Ol_dataout;
	wire	wire_n1l0OO_dataout;
	wire	wire_n1l10i_dataout;
	wire	wire_n1l10l_dataout;
	wire	wire_n1l10O_dataout;
	wire	wire_n1l11i_dataout;
	wire	wire_n1l11l_dataout;
	wire	wire_n1l11O_dataout;
	wire	wire_n1l1ii_dataout;
	wire	wire_n1l1il_dataout;
	wire	wire_n1l1iO_dataout;
	wire	wire_n1l1li_dataout;
	wire	wire_n1l1ll_dataout;
	wire	wire_n1l1lO_dataout;
	wire	wire_n1l1Oi_dataout;
	wire	wire_n1l1Ol_dataout;
	wire	wire_n1l1OO_dataout;
	wire	wire_n1li0i_dataout;
	wire	wire_n1li0l_dataout;
	wire	wire_n1li0O_dataout;
	wire	wire_n1li1i_dataout;
	wire	wire_n1li1l_dataout;
	wire	wire_n1li1O_dataout;
	wire	wire_n1lii_dataout;
	wire	wire_n1liii_dataout;
	wire	wire_n1liil_dataout;
	wire	wire_n1liiO_dataout;
	wire	wire_n1lil_dataout;
	wire	wire_n1lili_dataout;
	wire	wire_n1lill_dataout;
	wire	wire_n1lilO_dataout;
	wire	wire_n1liO_dataout;
	wire	wire_n1liOi_dataout;
	wire	wire_n1liOl_dataout;
	wire	wire_n1liOO_dataout;
	wire	wire_n1ll0i_dataout;
	wire	wire_n1ll0l_dataout;
	wire	wire_n1ll0O_dataout;
	wire	wire_n1ll1i_dataout;
	wire	wire_n1ll1l_dataout;
	wire	wire_n1ll1O_dataout;
	wire	wire_n1lli_dataout;
	wire	wire_n1llii_dataout;
	wire	wire_n1llil_dataout;
	wire	wire_n1lliO_dataout;
	wire	wire_n1llli_dataout;
	wire	wire_n1llll_dataout;
	wire	wire_n1lllO_dataout;
	wire	wire_n1llOi_dataout;
	wire	wire_n1llOl_dataout;
	wire	wire_n1llOO_dataout;
	wire	wire_n1lO0i_dataout;
	wire	wire_n1lO0l_dataout;
	wire	wire_n1lO0O_dataout;
	wire	wire_n1lO1i_dataout;
	wire	wire_n1lO1l_dataout;
	wire	wire_n1lO1O_dataout;
	wire	wire_n1lOii_dataout;
	wire	wire_n1lOil_dataout;
	wire	wire_n1lOiO_dataout;
	wire	wire_n1lOli_dataout;
	wire	wire_n1lOll_dataout;
	wire	wire_n1lOlO_dataout;
	wire	wire_n1lOOi_dataout;
	wire	wire_n1lOOl_dataout;
	wire	wire_n1lOOO_dataout;
	wire	wire_n1O00i_dataout;
	wire	wire_n1O00l_dataout;
	wire	wire_n1O00O_dataout;
	wire	wire_n1O01i_dataout;
	wire	wire_n1O01l_dataout;
	wire	wire_n1O01O_dataout;
	wire	wire_n1O0ii_dataout;
	wire	wire_n1O0il_dataout;
	wire	wire_n1O0iO_dataout;
	wire	wire_n1O0l_dataout;
	wire	wire_n1O0li_dataout;
	wire	wire_n1O0ll_dataout;
	wire	wire_n1O0lO_dataout;
	wire	wire_n1O0O_dataout;
	wire	wire_n1O0Oi_dataout;
	wire	wire_n1O0Ol_dataout;
	wire	wire_n1O0OO_dataout;
	wire	wire_n1O10i_dataout;
	wire	wire_n1O10l_dataout;
	wire	wire_n1O10O_dataout;
	wire	wire_n1O11i_dataout;
	wire	wire_n1O11l_dataout;
	wire	wire_n1O11O_dataout;
	wire	wire_n1O1ii_dataout;
	wire	wire_n1O1il_dataout;
	wire	wire_n1O1iO_dataout;
	wire	wire_n1O1li_dataout;
	wire	wire_n1O1ll_dataout;
	wire	wire_n1O1lO_dataout;
	wire	wire_n1O1Oi_dataout;
	wire	wire_n1O1Ol_dataout;
	wire	wire_n1O1OO_dataout;
	wire	wire_n1Oi0i_dataout;
	wire	wire_n1Oi0l_dataout;
	wire	wire_n1Oi1i_dataout;
	wire	wire_n1Oi1l_dataout;
	wire	wire_n1Oi1O_dataout;
	wire	wire_n1Oii_dataout;
	wire	wire_n1OiiO_dataout;
	wire	wire_n1Oil_dataout;
	wire	wire_n1OilO_dataout;
	wire	wire_n1OiO_dataout;
	wire	wire_n1OiOl_dataout;
	wire	wire_n1Oli_dataout;
	wire	wire_n1Olii_dataout;
	wire	wire_n1Olil_dataout;
	wire	wire_n1OliO_dataout;
	wire	wire_n1Olli_dataout;
	wire	wire_n1Olll_dataout;
	wire	wire_n1OlOi_dataout;
	wire	wire_n1OlOl_dataout;
	wire	wire_n1OlOO_dataout;
	wire	wire_n1OO0O_dataout;
	wire	wire_n1OO1i_dataout;
	wire	wire_n1OO1l_dataout;
	wire	wire_n1OOii_dataout;
	wire	wire_n1OOil_dataout;
	wire	wire_n1OOiO_dataout;
	wire	wire_n1OOli_dataout;
	wire	wire_ni01il_dataout;
	wire	wire_ni01iO_dataout;
	wire	wire_ni01li_dataout;
	wire	wire_ni01ll_dataout;
	wire	wire_ni0i0i_dataout;
	wire	wire_ni0i1i_dataout;
	wire	wire_ni0i1l_dataout;
	wire	wire_ni0i1O_dataout;
	wire	wire_ni0iii_dataout;
	wire	wire_ni0iil_dataout;
	wire	wire_ni0iiO_dataout;
	wire	wire_ni0ili_dataout;
	wire	wire_ni0ill_dataout;
	wire	wire_ni0ilO_dataout;
	wire	wire_ni0iOi_dataout;
	wire	wire_ni0iOl_dataout;
	wire	wire_ni0iOO_dataout;
	wire	wire_ni0l1i_dataout;
	wire	wire_ni10il_dataout;
	wire	wire_ni10iO_dataout;
	wire	wire_ni110i_dataout;
	wire	wire_ni110l_dataout;
	wire	wire_ni110O_dataout;
	wire	wire_ni111i_dataout;
	wire	wire_ni111l_dataout;
	wire	wire_ni111O_dataout;
	wire	wire_ni11ii_dataout;
	wire	wire_ni11il_dataout;
	wire	wire_ni11iO_dataout;
	wire	wire_ni11li_dataout;
	wire	wire_ni11ll_dataout;
	wire	wire_niii0i_dataout;
	wire	wire_niii1i_dataout;
	wire	wire_niii1O_dataout;
	wire	wire_niiiOi_dataout;
	wire	wire_niiiOl_dataout;
	wire	wire_niiiOO_dataout;
	wire	wire_niil0i_dataout;
	wire	wire_niil0l_dataout;
	wire	wire_niil0O_dataout;
	wire	wire_niil1i_dataout;
	wire	wire_niil1l_dataout;
	wire	wire_niil1O_dataout;
	wire	wire_niilii_dataout;
	wire	wire_niilil_dataout;
	wire	wire_niiliO_dataout;
	wire	wire_niilli_dataout;
	wire	wire_niilll_dataout;
	wire	wire_niillO_dataout;
	wire	wire_niilOi_dataout;
	wire	wire_niilOl_dataout;
	wire	wire_niilOO_dataout;
	wire	wire_niiO0O_dataout;
	wire	wire_niiO1i_dataout;
	wire	wire_niiO1l_dataout;
	wire	wire_niiO1O_dataout;
	wire	wire_niiOii_dataout;
	wire	wire_niiOil_dataout;
	wire	wire_niiOiO_dataout;
	wire	wire_niiOli_dataout;
	wire	wire_niiOll_dataout;
	wire	wire_niiOlO_dataout;
	wire	wire_nil10l_dataout;
	wire	wire_nil10O_dataout;
	wire	wire_nil1iO_dataout;
	wire	wire_nil1l_dataout;
	wire	wire_nil1li_dataout;
	wire	wire_nil1O_dataout;
	wire	wire_nill0O_dataout;
	wire	wire_nillii_dataout;
	wire	wire_nillil_dataout;
	wire	wire_nilliO_dataout;
	wire	wire_nillli_dataout;
	wire	wire_nillll_dataout;
	wire	wire_nilllO_dataout;
	wire	wire_nillOi_dataout;
	wire	wire_nillOl_dataout;
	wire	wire_nillOO_dataout;
	wire	wire_nilO0i_dataout;
	wire	wire_nilO0l_dataout;
	wire	wire_nilO0O_dataout;
	wire	wire_nilO1i_dataout;
	wire	wire_nilO1l_dataout;
	wire	wire_nilO1O_dataout;
	wire	wire_nilOii_dataout;
	wire	wire_nilOil_dataout;
	wire	wire_nilOiO_dataout;
	wire	wire_nilOli_dataout;
	wire	wire_niO0ll_dataout;
	wire	wire_niO1iO_dataout;
	wire	wire_niO1li_dataout;
	wire	wire_niOi0l_dataout;
	wire	wire_niOi1i_dataout;
	wire	wire_niOilO_dataout;
	wire	wire_nl000i_dataout;
	wire	wire_nl00il_dataout;
	wire	wire_nl00iO_dataout;
	wire	wire_nl010O_dataout;
	wire	wire_nl01ii_dataout;
	wire	wire_nl01il_dataout;
	wire	wire_nl01iO_dataout;
	wire	wire_nl01li_dataout;
	wire	wire_nl01ll_dataout;
	wire	wire_nl01lO_dataout;
	wire	wire_nl01O_dataout;
	wire	wire_nl01Oi_dataout;
	wire	wire_nl01Ol_dataout;
	wire	wire_nl01OO_dataout;
	wire	wire_nl101i_dataout;
	wire	wire_nl101l_dataout;
	wire	wire_nl110i_dataout;
	wire	wire_nl110l_dataout;
	wire	wire_nl110O_dataout;
	wire	wire_nl111l_dataout;
	wire	wire_nl111O_dataout;
	wire	wire_nl11ii_dataout;
	wire	wire_nl11il_dataout;
	wire	wire_nl11iO_dataout;
	wire	wire_nl11li_dataout;
	wire	wire_nl11ll_dataout;
	wire	wire_nl11lO_dataout;
	wire	wire_nl11Oi_dataout;
	wire	wire_nl11Ol_dataout;
	wire	wire_nl11OO_dataout;
	wire	wire_nl1lii_dataout;
	wire	wire_nl1lil_dataout;
	wire	wire_nl1liO_dataout;
	wire	wire_nl1lli_dataout;
	wire	wire_nl1lll_dataout;
	wire	wire_nl1llO_dataout;
	wire	wire_nl1lOi_dataout;
	wire	wire_nl1lOl_dataout;
	wire	wire_nl1lOO_dataout;
	wire	wire_nl1O0i_dataout;
	wire	wire_nl1O0l_dataout;
	wire	wire_nl1O0O_dataout;
	wire	wire_nl1O1i_dataout;
	wire	wire_nl1O1l_dataout;
	wire	wire_nl1O1O_dataout;
	wire	wire_nl1Oii_dataout;
	wire	wire_nli01i_dataout;
	wire	wire_nli01l_dataout;
	wire	wire_nli1ii_dataout;
	wire	wire_nli1il_dataout;
	wire	wire_nlii0l_dataout;
	wire	wire_nlii0O_dataout;
	wire	wire_nliiii_dataout;
	wire	wire_nliiil_dataout;
	wire	wire_nliiiO_dataout;
	wire	wire_nliili_dataout;
	wire	wire_nliilli_dataout;
	wire	wire_nliilll_dataout;
	wire	wire_nliiOiO_dataout;
	wire	wire_nliiOli_dataout;
	wire	wire_nliiOll_dataout;
	wire	wire_nliiOlO_dataout;
	wire	wire_nliiOOi_dataout;
	wire	wire_nliiOOl_dataout;
	wire	wire_nlil0lO_dataout;
	wire	wire_nlil0Oi_dataout;
	wire	wire_nlil0Ol_dataout;
	wire	wire_nlil0OO_dataout;
	wire	wire_nlil11i_dataout;
	wire	wire_nlil11l_dataout;
	wire	wire_nlil11O_dataout;
	wire	wire_nlil1Oi_dataout;
	wire	wire_nlil1Ol_dataout;
	wire	wire_nlili0i_dataout;
	wire	wire_nlili0l_dataout;
	wire	wire_nlili0O_dataout;
	wire	wire_nlili1i_dataout;
	wire	wire_nlili1l_dataout;
	wire	wire_nlilli_dataout;
	wire	wire_nlilll_dataout;
	wire	wire_nlilOO_dataout;
	wire	wire_nliO1i_dataout;
	wire	wire_nliOO0O_dataout;
	wire	wire_nliOOii_dataout;
	wire	wire_nliOOil_dataout;
	wire	wire_nliOOll_dataout;
	wire	wire_nliOOOi_dataout;
	wire	wire_nliOOOl_dataout;
	wire	wire_nliOOOO_dataout;
	wire	wire_nll000l_dataout;
	wire	wire_nll001i_dataout;
	wire	wire_nll001l_dataout;
	wire	wire_nll001O_dataout;
	wire	wire_nll00li_dataout;
	wire	wire_nll00ll_dataout;
	wire	wire_nll00lO_dataout;
	wire	wire_nll00Oi_dataout;
	wire	wire_nll00Ol_dataout;
	wire	wire_nll00OO_dataout;
	wire	wire_nll010i_dataout;
	wire	wire_nll010l_dataout;
	wire	wire_nll010O_dataout;
	wire	wire_nll011i_dataout;
	wire	wire_nll011l_dataout;
	wire	wire_nll011O_dataout;
	wire	wire_nll01ii_dataout;
	wire	wire_nll01il_dataout;
	wire	wire_nll01iO_dataout;
	wire	wire_nll01li_dataout;
	wire	wire_nll01Ol_dataout;
	wire	wire_nll0i0i_dataout;
	wire	wire_nll0i0l_dataout;
	wire	wire_nll0i0O_dataout;
	wire	wire_nll0i1i_dataout;
	wire	wire_nll0i1l_dataout;
	wire	wire_nll0i1O_dataout;
	wire	wire_nll0ill_dataout;
	wire	wire_nll0ilO_dataout;
	wire	wire_nll0lO_dataout;
	wire	wire_nll0O0i_dataout;
	wire	wire_nll0O0l_dataout;
	wire	wire_nll0O0O_dataout;
	wire	wire_nll0O1i_dataout;
	wire	wire_nll0O1l_dataout;
	wire	wire_nll0O1O_dataout;
	wire	wire_nll0Oii_dataout;
	wire	wire_nll0Oil_dataout;
	wire	wire_nll0OiO_dataout;
	wire	wire_nll0Oli_dataout;
	wire	wire_nll0Oll_dataout;
	wire	wire_nll0OlO_dataout;
	wire	wire_nll0OOi_dataout;
	wire	wire_nll0OOl_dataout;
	wire	wire_nll0OOO_dataout;
	wire	wire_nll10i_dataout;
	wire	wire_nll10il_dataout;
	wire	wire_nll10iO_dataout;
	wire	wire_nll10l_dataout;
	wire	wire_nll10li_dataout;
	wire	wire_nll10ll_dataout;
	wire	wire_nll10lO_dataout;
	wire	wire_nll10O_dataout;
	wire	wire_nll10Oi_dataout;
	wire	wire_nll10Ol_dataout;
	wire	wire_nll10OO_dataout;
	wire	wire_nll11O_dataout;
	wire	wire_nll1i0i_dataout;
	wire	wire_nll1i0l_dataout;
	wire	wire_nll1i0O_dataout;
	wire	wire_nll1i1i_dataout;
	wire	wire_nll1i1l_dataout;
	wire	wire_nll1i1O_dataout;
	wire	wire_nll1iii_dataout;
	wire	wire_nll1iil_dataout;
	wire	wire_nll1iiO_dataout;
	wire	wire_nll1ili_dataout;
	wire	wire_nll1ill_dataout;
	wire	wire_nll1ilO_dataout;
	wire	wire_nll1iOi_dataout;
	wire	wire_nll1iOl_dataout;
	wire	wire_nll1iOO_dataout;
	wire	wire_nll1l0i_dataout;
	wire	wire_nll1l0l_dataout;
	wire	wire_nll1l0O_dataout;
	wire	wire_nll1l1i_dataout;
	wire	wire_nll1l1l_dataout;
	wire	wire_nll1l1O_dataout;
	wire	wire_nll1lii_dataout;
	wire	wire_nll1lil_dataout;
	wire	wire_nll1liO_dataout;
	wire	wire_nll1lli_dataout;
	wire	wire_nll1lll_dataout;
	wire	wire_nll1llO_dataout;
	wire	wire_nll1lOi_dataout;
	wire	wire_nll1lOl_dataout;
	wire	wire_nll1lOO_dataout;
	wire	wire_nll1O0i_dataout;
	wire	wire_nll1O0l_dataout;
	wire	wire_nll1O0O_dataout;
	wire	wire_nll1O1i_dataout;
	wire	wire_nll1O1l_dataout;
	wire	wire_nll1O1O_dataout;
	wire	wire_nll1Oii_dataout;
	wire	wire_nll1Oil_dataout;
	wire	wire_nll1OiO_dataout;
	wire	wire_nll1Oli_dataout;
	wire	wire_nll1Oll_dataout;
	wire	wire_nll1OlO_dataout;
	wire	wire_nll1OOi_dataout;
	wire	wire_nll1OOl_dataout;
	wire	wire_nll1OOO_dataout;
	wire	wire_nlli00i_dataout;
	wire	wire_nlli00l_dataout;
	wire	wire_nlli00O_dataout;
	wire	wire_nlli01i_dataout;
	wire	wire_nlli01l_dataout;
	wire	wire_nlli01O_dataout;
	wire	wire_nlli0ii_dataout;
	wire	wire_nlli0il_dataout;
	wire	wire_nlli0iO_dataout;
	wire	wire_nlli0li_dataout;
	wire	wire_nlli0ll_dataout;
	wire	wire_nlli0lO_dataout;
	wire	wire_nlli0Oi_dataout;
	wire	wire_nlli0Ol_dataout;
	wire	wire_nlli0OO_dataout;
	wire	wire_nlli10i_dataout;
	wire	wire_nlli10l_dataout;
	wire	wire_nlli10O_dataout;
	wire	wire_nlli11i_dataout;
	wire	wire_nlli11l_dataout;
	wire	wire_nlli11O_dataout;
	wire	wire_nlli1ii_dataout;
	wire	wire_nlli1il_dataout;
	wire	wire_nlli1iO_dataout;
	wire	wire_nlli1li_dataout;
	wire	wire_nlli1ll_dataout;
	wire	wire_nlli1lO_dataout;
	wire	wire_nlli1Oi_dataout;
	wire	wire_nlli1Ol_dataout;
	wire	wire_nlli1OO_dataout;
	wire	wire_nllii0i_dataout;
	wire	wire_nllii0l_dataout;
	wire	wire_nllii0O_dataout;
	wire	wire_nllii1i_dataout;
	wire	wire_nllii1l_dataout;
	wire	wire_nllii1O_dataout;
	wire	wire_nlliiii_dataout;
	wire	wire_nlliiil_dataout;
	wire	wire_nlliiiO_dataout;
	wire	wire_nlliili_dataout;
	wire	wire_nlliill_dataout;
	wire	wire_nlliilO_dataout;
	wire	wire_nlliiO_dataout;
	wire	wire_nlliiOi_dataout;
	wire	wire_nlliiOl_dataout;
	wire	wire_nlliiOO_dataout;
	wire	wire_nllil0i_dataout;
	wire	wire_nllil0O_dataout;
	wire	wire_nllil1i_dataout;
	wire	wire_nllil1l_dataout;
	wire	wire_nllil1O_dataout;
	wire	wire_nllilii_dataout;
	wire	wire_nlliOOO_dataout;
	wire	wire_nlll00i_dataout;
	wire	wire_nlll00l_dataout;
	wire	wire_nlll00O_dataout;
	wire	wire_nlll01i_dataout;
	wire	wire_nlll01l_dataout;
	wire	wire_nlll01O_dataout;
	wire	wire_nlll0ii_dataout;
	wire	wire_nlll0il_dataout;
	wire	wire_nlll0iO_dataout;
	wire	wire_nlll0li_dataout;
	wire	wire_nlll0ll_dataout;
	wire	wire_nlll0lO_dataout;
	wire	wire_nlll0O_dataout;
	wire	wire_nlll0Oi_dataout;
	wire	wire_nlll0Ol_dataout;
	wire	wire_nlll0OO_dataout;
	wire	wire_nlll10i_dataout;
	wire	wire_nlll10l_dataout;
	wire	wire_nlll10O_dataout;
	wire	wire_nlll11i_dataout;
	wire	wire_nlll11l_dataout;
	wire	wire_nlll11O_dataout;
	wire	wire_nlll1ii_dataout;
	wire	wire_nlll1il_dataout;
	wire	wire_nlll1iO_dataout;
	wire	wire_nlll1li_dataout;
	wire	wire_nlll1ll_dataout;
	wire	wire_nlll1lO_dataout;
	wire	wire_nlll1Oi_dataout;
	wire	wire_nlll1Ol_dataout;
	wire	wire_nlll1OO_dataout;
	wire	wire_nllli0i_dataout;
	wire	wire_nllli0l_dataout;
	wire	wire_nllli0O_dataout;
	wire	wire_nllli1i_dataout;
	wire	wire_nllli1l_dataout;
	wire	wire_nllli1O_dataout;
	wire	wire_nlllii_dataout;
	wire	wire_nllliii_dataout;
	wire	wire_nllliil_dataout;
	wire	wire_nllliiO_dataout;
	wire	wire_nlllil_dataout;
	wire	wire_nlllili_dataout;
	wire	wire_nlllill_dataout;
	wire	wire_nlllilO_dataout;
	wire	wire_nllliO_dataout;
	wire	wire_nllliOi_dataout;
	wire	wire_nllliOl_dataout;
	wire	wire_nllliOO_dataout;
	wire	wire_nllll0i_dataout;
	wire	wire_nllll0l_dataout;
	wire	wire_nllll0O_dataout;
	wire	wire_nllll1i_dataout;
	wire	wire_nllll1l_dataout;
	wire	wire_nllll1O_dataout;
	wire	wire_nlllli_dataout;
	wire	wire_nllllii_dataout;
	wire	wire_nllllil_dataout;
	wire	wire_nlllliO_dataout;
	wire	wire_nlllll_dataout;
	wire	wire_nllllli_dataout;
	wire	wire_nllllll_dataout;
	wire	wire_nlllllO_dataout;
	wire	wire_nllllO_dataout;
	wire	wire_nllllOi_dataout;
	wire	wire_nllllOl_dataout;
	wire	wire_nllllOO_dataout;
	wire	wire_nlllO0i_dataout;
	wire	wire_nlllO0l_dataout;
	wire	wire_nlllO0O_dataout;
	wire	wire_nlllO1i_dataout;
	wire	wire_nlllO1l_dataout;
	wire	wire_nlllO1O_dataout;
	wire	wire_nlllOi_dataout;
	wire	wire_nlllOii_dataout;
	wire	wire_nlllOil_dataout;
	wire	wire_nlllOiO_dataout;
	wire	wire_nlllOli_dataout;
	wire	wire_nlllOll_dataout;
	wire	wire_nlllOlO_dataout;
	wire	wire_nlllOOi_dataout;
	wire	wire_nlllOOl_dataout;
	wire	wire_nlllOOO_dataout;
	wire	wire_nllO00i_dataout;
	wire	wire_nllO00l_dataout;
	wire	wire_nllO00O_dataout;
	wire	wire_nllO10i_dataout;
	wire	wire_nllO10l_dataout;
	wire	wire_nllO10O_dataout;
	wire	wire_nllO11i_dataout;
	wire	wire_nllO11l_dataout;
	wire	wire_nllO11O_dataout;
	wire	wire_nllO1ii_dataout;
	wire	wire_nllO1il_dataout;
	wire	wire_nllOili_dataout;
	wire	wire_nllOill_dataout;
	wire	wire_nllOilO_dataout;
	wire	wire_nllOiOi_dataout;
	wire	wire_nllOiOl_dataout;
	wire	wire_nllOiOO_dataout;
	wire	wire_nllOl0i_dataout;
	wire	wire_nllOl0l_dataout;
	wire	wire_nllOl0O_dataout;
	wire	wire_nllOl1i_dataout;
	wire	wire_nllOl1l_dataout;
	wire	wire_nllOl1O_dataout;
	wire	wire_nllOliO_dataout;
	wire	wire_nllOlli_dataout;
	wire	wire_nllOlll_dataout;
	wire	wire_nllOllO_dataout;
	wire	wire_nllOlOi_dataout;
	wire	wire_nllOlOl_dataout;
	wire	wire_nllOlOO_dataout;
	wire	wire_nllOO1i_dataout;
	wire	wire_nlO000i_dataout;
	wire	wire_nlO000l_dataout;
	wire	wire_nlO000O_dataout;
	wire	wire_nlO001i_dataout;
	wire	wire_nlO001l_dataout;
	wire	wire_nlO001O_dataout;
	wire	wire_nlO00ii_dataout;
	wire	wire_nlO00il_dataout;
	wire	wire_nlO00iO_dataout;
	wire	wire_nlO00li_dataout;
	wire	wire_nlO00lO_dataout;
	wire	wire_nlO00Oi_dataout;
	wire	wire_nlO00Ol_dataout;
	wire	wire_nlO00OO_dataout;
	wire	wire_nlO010i_dataout;
	wire	wire_nlO010l_dataout;
	wire	wire_nlO010O_dataout;
	wire	wire_nlO011i_dataout;
	wire	wire_nlO011l_dataout;
	wire	wire_nlO011O_dataout;
	wire	wire_nlO01ii_dataout;
	wire	wire_nlO01il_dataout;
	wire	wire_nlO01iO_dataout;
	wire	wire_nlO01li_dataout;
	wire	wire_nlO01ll_dataout;
	wire	wire_nlO01lO_dataout;
	wire	wire_nlO01Oi_dataout;
	wire	wire_nlO01Ol_dataout;
	wire	wire_nlO01OO_dataout;
	wire	wire_nlO0i0i_dataout;
	wire	wire_nlO0i0l_dataout;
	wire	wire_nlO0i0O_dataout;
	wire	wire_nlO0i1i_dataout;
	wire	wire_nlO0i1l_dataout;
	wire	wire_nlO0i1O_dataout;
	wire	wire_nlO0iii_dataout;
	wire	wire_nlO0iil_dataout;
	wire	wire_nlO0iiO_dataout;
	wire	wire_nlO0ili_dataout;
	wire	wire_nlO0ill_dataout;
	wire	wire_nlO0ilO_dataout;
	wire	wire_nlO0iOi_dataout;
	wire	wire_nlO0iOl_dataout;
	wire	wire_nlO0iOO_dataout;
	wire	wire_nlO0l0i_dataout;
	wire	wire_nlO0l0l_dataout;
	wire	wire_nlO0l0O_dataout;
	wire	wire_nlO0l1i_dataout;
	wire	wire_nlO0l1l_dataout;
	wire	wire_nlO0l1O_dataout;
	wire	wire_nlO0lii_dataout;
	wire	wire_nlO0lil_dataout;
	wire	wire_nlO0liO_dataout;
	wire	wire_nlO0ll_dataout;
	wire	wire_nlO0lli_dataout;
	wire	wire_nlO0lll_dataout;
	wire	wire_nlO0llO_dataout;
	wire	wire_nlO0lOi_dataout;
	wire	wire_nlO0OOO_dataout;
	wire	wire_nlO10ii_dataout;
	wire	wire_nlO10il_dataout;
	wire	wire_nlO10iO_dataout;
	wire	wire_nlO10li_dataout;
	wire	wire_nlO10ll_dataout;
	wire	wire_nlO10lO_dataout;
	wire	wire_nlO10Oi_dataout;
	wire	wire_nlO10Ol_dataout;
	wire	wire_nlO10OO_dataout;
	wire	wire_nlO1i0i_dataout;
	wire	wire_nlO1i0l_dataout;
	wire	wire_nlO1i0O_dataout;
	wire	wire_nlO1i1i_dataout;
	wire	wire_nlO1i1l_dataout;
	wire	wire_nlO1i1O_dataout;
	wire	wire_nlO1iii_dataout;
	wire	wire_nlO1iil_dataout;
	wire	wire_nlO1iiO_dataout;
	wire	wire_nlO1ili_dataout;
	wire	wire_nlO1ill_dataout;
	wire	wire_nlO1ilO_dataout;
	wire	wire_nlO1iOi_dataout;
	wire	wire_nlO1iOl_dataout;
	wire	wire_nlO1iOO_dataout;
	wire	wire_nlO1l0i_dataout;
	wire	wire_nlO1l0l_dataout;
	wire	wire_nlO1l0O_dataout;
	wire	wire_nlO1l1i_dataout;
	wire	wire_nlO1l1l_dataout;
	wire	wire_nlO1l1O_dataout;
	wire	wire_nlO1lii_dataout;
	wire	wire_nlO1lil_dataout;
	wire	wire_nlO1liO_dataout;
	wire	wire_nlO1lli_dataout;
	wire	wire_nlO1lll_dataout;
	wire	wire_nlO1llO_dataout;
	wire	wire_nlO1lOi_dataout;
	wire	wire_nlO1lOl_dataout;
	wire	wire_nlO1lOO_dataout;
	wire	wire_nlO1O0i_dataout;
	wire	wire_nlO1O0l_dataout;
	wire	wire_nlO1O0O_dataout;
	wire	wire_nlO1O1i_dataout;
	wire	wire_nlO1O1l_dataout;
	wire	wire_nlO1O1O_dataout;
	wire	wire_nlO1Oii_dataout;
	wire	wire_nlO1Oil_dataout;
	wire	wire_nlO1OiO_dataout;
	wire	wire_nlO1Oli_dataout;
	wire	wire_nlO1Oll_dataout;
	wire	wire_nlO1OlO_dataout;
	wire	wire_nlO1OOi_dataout;
	wire	wire_nlO1OOl_dataout;
	wire	wire_nlO1OOO_dataout;
	wire	wire_nlOi0il_dataout;
	wire	wire_nlOi0iO_dataout;
	wire	wire_nlOi0li_dataout;
	wire	wire_nlOi0ll_dataout;
	wire	wire_nlOi0lO_dataout;
	wire	wire_nlOi0Oi_dataout;
	wire	wire_nlOi0Ol_dataout;
	wire	wire_nlOi0OO_dataout;
	wire	wire_nlOi10i_dataout;
	wire	wire_nlOi11i_dataout;
	wire	wire_nlOi11O_dataout;
	wire	wire_nlOi1ii_dataout;
	wire	wire_nlOi1il_dataout;
	wire	wire_nlOi1iO_dataout;
	wire	wire_nlOi1li_dataout;
	wire	wire_nlOiiO_dataout;
	wire	wire_nlOil0i_dataout;
	wire	wire_nlOil0l_dataout;
	wire	wire_nlOil1O_dataout;
	wire	wire_nlOili_dataout;
	wire	wire_nlOill_dataout;
	wire	wire_nlOilO_dataout;
	wire	wire_nlOiOi_dataout;
	wire	wire_nlOiOl_dataout;
	wire	wire_nlOiOO_dataout;
	wire	wire_nlOl00i_dataout;
	wire	wire_nlOl00l_dataout;
	wire	wire_nlOl00O_dataout;
	wire	wire_nlOl01i_dataout;
	wire	wire_nlOl01l_dataout;
	wire	wire_nlOl01O_dataout;
	wire	wire_nlOl0i_dataout;
	wire	wire_nlOl0ii_dataout;
	wire	wire_nlOl0il_dataout;
	wire	wire_nlOl0iO_dataout;
	wire	wire_nlOl0l_dataout;
	wire	wire_nlOl0li_dataout;
	wire	wire_nlOl0ll_dataout;
	wire	wire_nlOl0lO_dataout;
	wire	wire_nlOl0O_dataout;
	wire	wire_nlOl0Oi_dataout;
	wire	wire_nlOl0Ol_dataout;
	wire	wire_nlOl0OO_dataout;
	wire	wire_nlOl1i_dataout;
	wire	wire_nlOl1iO_dataout;
	wire	wire_nlOl1l_dataout;
	wire	wire_nlOl1li_dataout;
	wire	wire_nlOl1ll_dataout;
	wire	wire_nlOl1lO_dataout;
	wire	wire_nlOl1O_dataout;
	wire	wire_nlOl1Oi_dataout;
	wire	wire_nlOl1Ol_dataout;
	wire	wire_nlOl1OO_dataout;
	wire	wire_nlOli0i_dataout;
	wire	wire_nlOli0l_dataout;
	wire	wire_nlOli0O_dataout;
	wire	wire_nlOli1i_dataout;
	wire	wire_nlOli1l_dataout;
	wire	wire_nlOli1O_dataout;
	wire	wire_nlOlii_dataout;
	wire	wire_nlOliii_dataout;
	wire	wire_nlOliil_dataout;
	wire	wire_nlOliiO_dataout;
	wire	wire_nlOlili_dataout;
	wire	wire_nlOlill_dataout;
	wire	wire_nlOlilO_dataout;
	wire	wire_nlOll1i_dataout;
	wire	wire_nlOll1l_dataout;
	wire	wire_nlOllll_dataout;
	wire	wire_nlOlllO_dataout;
	wire	wire_nlOllOi_dataout;
	wire	wire_nlOllOl_dataout;
	wire	wire_nlOllOO_dataout;
	wire	wire_nlOlO0i_dataout;
	wire	wire_nlOlO0l_dataout;
	wire	wire_nlOlO0O_dataout;
	wire	wire_nlOlO1i_dataout;
	wire	wire_nlOlO1l_dataout;
	wire	wire_nlOlO1O_dataout;
	wire	wire_nlOlOii_dataout;
	wire	wire_nlOlOil_dataout;
	wire	wire_nlOlOiO_dataout;
	wire	wire_nlOlOli_dataout;
	wire	wire_nlOlOll_dataout;
	wire	wire_nlOlOlO_dataout;
	wire	wire_nlOlOOi_dataout;
	wire	wire_nlOlOOl_dataout;
	wire	wire_nlOO0iO_dataout;
	wire	wire_nlOO0li_dataout;
	wire	wire_nlOO0ll_dataout;
	wire	wire_nlOO0lO_dataout;
	wire	wire_nlOO0Oi_dataout;
	wire	wire_nlOO0Ol_dataout;
	wire	wire_nlOO0OO_dataout;
	wire	wire_nlOO11l_dataout;
	wire	wire_nlOO1ii_dataout;
	wire	wire_nlOOi0i_dataout;
	wire	wire_nlOOi0l_dataout;
	wire	wire_nlOOi0O_dataout;
	wire	wire_nlOOi1i_dataout;
	wire	wire_nlOOi1l_dataout;
	wire	wire_nlOOi1O_dataout;
	wire	wire_nlOOiii_dataout;
	wire	wire_nlOOiil_dataout;
	wire	wire_nlOOiiO_dataout;
	wire	wire_nlOOil_dataout;
	wire	wire_nlOOili_dataout;
	wire	wire_nlOOill_dataout;
	wire	wire_nlOOilO_dataout;
	wire	wire_nlOOiO_dataout;
	wire	wire_nlOOiOi_dataout;
	wire	wire_nlOOiOl_dataout;
	wire	wire_nlOOiOO_dataout;
	wire	wire_nlOOl0i_dataout;
	wire	wire_nlOOl0l_dataout;
	wire	wire_nlOOl0O_dataout;
	wire	wire_nlOOl1i_dataout;
	wire	wire_nlOOl1l_dataout;
	wire	wire_nlOOl1O_dataout;
	wire	wire_nlOOlii_dataout;
	wire	wire_nlOOlil_dataout;
	wire	wire_nlOOliO_dataout;
	wire	wire_nlOOlli_dataout;
	wire	wire_nlOOlll_dataout;
	wire	wire_nlOOllO_dataout;
	wire	wire_nlOOlOi_dataout;
	wire	wire_nlOOlOl_dataout;
	wire	wire_nlOOlOO_dataout;
	wire	wire_nlOOO0l_dataout;
	wire	wire_nlOOO0O_dataout;
	wire	wire_nlOOO1i_dataout;
	wire	wire_nlOOO1l_dataout;
	wire	wire_nlOOO1O_dataout;
	wire	wire_nlOOOli_dataout;
	wire	wire_nlOOOll_dataout;
	wire  [6:0]   wire_n00i1l_o;
	wire  [1:0]   wire_n00O0i_o;
	wire  [3:0]   wire_n01il_o;
	wire  [3:0]   wire_n0i0ii_o;
	wire  [3:0]   wire_n0il1i_o;
	wire  [4:0]   wire_n0ilOl_o;
	wire  [4:0]   wire_n0iO0l_o;
	wire  [2:0]   wire_n11ll_o;
	wire  [2:0]   wire_n1iiO_o;
	wire  [4:0]   wire_n1lll_o;
	wire  [3:0]   wire_n1Oll_o;
	wire  [3:0]   wire_ni01lO_o;
	wire  [3:0]   wire_ni0i0l_o;
	wire  [4:0]   wire_ni0l1O_o;
	wire  [4:0]   wire_ni0lil_o;
	wire  [6:0]   wire_niiO0i_o;
	wire  [5:0]   wire_nliiOOO_o;
	wire  [2:0]   wire_nlil10i_o;
	wire  [5:0]   wire_nlili1O_o;
	wire  [2:0]   wire_nliliii_o;
	wire  [20:0]   wire_nll01ll_o;
	wire  [2:0]   wire_nll0iii_o;
	wire  [7:0]   wire_nlllOl_o;
	wire  [20:0]   wire_nllO1iO_o;
	wire  [1:0]   wire_nllOlii_o;
	wire  [1:0]   wire_nllOO1l_o;
	wire  [0:0]   wire_nlOOli_o;
	wire  [1:0]   wire_n01iil_o;
	wire  [1:0]   wire_n0lilO_o;
	wire  [1:0]   wire_niO0lO_o;
	wire  [1:0]   wire_niOi0O_o;
	wire  wire_n00i1O_o;
	wire  wire_n0i0il_o;
	wire  wire_n0il1l_o;
	wire  wire_n0iOiO_o;
	wire  wire_n0l1li_o;
	wire  wire_ni01Oi_o;
	wire  wire_ni0i0O_o;
	wire  wire_ni0llO_o;
	wire  wire_ni0OOl_o;
	wire  wire_niiO0l_o;
	wire  wire_nllill_o;
	wire  wire_nl100i_o;
	wire  wire_nl100l_o;
	wire  wire_nl100O_o;
	wire  wire_nl101O_o;
	wire  wire_nl10ii_o;
	wire  wire_nl10il_o;
	wire  wire_nl10iO_o;
	wire  wire_nl10li_o;
	wire  wire_nl10ll_o;
	wire  wire_nl10lO_o;
	wire  wire_nl10Oi_o;
	wire  wire_nl10Ol_o;
	wire  wire_nl10OO_o;
	wire  wire_nl1i1i_o;
	wire  wire_nl1i1l_o;
	wire  wire_nl1i1O_o;
	wire  wire_n00ill_o;
	wire  wire_n00iOi_o;
	wire  wire_n00iOO_o;
	wire  wire_n00l1l_o;
	wire  wire_n1100l_o;
	wire  wire_n1101i_o;
	wire  wire_n1101O_o;
	wire  wire_n1110i_o;
	wire  wire_n1110l_o;
	wire  wire_n1111i_o;
	wire  wire_n111il_o;
	wire  wire_n111lO_o;
	wire  wire_n111Ol_o;
	wire  wire_n1Oili_o;
	wire  wire_n1OiOi_o;
	wire  wire_n1OiOO_o;
	wire  wire_n1Ol0l_o;
	wire  wire_n1Ol1O_o;
	wire  wire_ni101l_o;
	wire  wire_ni11lO_o;
	wire  wire_ni11Oi_o;
	wire  wire_ni11OO_o;
	wire  wire_niiOOi_o;
	wire  wire_niiOOO_o;
	wire  wire_nil10i_o;
	wire  wire_nil11l_o;
	wire  wire_nlO0lO_o;
	wire  wire_nlO0lOl_o;
	wire  wire_nlO0O0l_o;
	wire  wire_nlO0O1i_o;
	wire  wire_nlO0O1O_o;
	wire  wire_nlO0Oii_o;
	wire  wire_nlO0OiO_o;
	wire  wire_nlO0Ol_o;
	wire  wire_nlO0Oll_o;
	wire  wire_nlO0OOi_o;
	wire  wire_nlOi0l_o;
	wire  wire_nlOi1i_o;
	wire  wire_nlOi1O_o;
	wire  wire_nlOOOil_o;
	wire  wire_nlOOOlO_o;
	wire  wire_nlOOOOl_o;
	wire  nl0O00i;
	wire  nl0O00l;
	wire  nl0O00O;
	wire  nl0O01i;
	wire  nl0O01l;
	wire  nl0O01O;
	wire  nl0O0ii;
	wire  nl0O0il;
	wire  nl0O0iO;
	wire  nl0O0li;
	wire  nl0O0ll;
	wire  nl0O0lO;
	wire  nl0O0Oi;
	wire  nl0O0Ol;
	wire  nl0O0OO;
	wire  nl0O1OO;
	wire  nl0Oi0i;
	wire  nl0Oi0l;
	wire  nl0Oi0O;
	wire  nl0Oi1i;
	wire  nl0Oi1l;
	wire  nl0Oi1O;
	wire  nl0Oiii;
	wire  nl0Oiil;
	wire  nl0OiiO;
	wire  nl0Oili;
	wire  nl0Oill;
	wire  nl0OilO;
	wire  nl0OiOi;
	wire  nl0OiOl;
	wire  nl0OiOO;
	wire  nl0Ol0i;
	wire  nl0Ol0l;
	wire  nl0Ol0O;
	wire  nl0Ol1i;
	wire  nl0Ol1l;
	wire  nl0Ol1O;
	wire  nl0Olii;
	wire  nl0Olil;
	wire  nl0OliO;
	wire  nl0Olli;
	wire  nl0Olll;
	wire  nl0OllO;
	wire  nl0OlOi;
	wire  nl0OlOl;
	wire  nl0OlOO;
	wire  nl0OO0i;
	wire  nl0OO0l;
	wire  nl0OO0O;
	wire  nl0OO1i;
	wire  nl0OO1l;
	wire  nl0OO1O;
	wire  nl0OOii;
	wire  nl0OOil;
	wire  nl0OOiO;
	wire  nl0OOli;
	wire  nl0OOll;
	wire  nl0OOlO;
	wire  nl0OOOi;
	wire  nl0OOOl;
	wire  nl0OOOO;
	wire  nli000i;
	wire  nli000l;
	wire  nli000O;
	wire  nli001i;
	wire  nli001l;
	wire  nli001O;
	wire  nli00ii;
	wire  nli00il;
	wire  nli00iO;
	wire  nli00li;
	wire  nli00ll;
	wire  nli00lO;
	wire  nli010i;
	wire  nli011l;
	wire  nli011O;
	wire  nli01ii;
	wire  nli01il;
	wire  nli01iO;
	wire  nli01lO;
	wire  nli01Oi;
	wire  nli01OO;
	wire  nli0i0i;
	wire  nli0i0l;
	wire  nli0i0O;
	wire  nli0i1i;
	wire  nli0i1l;
	wire  nli0i1O;
	wire  nli0iii;
	wire  nli0iil;
	wire  nli0iiO;
	wire  nli0ili;
	wire  nli0ill;
	wire  nli0ilO;
	wire  nli0iOi;
	wire  nli0iOl;
	wire  nli0l0i;
	wire  nli0l0l;
	wire  nli0l0O;
	wire  nli0l1i;
	wire  nli0l1l;
	wire  nli0l1O;
	wire  nli0lii;
	wire  nli0lil;
	wire  nli0liO;
	wire  nli0lli;
	wire  nli0lll;
	wire  nli0lOl;
	wire  nli0O0O;
	wire  nli0OiO;
	wire  nli0OOl;
	wire  nli100i;
	wire  nli100l;
	wire  nli100O;
	wire  nli101i;
	wire  nli101l;
	wire  nli101O;
	wire  nli10ii;
	wire  nli10il;
	wire  nli10iO;
	wire  nli10li;
	wire  nli10ll;
	wire  nli10lO;
	wire  nli10Oi;
	wire  nli10Ol;
	wire  nli10OO;
	wire  nli110i;
	wire  nli110l;
	wire  nli110O;
	wire  nli111i;
	wire  nli111l;
	wire  nli111O;
	wire  nli11ii;
	wire  nli11il;
	wire  nli11iO;
	wire  nli11li;
	wire  nli11ll;
	wire  nli11lO;
	wire  nli11Oi;
	wire  nli11Ol;
	wire  nli11OO;
	wire  nli1i0i;
	wire  nli1i0l;
	wire  nli1i0O;
	wire  nli1i1i;
	wire  nli1i1l;
	wire  nli1i1O;
	wire  nli1iii;
	wire  nli1iil;
	wire  nli1iiO;
	wire  nli1ili;
	wire  nli1ill;
	wire  nli1ilO;
	wire  nli1iOi;
	wire  nli1iOl;
	wire  nli1iOO;
	wire  nli1l0i;
	wire  nli1l0l;
	wire  nli1l0O;
	wire  nli1l1i;
	wire  nli1l1l;
	wire  nli1l1O;
	wire  nli1lii;
	wire  nli1lil;
	wire  nli1liO;
	wire  nli1lli;
	wire  nli1lll;
	wire  nli1llO;
	wire  nli1lOi;
	wire  nli1lOl;
	wire  nli1lOO;
	wire  nli1O0i;
	wire  nli1O0l;
	wire  nli1O0O;
	wire  nli1O1i;
	wire  nli1O1l;
	wire  nli1O1O;
	wire  nli1Oii;
	wire  nli1Oil;
	wire  nli1Oll;
	wire  nli1OlO;
	wire  nli1OOi;
	wire  nli1OOl;
	wire  nlii00O;
	wire  nlii0lO;
	wire  nlii0Oi;
	wire  nlii11l;
	wire  nlii1ii;
	wire  nlii1Ol;
	wire  nliii0i;
	wire  nliii0l;
	wire  nliii1O;

	altera_std_synchronizer   n1i1ii
	( 
	.clk(wire_nl10l_clkout),
	.din(nll0iiO),
	.dout(wire_n1i1ii_dout),
	.reset_n((~ nliii1O)));
	defparam
		n1i1ii.depth = 3;
	altera_std_synchronizer   n1i1il
	( 
	.clk(wire_nl10l_clkout),
	.din(nll00iO),
	.dout(wire_n1i1il_dout),
	.reset_n((~ nliii1O)));
	defparam
		n1i1il.depth = 3;
	altera_std_synchronizer   n1i1li
	( 
	.clk(wire_nl10l_clkout),
	.din(nlilOl),
	.dout(wire_n1i1li_dout),
	.reset_n((~ nliii1O)));
	defparam
		n1i1li.depth = 3;
	altera_std_synchronizer   n1i1ll
	( 
	.clk(wire_nl10l_clkout),
	.din(nliO0l),
	.dout(wire_n1i1ll_dout),
	.reset_n((~ nliii1O)));
	defparam
		n1i1ll.depth = 3;
	altera_std_synchronizer   nliliOl
	( 
	.clk(wire_nl1ii_clkout),
	.din(nliO0l),
	.dout(wire_nliliOl_dout),
	.reset_n((~ nlilill)));
	defparam
		nliliOl.depth = 3;
	altera_std_synchronizer   nliliOO
	( 
	.clk(wire_nl1ii_clkout),
	.din(nliOii),
	.dout(wire_nliliOO_dout),
	.reset_n((~ nlilill)));
	defparam
		nliliOO.depth = 3;
	altera_std_synchronizer   nlill1i
	( 
	.clk(wire_nl1ii_clkout),
	.din(nlilOl),
	.dout(wire_nlill1i_dout),
	.reset_n((~ nlilill)));
	defparam
		nlill1i.depth = 3;
	altera_std_synchronizer_bundle   n01l0O
	( 
	.clk(wire_nl10l_clkout),
	.din({nl010i, nl011O}),
	.dout(wire_n01l0O_dout),
	.reset_n((~ nliii0i)));
	defparam
		n01l0O.depth = 3,
		n01l0O.width = 2;
	altera_std_synchronizer_bundle   n01lii
	( 
	.clk(wire_nl1ii_clkout),
	.din({nl010i, nl011O}),
	.dout(wire_n01lii_dout),
	.reset_n((~ nlilill)));
	defparam
		n01lii.depth = 3,
		n01lii.width = 2;
	altera_std_synchronizer_bundle   n1i1iO
	( 
	.clk(wire_nl10l_clkout),
	.din({nll0lOl, nll0lOi, nll0llO, nll0lll, nll0lli, nll0liO, nll0lil, nll0lii, nll0l0O, nll0l0l, nll0l0i, nll0l1O, nll0l1l, nll0l1i, nll0iOO, nll0ili}),
	.dout(wire_n1i1iO_dout),
	.reset_n((~ nliii1O)));
	defparam
		n1i1iO.depth = 3,
		n1i1iO.width = 16;
	altpll   nl11O
	( 
	.activeclock(),
	.areset(gxb_pwrdn_in),
	.clk(wire_nl11O_clk),
	.clkbad(),
	.clkloss(),
	.enable0(),
	.enable1(),
	.extclk(),
	.fbout(),
	.fref(wire_nl11O_fref),
	.icdrclk(wire_nl11O_icdrclk),
	.inclk({1'b0, ref_clk}),
	.locked(wire_nl11O_locked),
	.phasedone(),
	.scandataout(),
	.scandone(),
	.sclkout0(),
	.sclkout1(),
	.vcooverrange(),
	.vcounderrange(),
	.clkena(),
	.clkswitch(),
	.configupdate(),
	.extclkena(),
	.fbin(),
	.pfdena(),
	.phasecounterselect(),
	.phasestep(),
	.phaseupdown(),
	.pllena(),
	.scanaclr(),
	.scanclk(),
	.scanclkena(),
	.scandata(),
	.scanread(),
	.scanwrite()
	);
	defparam
		nl11O.bandwidth = 0,
		nl11O.bandwidth_type = "HIGH",
		nl11O.c0_high = 0,
		nl11O.c0_initial = 0,
		nl11O.c0_low = 0,
		nl11O.c0_mode = "BYPASS",
		nl11O.c0_ph = 0,
		nl11O.c0_test_source = 5,
		nl11O.c1_high = 0,
		nl11O.c1_initial = 0,
		nl11O.c1_low = 0,
		nl11O.c1_mode = "BYPASS",
		nl11O.c1_ph = 0,
		nl11O.c1_test_source = 5,
		nl11O.c1_use_casc_in = "OFF",
		nl11O.c2_high = 0,
		nl11O.c2_initial = 0,
		nl11O.c2_low = 0,
		nl11O.c2_mode = "BYPASS",
		nl11O.c2_ph = 0,
		nl11O.c2_test_source = 5,
		nl11O.c2_use_casc_in = "OFF",
		nl11O.c3_high = 0,
		nl11O.c3_initial = 0,
		nl11O.c3_low = 0,
		nl11O.c3_mode = "BYPASS",
		nl11O.c3_ph = 0,
		nl11O.c3_test_source = 5,
		nl11O.c3_use_casc_in = "OFF",
		nl11O.c4_high = 0,
		nl11O.c4_initial = 0,
		nl11O.c4_low = 0,
		nl11O.c4_mode = "BYPASS",
		nl11O.c4_ph = 0,
		nl11O.c4_test_source = 5,
		nl11O.c4_use_casc_in = "OFF",
		nl11O.c5_high = 0,
		nl11O.c5_initial = 0,
		nl11O.c5_low = 0,
		nl11O.c5_mode = "BYPASS",
		nl11O.c5_ph = 0,
		nl11O.c5_test_source = 5,
		nl11O.c5_use_casc_in = "OFF",
		nl11O.c6_high = 0,
		nl11O.c6_initial = 0,
		nl11O.c6_low = 0,
		nl11O.c6_mode = "BYPASS",
		nl11O.c6_ph = 0,
		nl11O.c6_test_source = 5,
		nl11O.c6_use_casc_in = "OFF",
		nl11O.c7_high = 0,
		nl11O.c7_initial = 0,
		nl11O.c7_low = 0,
		nl11O.c7_mode = "BYPASS",
		nl11O.c7_ph = 0,
		nl11O.c7_test_source = 5,
		nl11O.c7_use_casc_in = "OFF",
		nl11O.c8_high = 0,
		nl11O.c8_initial = 0,
		nl11O.c8_low = 0,
		nl11O.c8_mode = "BYPASS",
		nl11O.c8_ph = 0,
		nl11O.c8_test_source = 5,
		nl11O.c8_use_casc_in = "OFF",
		nl11O.c9_high = 0,
		nl11O.c9_initial = 0,
		nl11O.c9_low = 0,
		nl11O.c9_mode = "BYPASS",
		nl11O.c9_ph = 0,
		nl11O.c9_test_source = 5,
		nl11O.c9_use_casc_in = "OFF",
		nl11O.charge_pump_current = 2,
		nl11O.charge_pump_current_bits = 9999,
		nl11O.clk0_counter = "G0",
		nl11O.clk0_divide_by = 1,
		nl11O.clk0_duty_cycle = 50,
		nl11O.clk0_multiply_by = 5,
		nl11O.clk0_output_frequency = 0,
		nl11O.clk0_phase_shift = "0",
		nl11O.clk0_time_delay = "0",
		nl11O.clk0_use_even_counter_mode = "OFF",
		nl11O.clk0_use_even_counter_value = "OFF",
		nl11O.clk1_counter = "G0",
		nl11O.clk1_divide_by = 5,
		nl11O.clk1_duty_cycle = 50,
		nl11O.clk1_multiply_by = 5,
		nl11O.clk1_output_frequency = 0,
		nl11O.clk1_phase_shift = "0",
		nl11O.clk1_time_delay = "0",
		nl11O.clk1_use_even_counter_mode = "OFF",
		nl11O.clk1_use_even_counter_value = "OFF",
		nl11O.clk2_counter = "G0",
		nl11O.clk2_divide_by = 5,
		nl11O.clk2_duty_cycle = 20,
		nl11O.clk2_multiply_by = 5,
		nl11O.clk2_output_frequency = 0,
		nl11O.clk2_phase_shift = "0",
		nl11O.clk2_time_delay = "0",
		nl11O.clk2_use_even_counter_mode = "OFF",
		nl11O.clk2_use_even_counter_value = "OFF",
		nl11O.clk3_counter = "G0",
		nl11O.clk3_divide_by = 1,
		nl11O.clk3_duty_cycle = 50,
		nl11O.clk3_multiply_by = 1,
		nl11O.clk3_phase_shift = "0",
		nl11O.clk3_time_delay = "0",
		nl11O.clk3_use_even_counter_mode = "OFF",
		nl11O.clk3_use_even_counter_value = "OFF",
		nl11O.clk4_counter = "G0",
		nl11O.clk4_divide_by = 1,
		nl11O.clk4_duty_cycle = 50,
		nl11O.clk4_multiply_by = 1,
		nl11O.clk4_phase_shift = "0",
		nl11O.clk4_time_delay = "0",
		nl11O.clk4_use_even_counter_mode = "OFF",
		nl11O.clk4_use_even_counter_value = "OFF",
		nl11O.clk5_counter = "G0",
		nl11O.clk5_divide_by = 1,
		nl11O.clk5_duty_cycle = 50,
		nl11O.clk5_multiply_by = 1,
		nl11O.clk5_phase_shift = "0",
		nl11O.clk5_time_delay = "0",
		nl11O.clk5_use_even_counter_mode = "OFF",
		nl11O.clk5_use_even_counter_value = "OFF",
		nl11O.clk6_counter = "E0",
		nl11O.clk6_divide_by = 0,
		nl11O.clk6_duty_cycle = 50,
		nl11O.clk6_multiply_by = 0,
		nl11O.clk6_phase_shift = "0",
		nl11O.clk6_use_even_counter_mode = "OFF",
		nl11O.clk6_use_even_counter_value = "OFF",
		nl11O.clk7_counter = "E1",
		nl11O.clk7_divide_by = 0,
		nl11O.clk7_duty_cycle = 50,
		nl11O.clk7_multiply_by = 0,
		nl11O.clk7_phase_shift = "0",
		nl11O.clk7_use_even_counter_mode = "OFF",
		nl11O.clk7_use_even_counter_value = "OFF",
		nl11O.clk8_counter = "E2",
		nl11O.clk8_divide_by = 0,
		nl11O.clk8_duty_cycle = 50,
		nl11O.clk8_multiply_by = 0,
		nl11O.clk8_phase_shift = "0",
		nl11O.clk8_use_even_counter_mode = "OFF",
		nl11O.clk8_use_even_counter_value = "OFF",
		nl11O.clk9_counter = "E3",
		nl11O.clk9_divide_by = 0,
		nl11O.clk9_duty_cycle = 50,
		nl11O.clk9_multiply_by = 0,
		nl11O.clk9_phase_shift = "0",
		nl11O.clk9_use_even_counter_mode = "OFF",
		nl11O.clk9_use_even_counter_value = "OFF",
		nl11O.compensate_clock = "CLK0",
		nl11O.down_spread = "0",
		nl11O.dpa_divide_by = 1,
		nl11O.dpa_divider = 0,
		nl11O.dpa_multiply_by = 5,
		nl11O.e0_high = 1,
		nl11O.e0_initial = 1,
		nl11O.e0_low = 1,
		nl11O.e0_mode = "BYPASS",
		nl11O.e0_ph = 0,
		nl11O.e0_time_delay = 0,
		nl11O.e1_high = 1,
		nl11O.e1_initial = 1,
		nl11O.e1_low = 1,
		nl11O.e1_mode = "BYPASS",
		nl11O.e1_ph = 0,
		nl11O.e1_time_delay = 0,
		nl11O.e2_high = 1,
		nl11O.e2_initial = 1,
		nl11O.e2_low = 1,
		nl11O.e2_mode = "BYPASS",
		nl11O.e2_ph = 0,
		nl11O.e2_time_delay = 0,
		nl11O.e3_high = 1,
		nl11O.e3_initial = 1,
		nl11O.e3_low = 1,
		nl11O.e3_mode = "BYPASS",
		nl11O.e3_ph = 0,
		nl11O.e3_time_delay = 0,
		nl11O.enable0_counter = "L0",
		nl11O.enable1_counter = "L0",
		nl11O.enable_switch_over_counter = "OFF",
		nl11O.extclk0_counter = "E0",
		nl11O.extclk0_divide_by = 1,
		nl11O.extclk0_duty_cycle = 50,
		nl11O.extclk0_multiply_by = 1,
		nl11O.extclk0_phase_shift = "0",
		nl11O.extclk0_time_delay = "0",
		nl11O.extclk1_counter = "E1",
		nl11O.extclk1_divide_by = 1,
		nl11O.extclk1_duty_cycle = 50,
		nl11O.extclk1_multiply_by = 1,
		nl11O.extclk1_phase_shift = "0",
		nl11O.extclk1_time_delay = "0",
		nl11O.extclk2_counter = "E2",
		nl11O.extclk2_divide_by = 1,
		nl11O.extclk2_duty_cycle = 50,
		nl11O.extclk2_multiply_by = 1,
		nl11O.extclk2_phase_shift = "0",
		nl11O.extclk2_time_delay = "0",
		nl11O.extclk3_counter = "E3",
		nl11O.extclk3_divide_by = 1,
		nl11O.extclk3_duty_cycle = 50,
		nl11O.extclk3_multiply_by = 1,
		nl11O.extclk3_phase_shift = "0",
		nl11O.extclk3_time_delay = "0",
		nl11O.feedback_source = "EXTCLK0",
		nl11O.g0_high = 1,
		nl11O.g0_initial = 1,
		nl11O.g0_low = 1,
		nl11O.g0_mode = "BYPASS",
		nl11O.g0_ph = 0,
		nl11O.g0_time_delay = 0,
		nl11O.g1_high = 1,
		nl11O.g1_initial = 1,
		nl11O.g1_low = 1,
		nl11O.g1_mode = "BYPASS",
		nl11O.g1_ph = 0,
		nl11O.g1_time_delay = 0,
		nl11O.g2_high = 1,
		nl11O.g2_initial = 1,
		nl11O.g2_low = 1,
		nl11O.g2_mode = "BYPASS",
		nl11O.g2_ph = 0,
		nl11O.g2_time_delay = 0,
		nl11O.g3_high = 1,
		nl11O.g3_initial = 1,
		nl11O.g3_low = 1,
		nl11O.g3_mode = "BYPASS",
		nl11O.g3_ph = 0,
		nl11O.g3_time_delay = 0,
		nl11O.gate_lock_counter = 0,
		nl11O.gate_lock_signal = "NO",
		nl11O.inclk0_input_frequency = 8000,
		nl11O.inclk1_input_frequency = 0,
		nl11O.intended_device_family = "CYCLONEIVGX",
		nl11O.invalid_lock_multiplier = 5,
		nl11O.l0_high = 1,
		nl11O.l0_initial = 1,
		nl11O.l0_low = 1,
		nl11O.l0_mode = "BYPASS",
		nl11O.l0_ph = 0,
		nl11O.l0_time_delay = 0,
		nl11O.l1_high = 1,
		nl11O.l1_initial = 1,
		nl11O.l1_low = 1,
		nl11O.l1_mode = "BYPASS",
		nl11O.l1_ph = 0,
		nl11O.l1_time_delay = 0,
		nl11O.lock_high = 1,
		nl11O.lock_low = 1,
		nl11O.lock_window_ui = " 0.05",
		nl11O.loop_filter_c = 5,
		nl11O.loop_filter_c_bits = 9999,
		nl11O.loop_filter_r = " 1.000000",
		nl11O.loop_filter_r_bits = 9999,
		nl11O.m = 0,
		nl11O.m2 = 1,
		nl11O.m_initial = 0,
		nl11O.m_ph = 0,
		nl11O.m_test_source = 5,
		nl11O.m_time_delay = 0,
		nl11O.n = 1,
		nl11O.n2 = 1,
		nl11O.n_time_delay = 0,
		nl11O.operation_mode = "no_compensation",
		nl11O.pfd_max = 0,
		nl11O.pfd_min = 0,
		nl11O.pll_type = "AUTO",
		nl11O.port_activeclock = "PORT_CONNECTIVITY",
		nl11O.port_areset = "PORT_CONNECTIVITY",
		nl11O.port_clk0 = "PORT_CONNECTIVITY",
		nl11O.port_clk1 = "PORT_CONNECTIVITY",
		nl11O.port_clk2 = "PORT_CONNECTIVITY",
		nl11O.port_clk3 = "PORT_CONNECTIVITY",
		nl11O.port_clk4 = "PORT_CONNECTIVITY",
		nl11O.port_clk5 = "PORT_CONNECTIVITY",
		nl11O.port_clk6 = "PORT_UNUSED",
		nl11O.port_clk7 = "PORT_UNUSED",
		nl11O.port_clk8 = "PORT_UNUSED",
		nl11O.port_clk9 = "PORT_UNUSED",
		nl11O.port_clkbad0 = "PORT_CONNECTIVITY",
		nl11O.port_clkbad1 = "PORT_CONNECTIVITY",
		nl11O.port_clkena0 = "PORT_CONNECTIVITY",
		nl11O.port_clkena1 = "PORT_CONNECTIVITY",
		nl11O.port_clkena2 = "PORT_CONNECTIVITY",
		nl11O.port_clkena3 = "PORT_CONNECTIVITY",
		nl11O.port_clkena4 = "PORT_CONNECTIVITY",
		nl11O.port_clkena5 = "PORT_CONNECTIVITY",
		nl11O.port_clkloss = "PORT_CONNECTIVITY",
		nl11O.port_clkswitch = "PORT_CONNECTIVITY",
		nl11O.port_configupdate = "PORT_CONNECTIVITY",
		nl11O.port_enable0 = "PORT_CONNECTIVITY",
		nl11O.port_enable1 = "PORT_CONNECTIVITY",
		nl11O.port_extclk0 = "PORT_CONNECTIVITY",
		nl11O.port_extclk1 = "PORT_CONNECTIVITY",
		nl11O.port_extclk2 = "PORT_CONNECTIVITY",
		nl11O.port_extclk3 = "PORT_CONNECTIVITY",
		nl11O.port_extclkena0 = "PORT_CONNECTIVITY",
		nl11O.port_extclkena1 = "PORT_CONNECTIVITY",
		nl11O.port_extclkena2 = "PORT_CONNECTIVITY",
		nl11O.port_extclkena3 = "PORT_CONNECTIVITY",
		nl11O.port_fbin = "PORT_CONNECTIVITY",
		nl11O.port_fbout = "PORT_CONNECTIVITY",
		nl11O.port_inclk0 = "PORT_CONNECTIVITY",
		nl11O.port_inclk1 = "PORT_CONNECTIVITY",
		nl11O.port_locked = "PORT_CONNECTIVITY",
		nl11O.port_pfdena = "PORT_CONNECTIVITY",
		nl11O.port_phasecounterselect = "PORT_CONNECTIVITY",
		nl11O.port_phasedone = "PORT_CONNECTIVITY",
		nl11O.port_phasestep = "PORT_CONNECTIVITY",
		nl11O.port_phaseupdown = "PORT_CONNECTIVITY",
		nl11O.port_pllena = "PORT_CONNECTIVITY",
		nl11O.port_scanaclr = "PORT_CONNECTIVITY",
		nl11O.port_scanclk = "PORT_CONNECTIVITY",
		nl11O.port_scanclkena = "PORT_CONNECTIVITY",
		nl11O.port_scandata = "PORT_CONNECTIVITY",
		nl11O.port_scandataout = "PORT_CONNECTIVITY",
		nl11O.port_scandone = "PORT_CONNECTIVITY",
		nl11O.port_scanread = "PORT_CONNECTIVITY",
		nl11O.port_scanwrite = "PORT_CONNECTIVITY",
		nl11O.port_sclkout0 = "PORT_CONNECTIVITY",
		nl11O.port_sclkout1 = "PORT_CONNECTIVITY",
		nl11O.port_vcooverrange = "PORT_CONNECTIVITY",
		nl11O.port_vcounderrange = "PORT_CONNECTIVITY",
		nl11O.primary_clock = "INCLK0",
		nl11O.qualify_conf_done = "OFF",
		nl11O.scan_chain = "LONG",
		nl11O.sclkout0_phase_shift = "0",
		nl11O.sclkout1_phase_shift = "0",
		nl11O.self_reset_on_gated_loss_lock = "OFF",
		nl11O.self_reset_on_loss_lock = "OFF",
		nl11O.sim_gate_lock_device_behavior = "OFF",
		nl11O.skip_vco = "OFF",
		nl11O.spread_frequency = 0,
		nl11O.ss = 1,
		nl11O.switch_over_counter = 0,
		nl11O.switch_over_on_gated_lock = "OFF",
		nl11O.switch_over_on_lossclk = "OFF",
		nl11O.switch_over_type = "AUTO",
		nl11O.using_fbmimicbidir_port = "OFF",
		nl11O.valid_lock_multiplier = 1,
		nl11O.vco_center = 0,
		nl11O.vco_divide_by = 0,
		nl11O.vco_frequency_control = "AUTO",
		nl11O.vco_max = 0,
		nl11O.vco_min = 0,
		nl11O.vco_multiply_by = 0,
		nl11O.vco_phase_shift_step = 0,
		nl11O.vco_post_scale = 0,
		nl11O.width_clock = 6,
		nl11O.width_phasecounterselect = 4;
	altsyncram   n00OOO
	( 
	.aclr0(1'b0),
	.aclr1(1'b0),
	.address_a({n0i1ll, n0i1li, n0i1iO, n0i10i}),
	.address_b({n0ii0i, n0ii1O, n0ii1l, n0i0lO}),
	.addressstall_a(1'b0),
	.addressstall_b(1'b0),
	.byteena_a({1'b1}),
	.byteena_b({1'b1}),
	.clock0(wire_nl1ii_clkout),
	.clock1(wire_nl10l_clkout),
	.clocken0(1'b1),
	.clocken1(1'b1),
	.clocken2(1'b1),
	.clocken3(1'b1),
	.data_a({n01Oil, n01Oii, n01O0O, n01O0l, n01O0i, n01O1O, n01O1l, n01O1i, n01lOO, n0011O}),
	.data_b({10{1'b1}}),
	.eccstatus(),
	.q_a(),
	.q_b(wire_n00OOO_q_b),
	.rden_a(1'b1),
	.rden_b(1'b1),
	.wren_a(n01OiO),
	.wren_b(1'b0));
	defparam
		n00OOO.address_aclr_a = "NONE",
		n00OOO.address_aclr_b = "NONE",
		n00OOO.address_reg_b = "CLOCK1",
		n00OOO.byte_size = 8,
		n00OOO.byteena_aclr_a = "NONE",
		n00OOO.byteena_aclr_b = "NONE",
		n00OOO.byteena_reg_b = "CLOCK1",
		n00OOO.clock_enable_core_a = "USE_INPUT_CLKEN",
		n00OOO.clock_enable_core_b = "USE_INPUT_CLKEN",
		n00OOO.clock_enable_input_a = "NORMAL",
		n00OOO.clock_enable_input_b = "NORMAL",
		n00OOO.clock_enable_output_a = "NORMAL",
		n00OOO.clock_enable_output_b = "NORMAL",
		n00OOO.enable_ecc = "FALSE",
		n00OOO.indata_aclr_a = "NONE",
		n00OOO.indata_aclr_b = "NONE",
		n00OOO.indata_reg_b = "CLOCK1",
		n00OOO.init_file_layout = "PORT_A",
		n00OOO.intended_device_family = "CYCLONEIVGX",
		n00OOO.numwords_a = 16,
		n00OOO.numwords_b = 16,
		n00OOO.operation_mode = "DUAL_PORT",
		n00OOO.outdata_aclr_a = "NONE",
		n00OOO.outdata_aclr_b = "NONE",
		n00OOO.outdata_reg_a = "UNREGISTERED",
		n00OOO.outdata_reg_b = "UNREGISTERED",
		n00OOO.ram_block_type = "AUTO",
		n00OOO.rdcontrol_aclr_b = "NONE",
		n00OOO.rdcontrol_reg_b = "CLOCK1",
		n00OOO.read_during_write_mode_mixed_ports = "DONT_CARE",
		n00OOO.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		n00OOO.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		n00OOO.width_a = 10,
		n00OOO.width_b = 10,
		n00OOO.width_byteena_a = 1,
		n00OOO.width_byteena_b = 1,
		n00OOO.width_eccstatus = 3,
		n00OOO.widthad_a = 4,
		n00OOO.widthad_b = 4,
		n00OOO.wrcontrol_aclr_a = "NONE",
		n00OOO.wrcontrol_aclr_b = "NONE",
		n00OOO.wrcontrol_wraddress_reg_b = "CLOCK1",
		n00OOO.lpm_hint = "WIDTH_BYTEENA=1";
	altsyncram   ni1O0i
	( 
	.aclr0(1'b0),
	.aclr1(1'b0),
	.address_a({ni1OOO, ni1OOl, ni1OOi, ni1Oil}),
	.address_b({ni00iO, ni00il, ni00ii, ni001l}),
	.addressstall_a(1'b0),
	.addressstall_b(1'b0),
	.byteena_a({1'b1}),
	.byteena_b({1'b1}),
	.clock0(wire_nl10l_clkout),
	.clock1(wire_nl10l_clkout),
	.clocken0(1'b1),
	.clocken1(1'b1),
	.clocken2(1'b1),
	.clocken3(1'b1),
	.data_a({nill0i, nill1O, nill1l, nill1i, niliOO, niliOl, niliOi, nililO, nilill, niliil}),
	.data_b({10{1'b1}}),
	.eccstatus(),
	.q_a(),
	.q_b(wire_ni1O0i_q_b),
	.rden_a(1'b1),
	.rden_b(1'b1),
	.wren_a(nli1lOO),
	.wren_b(1'b0));
	defparam
		ni1O0i.address_aclr_a = "NONE",
		ni1O0i.address_aclr_b = "NONE",
		ni1O0i.address_reg_b = "CLOCK1",
		ni1O0i.byte_size = 8,
		ni1O0i.byteena_aclr_a = "NONE",
		ni1O0i.byteena_aclr_b = "NONE",
		ni1O0i.byteena_reg_b = "CLOCK1",
		ni1O0i.clock_enable_core_a = "USE_INPUT_CLKEN",
		ni1O0i.clock_enable_core_b = "USE_INPUT_CLKEN",
		ni1O0i.clock_enable_input_a = "NORMAL",
		ni1O0i.clock_enable_input_b = "NORMAL",
		ni1O0i.clock_enable_output_a = "NORMAL",
		ni1O0i.clock_enable_output_b = "NORMAL",
		ni1O0i.enable_ecc = "FALSE",
		ni1O0i.indata_aclr_a = "NONE",
		ni1O0i.indata_aclr_b = "NONE",
		ni1O0i.indata_reg_b = "CLOCK1",
		ni1O0i.init_file_layout = "PORT_A",
		ni1O0i.intended_device_family = "CYCLONEIVGX",
		ni1O0i.numwords_a = 16,
		ni1O0i.numwords_b = 16,
		ni1O0i.operation_mode = "DUAL_PORT",
		ni1O0i.outdata_aclr_a = "NONE",
		ni1O0i.outdata_aclr_b = "NONE",
		ni1O0i.outdata_reg_a = "UNREGISTERED",
		ni1O0i.outdata_reg_b = "UNREGISTERED",
		ni1O0i.ram_block_type = "AUTO",
		ni1O0i.rdcontrol_aclr_b = "NONE",
		ni1O0i.rdcontrol_reg_b = "CLOCK1",
		ni1O0i.read_during_write_mode_mixed_ports = "DONT_CARE",
		ni1O0i.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		ni1O0i.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		ni1O0i.width_a = 10,
		ni1O0i.width_b = 10,
		ni1O0i.width_byteena_a = 1,
		ni1O0i.width_byteena_b = 1,
		ni1O0i.width_eccstatus = 3,
		ni1O0i.widthad_a = 4,
		ni1O0i.widthad_b = 4,
		ni1O0i.wrcontrol_aclr_a = "NONE",
		ni1O0i.wrcontrol_aclr_b = "NONE",
		ni1O0i.wrcontrol_wraddress_reg_b = "CLOCK1",
		ni1O0i.lpm_hint = "WIDTH_BYTEENA=1";
	cycloneiv_hssi_calibration_block   nl1iO
	( 
	.calibrationstatus(),
	.clk(gxb_cal_blk_clk),
	.nonusertocmu(wire_nl1iO_nonusertocmu),
	.powerdn(1'b0),
	.testctrl()
	);
	cycloneiv_hssi_cmu   nl1il
	( 
	.adet({4{1'b0}}),
	.alignstatus(),
	.coreclkout(),
	.digitaltestout(),
	.dpclk(reconfig_clk),
	.dpriodisable(reconfig_togxb[1]),
	.dpriodisableout(wire_nl1il_dpriodisableout),
	.dprioin(reconfig_togxb[0]),
	.dprioload(reconfig_togxb[2]),
	.dpriooe(),
	.dprioout(wire_nl1il_dprioout),
	.enabledeskew(),
	.fiforesetrd(),
	.fixedclk({{3{1'b0}}, ((reconfig_clk & ((~ nl1lO) & (~ nl1li))) & (nlii0iO18 ^ nlii0iO17))}),
	.nonuserfromcal(wire_nl1iO_nonusertocmu),
	.quadreset(gxb_pwrdn_in),
	.quadresetout(wire_nl1il_quadresetout),
	.rdalign({4{1'b0}}),
	.rdenablesync(1'b0),
	.recovclk(1'b0),
	.refclkout(),
	.rxanalogreset({{3{1'b0}}, ((~ reconfig_togxb[3]) & n1i0O)}),
	.rxanalogresetout(wire_nl1il_rxanalogresetout),
	.rxcrupowerdown(wire_nl1il_rxcrupowerdown),
	.rxctrl({4{1'b0}}),
	.rxctrlout(),
	.rxdatain({32{1'b0}}),
	.rxdataout(),
	.rxdatavalid({4{1'b0}}),
	.rxdigitalreset({{3{1'b0}}, nliiiOl}),
	.rxdigitalresetout(wire_nl1il_rxdigitalresetout),
	.rxibpowerdown(wire_nl1il_rxibpowerdown),
	.rxpcsdprioin({{1200{1'b0}}, wire_nl1ii_dprioout[399:0]}),
	.rxpcsdprioout(wire_nl1il_rxpcsdprioout),
	.rxphfifox4byteselout(),
	.rxphfifox4rdenableout(),
	.rxphfifox4wrclkout(),
	.rxphfifox4wrenableout(),
	.rxpmadprioin({{900{1'b0}}, wire_nl10O_dprioout[299:0]}),
	.rxpmadprioout(wire_nl1il_rxpmadprioout),
	.rxpowerdown({4{1'b0}}),
	.rxrunningdisp({4{1'b0}}),
	.syncstatus({4{1'b0}}),
	.testout(),
	.txanalogresetout(wire_nl1il_txanalogresetout),
	.txctrl({4{1'b0}}),
	.txctrlout(),
	.txdatain({32{1'b0}}),
	.txdataout(),
	.txdetectrxpowerdown(wire_nl1il_txdetectrxpowerdown),
	.txdigitalreset({{3{1'b0}}, nliil1l}),
	.txdigitalresetout(wire_nl1il_txdigitalresetout),
	.txdividerpowerdown(wire_nl1il_txdividerpowerdown),
	.txobpowerdown(wire_nl1il_txobpowerdown),
	.txpcsdprioin({{450{1'b0}}, wire_nl10l_dprioout[149:0]}),
	.txpcsdprioout(wire_nl1il_txpcsdprioout),
	.txphfifox4byteselout(),
	.txphfifox4rdclkout(),
	.txphfifox4rdenableout(),
	.txphfifox4wrenableout(),
	.txpmadprioin({{900{1'b0}}, wire_nl10i_dprioout[299:0]}),
	.txpmadprioout(wire_nl1il_txpmadprioout),
	.pmacramtest(),
	.refclkdig(),
	.rxcoreclk(),
	.rxphfifordenable(),
	.rxphfiforeset(),
	.rxphfifowrdisable(),
	.scanclk(),
	.scanmode(),
	.scanshift(),
	.testin(),
	.txclk(),
	.txcoreclk(),
	.txphfiforddisable(),
	.txphfiforeset(),
	.txphfifowrenable()
	);
	defparam
		nl1il.auto_spd_deassert_ph_fifo_rst_count = 8,
		nl1il.auto_spd_phystatus_notify_count = 0,
		nl1il.devaddr = 1,
		nl1il.dprio_config_mode = 6'h01,
		nl1il.in_xaui_mode = "false",
		nl1il.lpm_type = "cycloneiv_hssi_cmu",
		nl1il.portaddr = 1,
		nl1il.rx0_channel_bonding = "none",
		nl1il.rx0_clk1_mux_select = "recovered clock",
		nl1il.rx0_clk2_mux_select = "recovered clock",
		nl1il.rx0_ph_fifo_reg_mode = "false",
		nl1il.rx0_rd_clk_mux_select = "core clock",
		nl1il.rx0_recovered_clk_mux_select = "recovered clock",
		nl1il.rx0_reset_clock_output_during_digital_reset = "false",
		nl1il.rx0_use_double_data_mode = "false",
		nl1il.tx0_channel_bonding = "none",
		nl1il.tx0_rd_clk_mux_select = "central",
		nl1il.tx0_reset_clock_output_during_digital_reset = "false",
		nl1il.tx0_use_double_data_mode = "false",
		nl1il.tx0_wr_clk_mux_select = "core_clk",
		nl1il.use_coreclk_out_post_divider = "false",
		nl1il.use_deskew_fifo = "false";
	cycloneiv_hssi_rx_pcs   nl1ii
	( 
	.a1a2size(1'b0),
	.a1a2sizeout(),
	.a1detect(),
	.a2detect(),
	.adetectdeskew(),
	.alignstatus(1'b0),
	.alignstatussync(1'b0),
	.alignstatussyncout(),
	.bistdone(),
	.bisterr(),
	.bitslipboundaryselectout(),
	.byteorderalignstatus(),
	.cdrctrlearlyeios(),
	.cdrctrllocktorefcl(reconfig_togxb[3]),
	.cdrctrllocktorefclkout(wire_nl1ii_cdrctrllocktorefclkout),
	.clkout(wire_nl1ii_clkout),
	.coreclk(wire_nl1ii_clkout),
	.coreclkout(),
	.ctrldetect(wire_nl1ii_ctrldetect),
	.datain({wire_nl10O_recoverdataout[9:0]}),
	.dataout(wire_nl1ii_dataout),
	.dataoutfull(),
	.digitalreset(wire_nl1il_rxdigitalresetout[0]),
	.disperr(wire_nl1ii_disperr),
	.dpriodisable(wire_nl1il_dpriodisableout),
	.dprioin({wire_nl1il_rxpcsdprioout[399:0]}),
	.dprioout(wire_nl1ii_dprioout),
	.enabledeskew(1'b0),
	.enabyteord(1'b0),
	.enapatternalign(1'b0),
	.errdetect(wire_nl1ii_errdetect),
	.fifordin(1'b0),
	.fifordout(),
	.fiforesetrd(1'b0),
	.hipdataout(),
	.hipdatavalid(),
	.hipelecidle(),
	.hipphydonestatus(),
	.hipstatus(),
	.invpol(1'b0),
	.k1detect(),
	.k2detect(),
	.masterclk(1'b0),
	.parallelfdbk({20{1'b0}}),
	.patterndetect(wire_nl1ii_patterndetect),
	.phfifooverflow(),
	.phfifordenable(1'b1),
	.phfifordenableout(),
	.phfiforeset(1'b0),
	.phfiforesetout(),
	.phfifounderflow(),
	.phfifowrdisable(1'b0),
	.phfifowrdisableout(),
	.pipebufferstat(),
	.pipedatavalid(),
	.pipeelecidle(),
	.pipephydonestatus(),
	.pipepowerdown({2{1'b0}}),
	.pipepowerstate({4{1'b0}}),
	.pipestatetransdoneout(),
	.pipestatus(),
	.prbscidenable(1'b0),
	.quadreset(wire_nl1il_quadresetout),
	.rdalign(),
	.recoveredclk(wire_nl10O_clockout),
	.revbitorderwa(1'b0),
	.revparallelfdbkdata(),
	.rlv(wire_nl1ii_rlv),
	.rmfifodatadeleted(),
	.rmfifodatainserted(),
	.rmfifoempty(),
	.rmfifofull(),
	.rmfifordena(1'b0),
	.rmfiforeset(1'b0),
	.rmfifowrena(1'b0),
	.runningdisp(wire_nl1ii_runningdisp),
	.rxdetectvalid(1'b0),
	.rxfound({2{1'b0}}),
	.signaldetect(),
	.signaldetected(wire_nl10O_signaldetect),
	.syncstatus(wire_nl1ii_syncstatus),
	.syncstatusdeskew(),
	.xauidelcondmetout(),
	.xauififoovrout(),
	.xauiinsertincompleteout(),
	.xauilatencycompout(),
	.xgmctrldet(),
	.xgmctrlin(1'b0),
	.xgmdatain({8{1'b0}}),
	.xgmdataout(),
	.xgmdatavalid(),
	.xgmrunningdisp(),
	.bitslip(),
	.elecidleinfersel(),
	.grayelecidleinferselfromtx(),
	.hip8b10binvpolarity(),
	.hipelecidleinfersel(),
	.hippowerdown(),
	.localrefclk(),
	.phfifox4bytesel(),
	.phfifox4rdenable(),
	.phfifox4wrclk(),
	.phfifox4wrenable(),
	.pipe8b10binvpolarity(),
	.pipeenrevparallellpbkfromtx(),
	.pmatestbusin(),
	.powerdn(),
	.refclk(),
	.revbyteorderwa(),
	.wareset(),
	.xauidelcondmet(),
	.xauififoovr(),
	.xauiinsertincomplete(),
	.xauilatencycomp()
	);
	defparam
		nl1ii.align_pattern = "0101111100",
		nl1ii.align_pattern_length = 10,
		nl1ii.allow_align_polarity_inversion = "false",
		nl1ii.allow_pipe_polarity_inversion = "false",
		nl1ii.auto_spd_deassert_ph_fifo_rst_count = 8,
		nl1ii.auto_spd_phystatus_notify_count = 0,
		nl1ii.bit_slip_enable = "false",
		nl1ii.byte_order_mode = "none",
		nl1ii.byte_order_pad_pattern = "0",
		nl1ii.byte_order_pattern = "0",
		nl1ii.byte_order_pld_ctrl_enable = "false",
		nl1ii.cdrctrl_bypass_ppm_detector_cycle = 1000,
		nl1ii.cdrctrl_enable = "false",
		nl1ii.cdrctrl_mask_cycle = 800,
		nl1ii.cdrctrl_min_lock_to_ref_cycle = 63,
		nl1ii.cdrctrl_rxvalid_mask = "false",
		nl1ii.channel_bonding = "none",
		nl1ii.channel_number = 0,
		nl1ii.channel_width = 8,
		nl1ii.clk1_mux_select = "recovered clock",
		nl1ii.clk2_mux_select = "recovered clock",
		nl1ii.core_clock_0ppm = "false",
		nl1ii.datapath_low_latency_mode = "false",
		nl1ii.datapath_protocol = "basic",
		nl1ii.dec_8b_10b_compatibility_mode = "true",
		nl1ii.dec_8b_10b_mode = "normal",
		nl1ii.deskew_pattern = "0",
		nl1ii.disable_auto_idle_insertion = "true",
		nl1ii.disable_running_disp_in_word_align = "false",
		nl1ii.disallow_kchar_after_pattern_ordered_set = "false",
		nl1ii.dprio_config_mode = 6'h01,
		nl1ii.elec_idle_infer_enable = "false",
		nl1ii.elec_idle_num_com_detect = 3,
		nl1ii.enable_bit_reversal = "false",
		nl1ii.enable_self_test_mode = "false",
		nl1ii.force_signal_detect_dig = "true",
		nl1ii.hip_enable = "false",
		nl1ii.infiniband_invalid_code = 0,
		nl1ii.insert_pad_on_underflow = "false",
		nl1ii.lpm_type = "cycloneiv_hssi_rx_pcs",
		nl1ii.num_align_code_groups_in_ordered_set = 1,
		nl1ii.num_align_cons_good_data = 4,
		nl1ii.num_align_cons_pat = 3,
		nl1ii.num_align_loss_sync_error = 4,
		nl1ii.ph_fifo_low_latency_enable = "true",
		nl1ii.ph_fifo_reg_mode = "false",
		nl1ii.protocol_hint = "gige",
		nl1ii.rate_match_back_to_back = "true",
		nl1ii.rate_match_delete_threshold = 13,
		nl1ii.rate_match_empty_threshold = 5,
		nl1ii.rate_match_fifo_mode = "false",
		nl1ii.rate_match_full_threshold = 20,
		nl1ii.rate_match_insert_threshold = 11,
		nl1ii.rate_match_ordered_set_based = "true",
		nl1ii.rate_match_pattern1 = "10100010010101111100",
		nl1ii.rate_match_pattern2 = "10101011011010000011",
		nl1ii.rate_match_pattern_size = 20,
		nl1ii.rate_match_reset_enable = "false",
		nl1ii.rate_match_skip_set_based = "false",
		nl1ii.rate_match_start_threshold = 7,
		nl1ii.rd_clk_mux_select = "core clock",
		nl1ii.recovered_clk_mux_select = "recovered clock",
		nl1ii.run_length = 5,
		nl1ii.run_length_enable = "true",
		nl1ii.rx_detect_bypass = "false",
		nl1ii.rx_phfifo_wait_cnt = 15,
		nl1ii.rxstatus_error_report_mode = 0,
		nl1ii.self_test_mode = "incremental",
		nl1ii.use_alignment_state_machine = "true",
		nl1ii.use_deskew_fifo = "false",
		nl1ii.use_double_data_mode = "false",
		nl1ii.use_parallel_loopback = "false";
	cycloneiv_hssi_rx_pma   nl10O
	( 
	.analogtestbus(),
	.clockout(wire_nl10O_clockout),
	.crupowerdn(wire_nl1il_rxcrupowerdown[0]),
	.datain(rxp),
	.datastrobeout(),
	.deserclock(wire_nl11O_icdrclk),
	.diagnosticlpbkout(wire_nl10O_diagnosticlpbkout),
	.dpriodisable(wire_nl1il_dpriodisableout),
	.dprioin({wire_nl1il_rxpmadprioout[299:0]}),
	.dprioout(wire_nl10O_dprioout),
	.freqlocked(wire_nl10O_freqlocked),
	.locktodata(1'b0),
	.locktoref(wire_nl1ii_cdrctrllocktorefclkout),
	.locktorefout(),
	.powerdn(wire_nl1il_rxibpowerdown[0]),
	.ppmdetectrefclk(wire_nl11O_fref),
	.recoverdataout(wire_nl10O_recoverdataout),
	.reverselpbkout(wire_nl10O_reverselpbkout),
	.rxpmareset(wire_nl1il_rxanalogresetout[0]),
	.seriallpbkin(wire_nl10i_seriallpbkout),
	.signaldetect(wire_nl10O_signaldetect),
	.testbussel({1'b0, {2{1'b1}}, 1'b0}),
	.dpashift()
	);
	defparam
		nl10O.allow_serial_loopback = "false",
		nl10O.channel_number = 0,
		nl10O.common_mode = "0.82V",
		nl10O.deserialization_factor = 10,
		nl10O.dprio_config_mode = 6'h01,
		nl10O.effective_data_rate = "1250.0 Mbps",
		nl10O.enable_local_divider = "false",
		nl10O.enable_ltd = "false",
		nl10O.enable_ltr = "false",
		nl10O.enable_second_order_loop = "false",
		nl10O.eq_dc_gain = 0,
		nl10O.eq_setting = 1,
		nl10O.force_signal_detect = "true",
		nl10O.logical_channel_address = 0,
		nl10O.loop_1_digital_filter = 8,
		nl10O.lpm_type = "cycloneiv_hssi_rx_pma",
		nl10O.offset_cancellation = 1,
		nl10O.ppm_gen1_2_xcnt_en = 1,
		nl10O.ppm_post_eidle = 0,
		nl10O.ppmselect = 8,
		nl10O.protocol_hint = "gige",
		nl10O.signal_detect_hysteresis = 8,
		nl10O.signal_detect_hysteresis_valid_threshold = 14,
		nl10O.signal_detect_loss_threshold = 1,
		nl10O.termination = "OCT 100 Ohms",
		nl10O.use_external_termination = "false";
	cycloneiv_hssi_tx_pcs   nl10l
	( 
	.clkout(wire_nl10l_clkout),
	.coreclk(wire_nl10l_clkout),
	.coreclkout(),
	.ctrlenable({1'b0, n1i01i}),
	.datain({{12{1'b0}}, n1i0Oi, n1i0lO, n1i0ll, n1i0li, n1i0iO, n1i0il, n1i0ii, n1i00O}),
	.datainfull({22{1'b0}}),
	.dataout(wire_nl10l_dataout),
	.detectrxloop(1'b0),
	.digitalreset(wire_nl1il_txdigitalresetout[0]),
	.dpriodisable(wire_nl1il_dpriodisableout),
	.dprioin({wire_nl1il_txpcsdprioout[149:0]}),
	.dprioout(wire_nl10l_dprioout),
	.enrevparallellpbk(1'b0),
	.forcedisp({2{1'b0}}),
	.forceelecidleout(),
	.grayelecidleinferselout(),
	.hiptxclkout(),
	.invpol(1'b0),
	.localrefclk(wire_nl10i_clockout),
	.parallelfdbkout(),
	.phfifooverflow(),
	.phfiforddisable(1'b0),
	.phfiforddisableout(),
	.phfiforeset(1'b0),
	.phfiforesetout(),
	.phfifounderflow(),
	.phfifowrenable(1'b1),
	.phfifowrenableout(),
	.pipeenrevparallellpbkout(),
	.pipepowerdownout(),
	.pipepowerstateout(),
	.pipestatetransdone(1'b0),
	.powerdn({2{1'b0}}),
	.quadreset(wire_nl1il_quadresetout),
	.rdenablesync(),
	.revparallelfdbk({20{1'b0}}),
	.txdetectrx(wire_nl10l_txdetectrx),
	.xgmctrlenable(),
	.xgmdataout(),
	.bitslipboundaryselect(),
	.dispval(),
	.elecidleinfersel(),
	.forceelecidle(),
	.hipdatain(),
	.hipdetectrxloop(),
	.hipelecidleinfersel(),
	.hipforceelecidle(),
	.hippowerdn(),
	.phfifox4bytesel(),
	.phfifox4rdclk(),
	.phfifox4rdenable(),
	.phfifox4wrenable(),
	.pipetxswing(),
	.prbscidenable(),
	.refclk(),
	.xgmctrl(),
	.xgmdatain()
	);
	defparam
		nl10l.allow_polarity_inversion = "false",
		nl10l.bitslip_enable = "false",
		nl10l.channel_bonding = "none",
		nl10l.channel_number = 0,
		nl10l.channel_width = 8,
		nl10l.core_clock_0ppm = "false",
		nl10l.datapath_low_latency_mode = "false",
		nl10l.datapath_protocol = "basic",
		nl10l.disable_ph_low_latency_mode = "false",
		nl10l.disparity_mode = "none",
		nl10l.dprio_config_mode = 6'h01,
		nl10l.elec_idle_delay = 6,
		nl10l.enable_bit_reversal = "false",
		nl10l.enable_idle_selection = "true",
		nl10l.enable_reverse_parallel_loopback = "false",
		nl10l.enable_self_test_mode = "false",
		nl10l.enc_8b_10b_compatibility_mode = "true",
		nl10l.enc_8b_10b_mode = "normal",
		nl10l.hip_enable = "false",
		nl10l.lpm_type = "cycloneiv_hssi_tx_pcs",
		nl10l.ph_fifo_reg_mode = "false",
		nl10l.prbs_cid_pattern = "false",
		nl10l.protocol_hint = "gige",
		nl10l.refclk_select = "local",
		nl10l.self_test_mode = "incremental",
		nl10l.use_double_data_mode = "false",
		nl10l.wr_clk_mux_select = "core_clk";
	cycloneiv_hssi_tx_pma   nl10i
	( 
	.cgbpowerdn(wire_nl1il_txdividerpowerdown[0]),
	.clockout(wire_nl10i_clockout),
	.datain({wire_nl10l_dataout[9:0]}),
	.dataout(wire_nl10i_dataout),
	.detectrxpowerdown(wire_nl1il_txdetectrxpowerdown[0]),
	.diagnosticlpbkin(wire_nl10O_diagnosticlpbkout),
	.dpriodisable(wire_nl1il_dpriodisableout),
	.dprioin({wire_nl1il_txpmadprioout[299:0]}),
	.dprioout(wire_nl10i_dprioout),
	.fastrefclk0in(wire_nl11O_clk[0]),
	.forceelecidle(1'b0),
	.powerdn(wire_nl1il_txobpowerdown[0]),
	.refclk0in(wire_nl11O_clk[1]),
	.refclk0inpulse(wire_nl11O_clk[2]),
	.reverselpbkin(wire_nl10O_reverselpbkout),
	.rxdetecten(wire_nl10l_txdetectrx),
	.rxdetectvalidout(),
	.rxfoundout(),
	.seriallpbkout(wire_nl10i_seriallpbkout),
	.txpmareset(wire_nl1il_txanalogresetout[0]),
	.rxdetectclk()
	);
	defparam
		nl10i.channel_number = 0,
		nl10i.common_mode = "0.65V",
		nl10i.dprio_config_mode = 6'h01,
		nl10i.effective_data_rate = "1250.0 Mbps",
		nl10i.enable_diagnostic_loopback = "false",
		nl10i.enable_reverse_serial_loopback = "false",
		nl10i.logical_channel_address = 0,
		nl10i.lpm_type = "cycloneiv_hssi_tx_pma",
		nl10i.preemp_tap_1 = 1,
		nl10i.protocol_hint = "gige",
		nl10i.rx_detect = 0,
		nl10i.serialization_factor = 10,
		nl10i.slew_rate = "medium",
		nl10i.termination = "OCT 100 Ohms",
		nl10i.use_external_termination = "false",
		nl10i.use_rx_detect = "false",
		nl10i.vod_selection = 1;
	initial
		nli00Oi61 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli00Oi61 <= nli00Oi62;
	event nli00Oi61_event;
	initial
		#1 ->nli00Oi61_event;
	always @(nli00Oi61_event)
		nli00Oi61 <= {1{1'b1}};
	initial
		nli00Oi62 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli00Oi62 <= nli00Oi61;
	initial
		nli00Ol59 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli00Ol59 <= nli00Ol60;
	event nli00Ol59_event;
	initial
		#1 ->nli00Ol59_event;
	always @(nli00Ol59_event)
		nli00Ol59 <= {1{1'b1}};
	initial
		nli00Ol60 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli00Ol60 <= nli00Ol59;
	initial
		nli00OO57 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli00OO57 <= nli00OO58;
	event nli00OO57_event;
	initial
		#1 ->nli00OO57_event;
	always @(nli00OO57_event)
		nli00OO57 <= {1{1'b1}};
	initial
		nli00OO58 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli00OO58 <= nli00OO57;
	initial
		nli010l71 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli010l71 <= nli010l72;
	event nli010l71_event;
	initial
		#1 ->nli010l71_event;
	always @(nli010l71_event)
		nli010l71 <= {1{1'b1}};
	initial
		nli010l72 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli010l72 <= nli010l71;
	initial
		nli010O69 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli010O69 <= nli010O70;
	event nli010O69_event;
	initial
		#1 ->nli010O69_event;
	always @(nli010O69_event)
		nli010O69 <= {1{1'b1}};
	initial
		nli010O70 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli010O70 <= nli010O69;
	initial
		nli011i73 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli011i73 <= nli011i74;
	event nli011i73_event;
	initial
		#1 ->nli011i73_event;
	always @(nli011i73_event)
		nli011i73 <= {1{1'b1}};
	initial
		nli011i74 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli011i74 <= nli011i73;
	initial
		nli01li67 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli01li67 <= nli01li68;
	event nli01li67_event;
	initial
		#1 ->nli01li67_event;
	always @(nli01li67_event)
		nli01li67 <= {1{1'b1}};
	initial
		nli01li68 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli01li68 <= nli01li67;
	initial
		nli01ll65 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli01ll65 <= nli01ll66;
	event nli01ll65_event;
	initial
		#1 ->nli01ll65_event;
	always @(nli01ll65_event)
		nli01ll65 <= {1{1'b1}};
	initial
		nli01ll66 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli01ll66 <= nli01ll65;
	initial
		nli01Ol63 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli01Ol63 <= nli01Ol64;
	event nli01Ol63_event;
	initial
		#1 ->nli01Ol63_event;
	always @(nli01Ol63_event)
		nli01Ol63 <= {1{1'b1}};
	initial
		nli01Ol64 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli01Ol64 <= nli01Ol63;
	initial
		nli0iOO55 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0iOO55 <= nli0iOO56;
	event nli0iOO55_event;
	initial
		#1 ->nli0iOO55_event;
	always @(nli0iOO55_event)
		nli0iOO55 <= {1{1'b1}};
	initial
		nli0iOO56 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0iOO56 <= nli0iOO55;
	initial
		nli0llO53 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0llO53 <= nli0llO54;
	event nli0llO53_event;
	initial
		#1 ->nli0llO53_event;
	always @(nli0llO53_event)
		nli0llO53 <= {1{1'b1}};
	initial
		nli0llO54 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0llO54 <= nli0llO53;
	initial
		nli0lOO51 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0lOO51 <= nli0lOO52;
	event nli0lOO51_event;
	initial
		#1 ->nli0lOO51_event;
	always @(nli0lOO51_event)
		nli0lOO51 <= {1{1'b1}};
	initial
		nli0lOO52 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0lOO52 <= nli0lOO51;
	initial
		nli0O0i47 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0O0i47 <= nli0O0i48;
	event nli0O0i47_event;
	initial
		#1 ->nli0O0i47_event;
	always @(nli0O0i47_event)
		nli0O0i47 <= {1{1'b1}};
	initial
		nli0O0i48 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0O0i48 <= nli0O0i47;
	initial
		nli0O1l49 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0O1l49 <= nli0O1l50;
	event nli0O1l49_event;
	initial
		#1 ->nli0O1l49_event;
	always @(nli0O1l49_event)
		nli0O1l49 <= {1{1'b1}};
	initial
		nli0O1l50 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0O1l50 <= nli0O1l49;
	initial
		nli0Oii45 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0Oii45 <= nli0Oii46;
	event nli0Oii45_event;
	initial
		#1 ->nli0Oii45_event;
	always @(nli0Oii45_event)
		nli0Oii45 <= {1{1'b1}};
	initial
		nli0Oii46 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0Oii46 <= nli0Oii45;
	initial
		nli0Oli43 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0Oli43 <= nli0Oli44;
	event nli0Oli43_event;
	initial
		#1 ->nli0Oli43_event;
	always @(nli0Oli43_event)
		nli0Oli43 <= {1{1'b1}};
	initial
		nli0Oli44 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0Oli44 <= nli0Oli43;
	initial
		nli0OlO41 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0OlO41 <= nli0OlO42;
	event nli0OlO41_event;
	initial
		#1 ->nli0OlO41_event;
	always @(nli0OlO41_event)
		nli0OlO41 <= {1{1'b1}};
	initial
		nli0OlO42 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0OlO42 <= nli0OlO41;
	initial
		nli0OOO39 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0OOO39 <= nli0OOO40;
	event nli0OOO39_event;
	initial
		#1 ->nli0OOO39_event;
	always @(nli0OOO39_event)
		nli0OOO39 <= {1{1'b1}};
	initial
		nli0OOO40 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli0OOO40 <= nli0OOO39;
	initial
		nli1OiO79 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli1OiO79 <= nli1OiO80;
	event nli1OiO79_event;
	initial
		#1 ->nli1OiO79_event;
	always @(nli1OiO79_event)
		nli1OiO79 <= {1{1'b1}};
	initial
		nli1OiO80 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli1OiO80 <= nli1OiO79;
	initial
		nli1Oli77 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli1Oli77 <= nli1Oli78;
	event nli1Oli77_event;
	initial
		#1 ->nli1Oli77_event;
	always @(nli1Oli77_event)
		nli1Oli77 <= {1{1'b1}};
	initial
		nli1Oli78 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli1Oli78 <= nli1Oli77;
	initial
		nli1OOO75 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli1OOO75 <= nli1OOO76;
	event nli1OOO75_event;
	initial
		#1 ->nli1OOO75_event;
	always @(nli1OOO75_event)
		nli1OOO75 <= {1{1'b1}};
	initial
		nli1OOO76 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nli1OOO76 <= nli1OOO75;
	initial
		nlii00i23 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii00i23 <= nlii00i24;
	event nlii00i23_event;
	initial
		#1 ->nlii00i23_event;
	always @(nlii00i23_event)
		nlii00i23 <= {1{1'b1}};
	initial
		nlii00i24 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii00i24 <= nlii00i23;
	initial
		nlii01l25 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii01l25 <= nlii01l26;
	event nlii01l25_event;
	initial
		#1 ->nlii01l25_event;
	always @(nlii01l25_event)
		nlii01l25 <= {1{1'b1}};
	initial
		nlii01l26 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii01l26 <= nlii01l25;
	initial
		nlii0ii21 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii0ii21 <= nlii0ii22;
	event nlii0ii21_event;
	initial
		#1 ->nlii0ii21_event;
	always @(nlii0ii21_event)
		nlii0ii21 <= {1{1'b1}};
	initial
		nlii0ii22 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii0ii22 <= nlii0ii21;
	initial
		nlii0il19 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii0il19 <= nlii0il20;
	event nlii0il19_event;
	initial
		#1 ->nlii0il19_event;
	always @(nlii0il19_event)
		nlii0il19 <= {1{1'b1}};
	initial
		nlii0il20 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii0il20 <= nlii0il19;
	initial
		nlii0iO17 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii0iO17 <= nlii0iO18;
	event nlii0iO17_event;
	initial
		#1 ->nlii0iO17_event;
	always @(nlii0iO17_event)
		nlii0iO17 <= {1{1'b1}};
	initial
		nlii0iO18 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii0iO18 <= nlii0iO17;
	initial
		nlii0ll15 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii0ll15 <= nlii0ll16;
	event nlii0ll15_event;
	initial
		#1 ->nlii0ll15_event;
	always @(nlii0ll15_event)
		nlii0ll15 <= {1{1'b1}};
	initial
		nlii0ll16 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii0ll16 <= nlii0ll15;
	initial
		nlii0Ol13 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii0Ol13 <= nlii0Ol14;
	event nlii0Ol13_event;
	initial
		#1 ->nlii0Ol13_event;
	always @(nlii0Ol13_event)
		nlii0Ol13 <= {1{1'b1}};
	initial
		nlii0Ol14 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii0Ol14 <= nlii0Ol13;
	initial
		nlii0OO11 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii0OO11 <= nlii0OO12;
	event nlii0OO11_event;
	initial
		#1 ->nlii0OO11_event;
	always @(nlii0OO11_event)
		nlii0OO11 <= {1{1'b1}};
	initial
		nlii0OO12 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii0OO12 <= nlii0OO11;
	initial
		nlii10l35 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii10l35 <= nlii10l36;
	event nlii10l35_event;
	initial
		#1 ->nlii10l35_event;
	always @(nlii10l35_event)
		nlii10l35 <= {1{1'b1}};
	initial
		nlii10l36 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii10l36 <= nlii10l35;
	initial
		nlii11O37 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii11O37 <= nlii11O38;
	event nlii11O37_event;
	initial
		#1 ->nlii11O37_event;
	always @(nlii11O37_event)
		nlii11O37 <= {1{1'b1}};
	initial
		nlii11O38 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii11O38 <= nlii11O37;
	initial
		nlii1il33 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii1il33 <= nlii1il34;
	event nlii1il33_event;
	initial
		#1 ->nlii1il33_event;
	always @(nlii1il33_event)
		nlii1il33 <= {1{1'b1}};
	initial
		nlii1il34 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii1il34 <= nlii1il33;
	initial
		nlii1li31 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii1li31 <= nlii1li32;
	event nlii1li31_event;
	initial
		#1 ->nlii1li31_event;
	always @(nlii1li31_event)
		nlii1li31 <= {1{1'b1}};
	initial
		nlii1li32 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii1li32 <= nlii1li31;
	initial
		nlii1lO29 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii1lO29 <= nlii1lO30;
	event nlii1lO29_event;
	initial
		#1 ->nlii1lO29_event;
	always @(nlii1lO29_event)
		nlii1lO29 <= {1{1'b1}};
	initial
		nlii1lO30 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii1lO30 <= nlii1lO29;
	initial
		nlii1OO27 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii1OO27 <= nlii1OO28;
	event nlii1OO27_event;
	initial
		#1 ->nlii1OO27_event;
	always @(nlii1OO27_event)
		nlii1OO27 <= {1{1'b1}};
	initial
		nlii1OO28 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nlii1OO28 <= nlii1OO27;
	initial
		nliii0O7 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nliii0O7 <= nliii0O8;
	event nliii0O7_event;
	initial
		#1 ->nliii0O7_event;
	always @(nliii0O7_event)
		nliii0O7 <= {1{1'b1}};
	initial
		nliii0O8 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nliii0O8 <= nliii0O7;
	initial
		nliii1i10 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nliii1i10 <= nliii1i9;
	initial
		nliii1i9 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nliii1i9 <= nliii1i10;
	event nliii1i9_event;
	initial
		#1 ->nliii1i9_event;
	always @(nliii1i9_event)
		nliii1i9 <= {1{1'b1}};
	initial
		nliiiii5 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nliiiii5 <= nliiiii6;
	event nliiiii5_event;
	initial
		#1 ->nliiiii5_event;
	always @(nliiiii5_event)
		nliiiii5 <= {1{1'b1}};
	initial
		nliiiii6 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nliiiii6 <= nliiiii5;
	initial
		nliiiil3 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nliiiil3 <= nliiiil4;
	event nliiiil3_event;
	initial
		#1 ->nliiiil3_event;
	always @(nliiiil3_event)
		nliiiil3 <= {1{1'b1}};
	initial
		nliiiil4 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nliiiil4 <= nliiiil3;
	initial
		nliiili1 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nliiili1 <= nliiili2;
	event nliiili1_event;
	initial
		#1 ->nliiili1_event;
	always @(nliiili1_event)
		nliiili1 <= {1{1'b1}};
	initial
		nliiili2 = 0;
	always @ ( posedge wire_nl1ii_clkout)
		  nliiili2 <= nliiili1;
	initial
	begin
		n000l = 0;
		n00ii = 0;
	end
	always @ ( posedge wire_nl1ii_clkout or  negedge wire_n000O_PRN)
	begin
		if (wire_n000O_PRN == 1'b0) 
		begin
			n000l <= 1;
			n00ii <= 1;
		end
		else 
		begin
			n000l <= n00ii;
			n00ii <= nlii0Oi;
		end
	end
	assign
		wire_n000O_PRN = ((nli0iOO56 ^ nli0iOO55) & (~ nli0l1i));
	event n000l_event;
	event n00ii_event;
	initial
		#1 ->n000l_event;
	initial
		#1 ->n00ii_event;
	always @(n000l_event)
		n000l <= 1;
	always @(n00ii_event)
		n00ii <= 1;
	initial
	begin
		n00Oii = 0;
		n00Oll = 0;
		n00OOl = 0;
	end
	always @ ( posedge wire_nl1ii_clkout or  posedge n0O0Oi)
	begin
		if (n0O0Oi == 1'b1) 
		begin
			n00Oii <= 1;
			n00Oll <= 1;
			n00OOl <= 1;
		end
		else 
		begin
			n00Oii <= wire_n00l1l_o;
			n00Oll <= n00OOl;
			n00OOl <= nl010i;
		end
	end
	event n00Oii_event;
	event n00Oll_event;
	event n00OOl_event;
	initial
		#1 ->n00Oii_event;
	initial
		#1 ->n00Oll_event;
	initial
		#1 ->n00OOl_event;
	always @(n00Oii_event)
		n00Oii <= 1;
	always @(n00Oll_event)
		n00Oll <= 1;
	always @(n00OOl_event)
		n00OOl <= 1;
	initial
	begin
		n01l0l = 0;
		n01l1O = 0;
	end
	always @ ( posedge wire_nl1ii_clkout or  posedge nlilOl)
	begin
		if (nlilOl == 1'b1) 
		begin
			n01l0l <= 1;
			n01l1O <= 1;
		end
		else 
		begin
			n01l0l <= nlii0Oi;
			n01l1O <= n01l0l;
		end
	end
	event n01l0l_event;
	event n01l1O_event;
	initial
		#1 ->n01l0l_event;
	initial
		#1 ->n01l1O_event;
	always @(n01l0l_event)
		n01l0l <= 1;
	always @(n01l1O_event)
		n01l1O <= 1;
	initial
	begin
		n011i = 0;
		n01iO = 0;
		n01ll = 0;
		n101l = 0;
		n10ii = 0;
		n10ll = 0;
		n10Ol = 0;
		n110l = 0;
		n110O = 0;
		n11lO = 0;
		n11Oi = 0;
		n1i0l = 0;
		n1i0O = 0;
		n1i1i = 0;
		n1ill = 0;
		n1ilO = 0;
		n1l0i = 0;
		n1l0l = 0;
		n1l0O = 0;
		n1l1l = 0;
		n1l1O = 0;
		n1lOi = 0;
		n1O0i = 0;
		n1O1O = 0;
		n1OlO = 0;
		n1OOi = 0;
		n1OOO = 0;
	end
	always @ ( posedge clk or  posedge nl0il)
	begin
		if (nl0il == 1'b1) 
		begin
			n011i <= 0;
			n01iO <= 0;
			n01ll <= 0;
			n101l <= 0;
			n10ii <= 0;
			n10ll <= 0;
			n10Ol <= 0;
			n110l <= 0;
			n110O <= 0;
			n11lO <= 0;
			n11Oi <= 0;
			n1i0l <= 0;
			n1i0O <= 0;
			n1i1i <= 0;
			n1ill <= 0;
			n1ilO <= 0;
			n1l0i <= 0;
			n1l0l <= 0;
			n1l0O <= 0;
			n1l1l <= 0;
			n1l1O <= 0;
			n1lOi <= 0;
			n1O0i <= 0;
			n1O1O <= 0;
			n1OlO <= 0;
			n1OOi <= 0;
			n1OOO <= 0;
		end
		else 
		begin
			n011i <= wire_n010i_dataout;
			n01iO <= wire_n011l_dataout;
			n01ll <= nlii0lO;
			n101l <= nlii0lO;
			n10ii <= nli0i1O;
			n10ll <= nlii0lO;
			n10Ol <= ((~ nli0i0i) & (n10Ol | ((~ nli0i1O) & n10ii)));
			n110l <= wire_n11il_dataout;
			n110O <= ((~ nli0i1l) & (((~ nli0i1i) & n11Oi) | n110O));
			n11lO <= wire_n11ii_dataout;
			n11Oi <= nli0i1i;
			n1i0l <= wire_n1iil_dataout;
			n1i0O <= nli0i0O;
			n1i1i <= wire_n1iii_dataout;
			n1ill <= nlii0lO;
			n1ilO <= ((~ nli0iii) & (n1ilO | ((~ nli0i0O) & n1i0O)));
			n1l0i <= wire_n1liO_dataout;
			n1l0l <= wire_n1lli_dataout;
			n1l0O <= ((nli0iOi & (~ n1lOi)) | (((~ nli0ilO) | n1l0l) & n1l0O));
			n1l1l <= wire_n1lii_dataout;
			n1l1O <= wire_n1lil_dataout;
			n1lOi <= nli0iOi;
			n1O0i <= wire_n1Oii_dataout;
			n1O1O <= wire_n1O0O_dataout;
			n1OlO <= wire_n1O0l_dataout;
			n1OOi <= nlii0lO;
			n1OOO <= wire_n011O_dataout;
		end
	end
	initial
	begin
		n0i01l = 0;
		n0i10i = 0;
		n0i10l = 0;
		n0i11i = 0;
		n0i11l = 0;
		n0i11O = 0;
		n0i1iO = 0;
		n0i1li = 0;
		n0i1ll = 0;
		n0i1Ol = 0;
		n0i1OO = 0;
	end
	always @ ( posedge wire_nl1ii_clkout or  posedge n0O0Oi)
	begin
		if (n0O0Oi == 1'b1) 
		begin
			n0i01l <= 0;
			n0i10i <= 0;
			n0i10l <= 0;
			n0i11i <= 0;
			n0i11l <= 0;
			n0i11O <= 0;
			n0i1iO <= 0;
			n0i1li <= 0;
			n0i1ll <= 0;
			n0i1Ol <= 0;
			n0i1OO <= 0;
		end
		else if  (n01OiO == 1'b1) 
		begin
			n0i01l <= wire_n0i00O_dataout;
			n0i10i <= n0i1Oi;
			n0i10l <= (n0i1Ol ^ n0i1Oi);
			n0i11i <= (n0i1OO ^ n0i1Ol);
			n0i11l <= (n0i01l ^ n0i1OO);
			n0i11O <= n0i01l;
			n0i1iO <= n0i1Ol;
			n0i1li <= n0i1OO;
			n0i1ll <= n0i01l;
			n0i1Ol <= wire_n0i00i_dataout;
			n0i1OO <= wire_n0i00l_dataout;
		end
	end
	initial
	begin
		n0i1Oi = 0;
	end
	always @ ( posedge wire_nl1ii_clkout or  posedge n0O0Oi)
	begin
		if (n0O0Oi == 1'b1) 
		begin
			n0i1Oi <= 1;
		end
		else if  (n01OiO == 1'b1) 
		begin
			n0i1Oi <= wire_n0i01O_dataout;
		end
	end
	event n0i1Oi_event;
	initial
		#1 ->n0i1Oi_event;
	always @(n0i1Oi_event)
		n0i1Oi <= 1;
	initial
	begin
		n0ii0O = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge n0O0lO)
	begin
		if (n0O0lO == 1'b1) 
		begin
			n0ii0O <= 1;
		end
		else if  (nli1ili == 1'b1) 
		begin
			n0ii0O <= wire_n0iilO_dataout;
		end
	end
	event n0ii0O_event;
	initial
		#1 ->n0ii0O_event;
	always @(n0ii0O_event)
		n0ii0O <= 1;
	initial
	begin
		n0i0iO = 0;
		n0i0li = 0;
		n0i0ll = 0;
		n0i0lO = 0;
		n0i0Oi = 0;
		n0ii0i = 0;
		n0ii1l = 0;
		n0ii1O = 0;
		n0iiil = 0;
		n0iiiO = 0;
		n0iill = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge n0O0lO)
	begin
		if (n0O0lO == 1'b1) 
		begin
			n0i0iO <= 0;
			n0i0li <= 0;
			n0i0ll <= 0;
			n0i0lO <= 0;
			n0i0Oi <= 0;
			n0ii0i <= 0;
			n0ii1l <= 0;
			n0ii1O <= 0;
			n0iiil <= 0;
			n0iiiO <= 0;
			n0iill <= 0;
		end
		else if  (nli1ili == 1'b1) 
		begin
			n0i0iO <= (n0iiiO ^ n0iiil);
			n0i0li <= (n0iill ^ n0iiiO);
			n0i0ll <= n0iill;
			n0i0lO <= n0ii0O;
			n0i0Oi <= (n0iiil ^ n0ii0O);
			n0ii0i <= n0iill;
			n0ii1l <= n0iiil;
			n0ii1O <= n0iiiO;
			n0iiil <= wire_n0iiOi_dataout;
			n0iiiO <= wire_n0iiOl_dataout;
			n0iill <= wire_n0iiOO_dataout;
		end
	end
	initial
	begin
		n0iOii = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge n0O0lO)
	begin
		if (n0O0lO == 1'b1) 
		begin
			n0iOii <= 0;
		end
		else if  (n0iO0i == 1'b0) 
		begin
			n0iOii <= nliii0l;
		end
	end
	initial
	begin
		n0iO0i = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge n0O0lO)
	begin
		if (n0O0lO == 1'b1) 
		begin
			n0iO0i <= 1;
		end
		else if  (nlil01i == 1'b1) 
		begin
			n0iO0i <= wire_n0iOiO_o;
		end
	end
	event n0iO0i_event;
	initial
		#1 ->n0iO0i_event;
	always @(n0iO0i_event)
		n0iO0i <= 1;
	initial
	begin
		n0010i = 0;
		n0010l = 0;
		n0010O = 0;
		n0011O = 0;
		n001ii = 0;
		n001il = 0;
		n001iO = 0;
		n001li = 0;
		n00lOO = 0;
		n00O0l = 0;
		n00O0O = 0;
		n00O1i = 0;
		n00Oil = 0;
		n00OiO = 0;
		n00Oli = 0;
		n00OlO = 0;
		n01lOO = 0;
		n01O0i = 0;
		n01O0l = 0;
		n01O0O = 0;
		n01O1i = 0;
		n01O1l = 0;
		n01O1O = 0;
		n01Oii = 0;
		n01Oil = 0;
		n01OiO = 0;
		n01Oli = 0;
		n01OOO = 0;
		n0ilOi = 0;
		n0ilOO = 0;
		n0iO1i = 0;
		n0iO1l = 0;
		n0l01i = 0;
		n0l01O = 0;
		n0l11l = 0;
		n0l1iO = 0;
		n0l1ll = 0;
		n0l1lO = 0;
		n0l1Oi = 0;
		n0l1Ol = 0;
		n0l1OO = 0;
	end
	always @ ( posedge wire_nl1ii_clkout or  posedge n0O0Oi)
	begin
		if (n0O0Oi == 1'b1) 
		begin
			n0010i <= 0;
			n0010l <= 0;
			n0010O <= 0;
			n0011O <= 0;
			n001ii <= 0;
			n001il <= 0;
			n001iO <= 0;
			n001li <= 0;
			n00lOO <= 0;
			n00O0l <= 0;
			n00O0O <= 0;
			n00O1i <= 0;
			n00Oil <= 0;
			n00OiO <= 0;
			n00Oli <= 0;
			n00OlO <= 0;
			n01lOO <= 0;
			n01O0i <= 0;
			n01O0l <= 0;
			n01O0O <= 0;
			n01O1i <= 0;
			n01O1l <= 0;
			n01O1O <= 0;
			n01Oii <= 0;
			n01Oil <= 0;
			n01OiO <= 0;
			n01Oli <= 0;
			n01OOO <= 0;
			n0ilOi <= 0;
			n0ilOO <= 0;
			n0iO1i <= 0;
			n0iO1l <= 0;
			n0l01i <= 0;
			n0l01O <= 0;
			n0l11l <= 0;
			n0l1iO <= 0;
			n0l1ll <= 0;
			n0l1lO <= 0;
			n0l1Oi <= 0;
			n0l1Ol <= 0;
			n0l1OO <= 0;
		end
		else 
		begin
			n0010i <= wire_n001lO_dataout;
			n0010l <= wire_n001Oi_dataout;
			n0010O <= wire_n001Ol_dataout;
			n0011O <= nlOil1l;
			n001ii <= wire_n001OO_dataout;
			n001il <= wire_n0001i_dataout;
			n001iO <= wire_n0001l_dataout;
			n001li <= wire_n00O1l_dataout;
			n00lOO <= wire_n00O1O_dataout;
			n00O0l <= wire_n00iOi_o;
			n00O0O <= wire_n00iOO_o;
			n00O1i <= wire_n00ill_o;
			n00Oil <= n00OiO;
			n00OiO <= nlilOl;
			n00Oli <= n00OlO;
			n00OlO <= nl011O;
			n01lOO <= nlOiliO;
			n01O0i <= nlOilOi;
			n01O0l <= nlOilOl;
			n01O0O <= nlOilOO;
			n01O1i <= nlOilli;
			n01O1l <= nlOilll;
			n01O1O <= nlOillO;
			n01Oii <= nlOl10l;
			n01Oil <= nlOl11l;
			n01OiO <= wire_n01Oll_dataout;
			n01Oli <= wire_n0011i_dataout;
			n01OOO <= wire_n001ll_dataout;
			n0ilOi <= wire_n0iO0l_o[1];
			n0ilOO <= wire_n0iO0l_o[2];
			n0iO1i <= wire_n0iO0l_o[3];
			n0iO1l <= wire_n0iO0l_o[4];
			n0l01i <= n0i0li;
			n0l01O <= n0i0ll;
			n0l11l <= wire_n0l1li_o;
			n0l1iO <= (((n0l01O ^ n0l1Ol) ^ n0l01i) ^ n0l1OO);
			n0l1ll <= ((n0l01O ^ n0l1OO) ^ n0l01i);
			n0l1lO <= (n0l01O ^ n0l01i);
			n0l1Oi <= n0l01O;
			n0l1Ol <= n0i0Oi;
			n0l1OO <= n0i0iO;
		end
	end
	initial
	begin
		n0iOil = 0;
		n0iOli = 0;
		n0iOll = 0;
		n0iOlO = 0;
		n0iOOi = 0;
		n0iOOl = 0;
		n0iOOO = 0;
		n0l0ll = 0;
		n0l11i = 0;
		n0li0O = 0;
		n0liil = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge n0O0lO)
	begin
		if (n0O0lO == 1'b1) 
		begin
			n0iOil <= 0;
			n0iOli <= 0;
			n0iOll <= 0;
			n0iOlO <= 0;
			n0iOOi <= 0;
			n0iOOl <= 0;
			n0iOOO <= 0;
			n0l0ll <= 0;
			n0l11i <= 0;
			n0li0O <= 0;
			n0liil <= 0;
		end
		else 
		begin
			n0iOil <= (((n0l11i ^ n0iOOi) ^ n0iOOO) ^ n0iOOl);
			n0iOli <= ((n0l11i ^ n0iOOl) ^ n0iOOO);
			n0iOll <= (n0l11i ^ n0iOOO);
			n0iOlO <= n0l11i;
			n0iOOi <= n0i10l;
			n0iOOl <= n0i11i;
			n0iOOO <= n0i11l;
			n0l0ll <= n0liil;
			n0l11i <= n0i11O;
			n0li0O <= wire_n0l0lO_dataout;
			n0liil <= nlOl10l;
		end
	end
	initial
	begin
		n0lili = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge n0O0lO)
	begin
		if (n0O0lO == 1'b1) 
		begin
			n0lili <= 0;
		end
		else if  (n0Oi1i == 1'b1) 
		begin
			n0lili <= wire_n0lill_dataout;
		end
	end
	initial
	begin
		n0liOi = 0;
		n0liOl = 0;
		n0liOO = 0;
		n0ll1i = 0;
		n0ll1l = 0;
		n0ll1O = 0;
		n0llli = 0;
		n0llll = 0;
		n0lllO = 0;
		n0llOi = 0;
		n0llOl = 0;
		n0llOO = 0;
		n0O10i = 0;
		n0O10l = 0;
		n0O10O = 0;
		n0O11O = 0;
		n0O1ii = 0;
		n0O1il = 0;
		n0O1iO = 0;
		n0O1li = 0;
		n0O1ll = 0;
		n0O1Oi = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nliii0i)
	begin
		if (nliii0i == 1'b1) 
		begin
			n0liOi <= 0;
			n0liOl <= 0;
			n0liOO <= 0;
			n0ll1i <= 0;
			n0ll1l <= 0;
			n0ll1O <= 0;
			n0llli <= 0;
			n0llll <= 0;
			n0lllO <= 0;
			n0llOi <= 0;
			n0llOl <= 0;
			n0llOO <= 0;
			n0O10i <= 0;
			n0O10l <= 0;
			n0O10O <= 0;
			n0O11O <= 0;
			n0O1ii <= 0;
			n0O1il <= 0;
			n0O1iO <= 0;
			n0O1li <= 0;
			n0O1ll <= 0;
			n0O1Oi <= 0;
		end
		else if  (nlil01i == 1'b1) 
		begin
			n0liOi <= wire_n0ll0l_dataout;
			n0liOl <= wire_n0ll0O_dataout;
			n0liOO <= wire_n0llii_dataout;
			n0ll1i <= wire_n0llil_dataout;
			n0ll1l <= wire_n0lliO_dataout;
			n0ll1O <= wire_n0illO_dataout;
			n0llli <= wire_n0ll0i_dataout;
			n0llll <= wire_n0illl_dataout;
			n0lllO <= wire_n0lO1l_dataout;
			n0llOi <= wire_n0lO1O_dataout;
			n0llOl <= wire_n0lO0i_dataout;
			n0llOO <= wire_n0lO0l_dataout;
			n0O10i <= wire_n0O1OO_dataout;
			n0O10l <= wire_n0O01i_dataout;
			n0O10O <= wire_n0O01l_dataout;
			n0O11O <= wire_n0O1Ol_dataout;
			n0O1ii <= wire_n0O01O_dataout;
			n0O1il <= wire_n0O00i_dataout;
			n0O1iO <= wire_n0O00l_dataout;
			n0O1li <= wire_n0O00O_dataout;
			n0O1ll <= wire_n0O0ii_dataout;
			n0O1Oi <= wire_n0O0il_dataout;
		end
	end
	initial
	begin
		n0O0ll = 0;
		n0O0Oi = 0;
		n0Oiil = 0;
		n101OO = 0;
		nlOi00O = 0;
	end
	always @ ( posedge wire_nl1ii_clkout or  posedge nlilill)
	begin
		if (nlilill == 1'b1) 
		begin
			n0O0ll <= 1;
			n0O0Oi <= 1;
			n0Oiil <= 1;
			n101OO <= 1;
			nlOi00O <= 1;
		end
		else 
		begin
			n0O0ll <= (~ (wire_n01lii_dout[1] & (~ wire_n01lii_dout[0])));
			n0O0Oi <= ((nlilill | n0O11l) | n01l1O);
			n0Oiil <= wire_n01lii_dout[1];
			n101OO <= wire_n10i0i_dataout;
			nlOi00O <= wire_nlOi0OO_dataout;
		end
	end
	event n0O0ll_event;
	event n0O0Oi_event;
	event n0Oiil_event;
	event n101OO_event;
	event nlOi00O_event;
	initial
		#1 ->n0O0ll_event;
	initial
		#1 ->n0O0Oi_event;
	initial
		#1 ->n0Oiil_event;
	initial
		#1 ->n101OO_event;
	initial
		#1 ->nlOi00O_event;
	always @(n0O0ll_event)
		n0O0ll <= 1;
	always @(n0O0Oi_event)
		n0O0Oi <= 1;
	always @(n0Oiil_event)
		n0Oiil <= 1;
	always @(n101OO_event)
		n101OO <= 1;
	always @(nlOi00O_event)
		nlOi00O <= 1;
	initial
	begin
		n0lO0O = 0;
		n0lO1i = 0;
		n0O0iO = 0;
		n0O11i = 0;
		n0Oi1i = 0;
		n0Oili = 0;
		nlil00i = 0;
		nlil00l = 0;
		nlil00O = 0;
		nlil01O = 0;
		nlil0ii = 0;
		nlil0il = 0;
		nlil0iO = 0;
		nlil0li = 0;
		nlil0ll = 0;
		nlil1lO = 0;
		nliliiO = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nliii0i)
	begin
		if (nliii0i == 1'b1) 
		begin
			n0lO0O <= 0;
			n0lO1i <= 0;
			n0O0iO <= 0;
			n0O11i <= 0;
			n0Oi1i <= 0;
			n0Oili <= 0;
			nlil00i <= 0;
			nlil00l <= 0;
			nlil00O <= 0;
			nlil01O <= 0;
			nlil0ii <= 0;
			nlil0il <= 0;
			nlil0iO <= 0;
			nlil0li <= 0;
			nlil0ll <= 0;
			nlil1lO <= 0;
			nliliiO <= 0;
		end
		else 
		begin
			n0lO0O <= (~ (wire_n01l0O_dout[1] & (~ wire_n01l0O_dout[0])));
			n0lO1i <= n0lO0O;
			n0O0iO <= (~ nli1ilO);
			n0O11i <= (~ ((~ (n0Oili ^ wire_n01l0O_dout[0])) & (~ (n0OilO ^ wire_n01l0O_dout[1]))));
			n0Oi1i <= wire_n0Oi0l_dataout;
			n0Oili <= wire_n01l0O_dout[0];
			nlil00i <= wire_nlil0Ol_dataout;
			nlil00l <= wire_nlil0OO_dataout;
			nlil00O <= wire_nlili1i_dataout;
			nlil01O <= wire_nlil0Oi_dataout;
			nlil0ii <= wire_nlili1l_dataout;
			nlil0il <= wire_nlili0i_dataout;
			nlil0iO <= wire_nlili0l_dataout;
			nlil0li <= wire_nlili0O_dataout;
			nlil0ll <= nliliiO;
			nlil1lO <= wire_nlil0lO_dataout;
			nliliiO <= nl011O;
		end
	end
	initial
	begin
		n0O0li = 0;
		n0O0lO = 0;
		n0OilO = 0;
		nlil01i = 0;
		nliliil = 0;
		nlilili = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nliii0i)
	begin
		if (nliii0i == 1'b1) 
		begin
			n0O0li <= 1;
			n0O0lO <= 1;
			n0OilO <= 1;
			nlil01i <= 1;
			nliliil <= 1;
			nlilili <= 1;
		end
		else 
		begin
			n0O0li <= nli1ilO;
			n0O0lO <= ((nliii0i | n0O11i) | n01l1i);
			n0OilO <= wire_n01l0O_dout[1];
			nlil01i <= wire_nlil1Oi_dataout;
			nliliil <= nlilili;
			nlilili <= nl010i;
		end
	end
	event n0O0li_event;
	event n0O0lO_event;
	event n0OilO_event;
	event nlil01i_event;
	event nliliil_event;
	event nlilili_event;
	initial
		#1 ->n0O0li_event;
	initial
		#1 ->n0O0lO_event;
	initial
		#1 ->n0OilO_event;
	initial
		#1 ->nlil01i_event;
	initial
		#1 ->nliliil_event;
	initial
		#1 ->nlilili_event;
	always @(n0O0li_event)
		n0O0li <= 1;
	always @(n0O0lO_event)
		n0O0lO <= 1;
	always @(n0OilO_event)
		n0OilO <= 1;
	always @(nlil01i_event)
		nlil01i <= 1;
	always @(nliliil_event)
		nliliil <= 1;
	always @(nlilili_event)
		nlilili <= 1;
	initial
	begin
		n01l1i = 0;
		n01l1l = 0;
		n0OiOi = 0;
		n0OiOl = 0;
		n0OiOO = 0;
		n0Ol1l = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nlilOl)
	begin
		if (nlilOl == 1'b1) 
		begin
			n01l1i <= 1;
			n01l1l <= 1;
			n0OiOi <= 1;
			n0OiOl <= 1;
			n0OiOO <= 1;
			n0Ol1l <= 1;
		end
		else 
		begin
			n01l1i <= n01l1l;
			n01l1l <= nlii0Oi;
			n0OiOi <= n0OiOl;
			n0OiOl <= nlii0Oi;
			n0OiOO <= n0Ol1l;
			n0Ol1l <= nlii0Oi;
		end
	end
	event n01l1i_event;
	event n01l1l_event;
	event n0OiOi_event;
	event n0OiOl_event;
	event n0OiOO_event;
	event n0Ol1l_event;
	initial
		#1 ->n01l1i_event;
	initial
		#1 ->n01l1l_event;
	initial
		#1 ->n0OiOi_event;
	initial
		#1 ->n0OiOl_event;
	initial
		#1 ->n0OiOO_event;
	initial
		#1 ->n0Ol1l_event;
	always @(n01l1i_event)
		n01l1i <= 1;
	always @(n01l1l_event)
		n01l1l <= 1;
	always @(n0OiOi_event)
		n0OiOi <= 1;
	always @(n0OiOl_event)
		n0OiOl <= 1;
	always @(n0OiOO_event)
		n0OiOO <= 1;
	always @(n0Ol1l_event)
		n0Ol1l <= 1;
	initial
	begin
		n0Ol0i = 0;
		n0Ol0l = 0;
		n0Ol0O = 0;
		n0Ol1O = 0;
		n0Olii = 0;
		n0Olil = 0;
		n0OliO = 0;
		n0Olli = 0;
		n0Olll = 0;
		n0OO1l = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nliii1O)
	begin
		if (nliii1O == 1'b1) 
		begin
			n0Ol0i <= 0;
			n0Ol0l <= 0;
			n0Ol0O <= 0;
			n0Ol1O <= 0;
			n0Olii <= 0;
			n0Olil <= 0;
			n0OliO <= 0;
			n0Olli <= 0;
			n0Olll <= 0;
			n0OO1l <= 0;
		end
		else if  (niO1ii == 1'b1) 
		begin
			n0Ol0i <= n0OlOO;
			n0Ol0l <= n0OO1O;
			n0Ol0O <= n0OO0i;
			n0Ol1O <= n0OllO;
			n0Olii <= n0OO0l;
			n0Olil <= n0OO0O;
			n0OliO <= n0OOii;
			n0Olli <= n0OOil;
			n0Olll <= n0OOiO;
			n0OO1l <= (ni1lOi | ni1llO);
		end
	end
	initial
	begin
		ni00ll = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nili0i)
	begin
		if (nili0i == 1'b1) 
		begin
			ni00ll <= 1;
		end
		else if  (nii0Ol == 1'b1) 
		begin
			ni00ll <= wire_ni0i1i_dataout;
		end
	end
	event ni00ll_event;
	initial
		#1 ->ni00ll_event;
	always @(ni00ll_event)
		ni00ll <= 1;
	initial
	begin
		ni001i = 0;
		ni001l = 0;
		ni001O = 0;
		ni00ii = 0;
		ni00il = 0;
		ni00iO = 0;
		ni00lO = 0;
		ni00Oi = 0;
		ni00OO = 0;
		ni01Ol = 0;
		ni01OO = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nili0i)
	begin
		if (nili0i == 1'b1) 
		begin
			ni001i <= 0;
			ni001l <= 0;
			ni001O <= 0;
			ni00ii <= 0;
			ni00il <= 0;
			ni00iO <= 0;
			ni00lO <= 0;
			ni00Oi <= 0;
			ni00OO <= 0;
			ni01Ol <= 0;
			ni01OO <= 0;
		end
		else if  (nii0Ol == 1'b1) 
		begin
			ni001i <= ni00OO;
			ni001l <= ni00ll;
			ni001O <= (ni00lO ^ ni00ll);
			ni00ii <= ni00lO;
			ni00il <= ni00Oi;
			ni00iO <= ni00OO;
			ni00lO <= wire_ni0i1l_dataout;
			ni00Oi <= wire_ni0i1O_dataout;
			ni00OO <= wire_ni0i0i_dataout;
			ni01Ol <= (ni00Oi ^ ni00lO);
			ni01OO <= (ni00OO ^ ni00Oi);
		end
	end
	initial
	begin
		ni010i = 0;
		ni010l = 0;
		ni01ii = 0;
		ni1O0l = 0;
		ni1O0O = 0;
		ni1Oii = 0;
		ni1Oil = 0;
		ni1OiO = 0;
		ni1OOi = 0;
		ni1OOl = 0;
		ni1OOO = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nili0l)
	begin
		if (nili0l == 1'b1) 
		begin
			ni010i <= 0;
			ni010l <= 0;
			ni01ii <= 0;
			ni1O0l <= 0;
			ni1O0O <= 0;
			ni1Oii <= 0;
			ni1Oil <= 0;
			ni1OiO <= 0;
			ni1OOi <= 0;
			ni1OOl <= 0;
			ni1OOO <= 0;
		end
		else if  (nli1l0i == 1'b1) 
		begin
			ni010i <= wire_ni01iO_dataout;
			ni010l <= wire_ni01li_dataout;
			ni01ii <= wire_ni01ll_dataout;
			ni1O0l <= (ni010l ^ ni010i);
			ni1O0O <= (ni01ii ^ ni010l);
			ni1Oii <= ni01ii;
			ni1Oil <= ni011l;
			ni1OiO <= (ni010i ^ ni011l);
			ni1OOi <= ni010i;
			ni1OOl <= ni010l;
			ni1OOO <= ni01ii;
		end
	end
	initial
	begin
		ni011l = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nili0l)
	begin
		if (nili0l == 1'b1) 
		begin
			ni011l <= 1;
		end
		else if  (nli1l0i == 1'b1) 
		begin
			ni011l <= wire_ni01il_dataout;
		end
	end
	event ni011l_event;
	initial
		#1 ->ni011l_event;
	always @(ni011l_event)
		ni011l <= 1;
	initial
	begin
		ni0lli = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nili0i)
	begin
		if (nili0i == 1'b1) 
		begin
			ni0lli <= 0;
		end
		else if  (ni0lii == 1'b0) 
		begin
			ni0lli <= nliii0l;
		end
	end
	initial
	begin
		ni0l0i = 0;
		ni0l0l = 0;
		ni0l0O = 0;
		ni0l1l = 0;
		ni0O0O = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nili0l)
	begin
		if (nili0l == 1'b1) 
		begin
			ni0l0i <= 0;
			ni0l0l <= 0;
			ni0l0O <= 0;
			ni0l1l <= 0;
			ni0O0O <= 0;
		end
		else if  (nliilOi == 1'b1) 
		begin
			ni0l0i <= wire_ni0lil_o[2];
			ni0l0l <= wire_ni0lil_o[3];
			ni0l0O <= wire_ni0lil_o[4];
			ni0l1l <= wire_ni0lil_o[1];
			ni0O0O <= wire_ni0OOl_o;
		end
	end
	initial
	begin
		ni1i1l = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nliii1O)
	begin
		if (nliii1O == 1'b1) 
		begin
			ni1i1l <= 1;
		end
		else if  (nliilOi == 1'b1) 
		begin
			ni1i1l <= wire_ni101l_o;
		end
	end
	event ni1i1l_event;
	initial
		#1 ->ni1i1l_event;
	always @(ni1i1l_event)
		ni1i1l <= 1;
	initial
	begin
		ni0OOi = 0;
		ni0OOO = 0;
		nii10i = 0;
		nii10l = 0;
		nii11i = 0;
		nii11l = 0;
		nii11O = 0;
		nii1ii = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nili0l)
	begin
		if (nili0l == 1'b1) 
		begin
			ni0OOi <= 0;
			ni0OOO <= 0;
			nii10i <= 0;
			nii10l <= 0;
			nii11i <= 0;
			nii11l <= 0;
			nii11O <= 0;
			nii1ii <= 0;
		end
		else 
		begin
			ni0OOi <= (((nii1ii ^ nii11O) ^ nii10l) ^ nii10i);
			ni0OOO <= ((nii1ii ^ nii10i) ^ nii10l);
			nii10i <= ni01Ol;
			nii10l <= ni01OO;
			nii11i <= (nii1ii ^ nii10l);
			nii11l <= nii1ii;
			nii11O <= ni001O;
			nii1ii <= ni001i;
		end
	end
	initial
	begin
		ni0lll = 0;
		ni0lOi = 0;
		ni0lOl = 0;
		ni0lOO = 0;
		ni0O0i = 0;
		ni0O1i = 0;
		ni0O1l = 0;
		ni0O1O = 0;
		nii00l = 0;
		nii00O = 0;
		nii0ii = 0;
		nii0il = 0;
		nii0iO = 0;
		nii0li = 0;
		nii0ll = 0;
		nii0lO = 0;
		nii0Oi = 0;
		nii0Ol = 0;
		nii0OO = 0;
		niii0l = 0;
		niii0O = 0;
		niii1l = 0;
		niiiii = 0;
		niiiil = 0;
		niiiiO = 0;
		niiili = 0;
		niiill = 0;
		niiilO = 0;
		nil00i = 0;
		nil01l = 0;
		nil01O = 0;
		nil0ii = 0;
		nil1Ol = 0;
		nil1OO = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nili0i)
	begin
		if (nili0i == 1'b1) 
		begin
			ni0lll <= 0;
			ni0lOi <= 0;
			ni0lOl <= 0;
			ni0lOO <= 0;
			ni0O0i <= 0;
			ni0O1i <= 0;
			ni0O1l <= 0;
			ni0O1O <= 0;
			nii00l <= 0;
			nii00O <= 0;
			nii0ii <= 0;
			nii0il <= 0;
			nii0iO <= 0;
			nii0li <= 0;
			nii0ll <= 0;
			nii0lO <= 0;
			nii0Oi <= 0;
			nii0Ol <= 0;
			nii0OO <= 0;
			niii0l <= 0;
			niii0O <= 0;
			niii1l <= 0;
			niiiii <= 0;
			niiiil <= 0;
			niiiiO <= 0;
			niiili <= 0;
			niiill <= 0;
			niiilO <= 0;
			nil00i <= 0;
			nil01l <= 0;
			nil01O <= 0;
			nil0ii <= 0;
			nil1Ol <= 0;
			nil1OO <= 0;
		end
		else 
		begin
			ni0lll <= (((ni0O0i ^ ni0O1i) ^ ni0O1O) ^ ni0O1l);
			ni0lOi <= ((ni0O0i ^ ni0O1l) ^ ni0O1O);
			ni0lOl <= (ni0O0i ^ ni0O1O);
			ni0lOO <= ni0O0i;
			ni0O0i <= ni1Oii;
			ni0O1i <= ni1OiO;
			ni0O1l <= ni1O0l;
			ni0O1O <= ni1O0O;
			nii00l <= wire_ni0iOO_dataout;
			nii00O <= wire_ni0iii_dataout;
			nii0ii <= wire_ni0iil_dataout;
			nii0il <= wire_ni0iiO_dataout;
			nii0iO <= wire_ni0ili_dataout;
			nii0li <= wire_ni0ill_dataout;
			nii0ll <= wire_ni0ilO_dataout;
			nii0lO <= wire_ni0iOi_dataout;
			nii0Oi <= wire_ni0iOl_dataout;
			nii0Ol <= wire_niii1i_dataout;
			nii0OO <= wire_niii1O_dataout;
			niii0l <= wire_ni0l1i_dataout;
			niii0O <= wire_niiiOl_dataout;
			niii1l <= wire_niiiOi_dataout;
			niiiii <= wire_niiiOO_dataout;
			niiiil <= wire_niil1i_dataout;
			niiiiO <= wire_niil1l_dataout;
			niiili <= wire_niil1O_dataout;
			niiill <= wire_niil0i_dataout;
			niiilO <= wire_niiOOi_o;
			nil00i <= nil0ii;
			nil01l <= nil01O;
			nil01O <= n0OiOO;
			nil0ii <= nl011O;
			nil1Ol <= wire_niiOOO_o;
			nil1OO <= wire_nil11l_o;
		end
	end
	initial
	begin
		ni0lii = 0;
		nil00l = 0;
		nil01i = 0;
		nil0iO = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nili0i)
	begin
		if (nili0i == 1'b1) 
		begin
			ni0lii <= 1;
			nil00l <= 1;
			nil01i <= 1;
			nil0iO <= 1;
		end
		else 
		begin
			ni0lii <= wire_ni0llO_o;
			nil00l <= nil0iO;
			nil01i <= wire_nil10i_o;
			nil0iO <= nl010i;
		end
	end
	event ni0lii_event;
	event nil00l_event;
	event nil01i_event;
	event nil0iO_event;
	initial
		#1 ->ni0lii_event;
	initial
		#1 ->nil00l_event;
	initial
		#1 ->nil01i_event;
	initial
		#1 ->nil0iO_event;
	always @(ni0lii_event)
		ni0lii <= 1;
	always @(nil00l_event)
		nil00l <= 1;
	always @(nil01i_event)
		nil01i <= 1;
	always @(nil0iO_event)
		nil0iO <= 1;
	initial
	begin
		n0l1i = 0;
		nil0O = 0;
		niliO = 0;
	end
	always @ (wire_nl1ii_clkout or wire_nilil_PRN or wire_nilil_CLRN)
	begin
		if (wire_nilil_PRN == 1'b0) 
		begin
			n0l1i <= 1;
			nil0O <= 1;
			niliO <= 1;
		end
		else if  (wire_nilil_CLRN == 1'b0) 
		begin
			n0l1i <= 0;
			nil0O <= 0;
			niliO <= 0;
		end
		else 
		if (wire_nl1ii_clkout != nilil_clk_prev && wire_nl1ii_clkout == 1'b1) 
		begin
			n0l1i <= (~ ((((((((((((((((((((niO0i & (niOii & ((niO0l & ((niO0O & (niOil & nlii00O)) & (nlii00i24 ^ nlii00i23))) & (nlii01l26 ^ nlii01l25)))) & (~ n0iil)) & (nlii1OO28 ^ nlii1OO27)) | ((niO0i & ((niO0O & (niOil & nlii1Ol)) & (nlii1lO30 ^ nlii1lO29))) & (nlii1li32 ^ nlii1li31))) | (~ (nlii1il34 ^ nlii1il33))) | ((~ niO0i) & ((niO0O & (niOil & nlii1ii)) & (nlii10l36 ^ nlii10l35)))) | (~ (nlii11O38 ^ nlii11O37))) | (((~ niO0i) & ((~ niO0O) & (niOil & nlii11l))) & (nli0OOO40 ^ nli0OOO39))) | (((~ niO0i) & (((~ niO0O) & (niOil & nli0OOl)) & (nli0OlO42 ^ nli0OlO41))) & (nli0Oli44 ^ nli0Oli43))) | ((~ niO0i) & ((~ niO0O) & (niOil & nli0OiO)))) | (~ (nli0Oii46 ^ nli0Oii45))) | ((niO1O & (((~ niO0i) & (((~ niO0O) & (niOil & nli0O0O)) & (nli0O0i48 ^ nli0O0i47))) & (nli0O1l50 ^ nli0O1l49))) & (nli0lOO52 ^ nli0lOO51))) | ((niO1O & ((~ niO0i) & (((~ niO0O) & (niOil & nli0lOl)) & (nli0llO54 ^ nli0llO53)))) & n0iil)) | ((niO1O & ((~ niO0i) & ((~ niO0O) & (niOil & nli0lll)))) & ((niOii & nli0lli) | ((~ niOii) & nli0liO)))) | ((~ niO0i) & ((~ niO0O) & (niOil & nli0lil)))) | ((~ niO0i) & ((~ niO0O) & (niOil & nli0lii)))) | ((~ niO0i) & ((~ niO0O) & (niOil & nli0l0O)))) | ((~ niO1O) & ((~ niO0i) & ((~ niO0O) & (niOil & nli0l0l))))) | ((((~ niO1O) & ((~ niO0i) & ((~ niO0O) & (niOil & nli0l0i)))) & n0iil) & nli0l1O)) | (((~ niO1O) & ((~ niO0i) & ((~ niO0O) & (niOil & nli0l1l)))) & nli0l1O)));
			nil0O <= niO0l;
			niliO <= niOii;
		end
		nilil_clk_prev <= wire_nl1ii_clkout;
	end
	assign
		wire_nilil_CLRN = (nlii0il20 ^ nlii0il19),
		wire_nilil_PRN = ((nlii0ii22 ^ nlii0ii21) & (~ n000l));
	event n0l1i_event;
	event nil0O_event;
	event niliO_event;
	initial
		#1 ->n0l1i_event;
	initial
		#1 ->nil0O_event;
	initial
		#1 ->niliO_event;
	always @(n0l1i_event)
		n0l1i <= 1;
	always @(nil0O_event)
		nil0O <= 1;
	always @(niliO_event)
		niliO <= 1;
	initial
	begin
		n0101O = 0;
		n1i01i = 0;
		n1i0il = 0;
		n1i0iO = 0;
		n1i0li = 0;
		n1i0ll = 0;
		n1i0Oi = 0;
		n1i1lO = 0;
		nili0i = 0;
		nili0l = 0;
		niO00i = 0;
		niO01l = 0;
		niO0ii = 0;
		niO1ll = 0;
		niO1Oi = 0;
		niO1OO = 0;
		nliilOi = 0;
		nlil10l = 0;
		nlil1ii = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nliii1O)
	begin
		if (nliii1O == 1'b1) 
		begin
			n0101O <= 1;
			n1i01i <= 1;
			n1i0il <= 1;
			n1i0iO <= 1;
			n1i0li <= 1;
			n1i0ll <= 1;
			n1i0Oi <= 1;
			n1i1lO <= 1;
			nili0i <= 1;
			nili0l <= 1;
			niO00i <= 1;
			niO01l <= 1;
			niO0ii <= 1;
			niO1ll <= 1;
			niO1Oi <= 1;
			niO1OO <= 1;
			nliilOi <= 1;
			nlil10l <= 1;
			nlil1ii <= 1;
		end
		else 
		begin
			n0101O <= wire_n01i0i_dataout;
			n1i01i <= wire_n1i0OO_dataout;
			n1i0il <= wire_n1ii1O_dataout;
			n1i0iO <= wire_n1ii0i_dataout;
			n1i0li <= wire_n1ii0l_dataout;
			n1i0ll <= wire_n1ii0O_dataout;
			n1i0Oi <= wire_n1iiil_dataout;
			n1i1lO <= wire_n1i01l_dataout;
			nili0i <= ((nliii1O | nili1O) | n0OiOO);
			nili0l <= ((nliii1O | nili1l) | n0OiOi);
			niO00i <= niO0ii;
			niO01l <= niO00i;
			niO0ii <= nl010i;
			niO1ll <= niO1Oi;
			niO1Oi <= niO1OO;
			niO1OO <= nl010i;
			nliilOi <= wire_nliilli_dataout;
			nlil10l <= nlil1ii;
			nlil1ii <= nl010i;
		end
	end
	event n0101O_event;
	event n1i01i_event;
	event n1i0il_event;
	event n1i0iO_event;
	event n1i0li_event;
	event n1i0ll_event;
	event n1i0Oi_event;
	event n1i1lO_event;
	event nili0i_event;
	event nili0l_event;
	event niO00i_event;
	event niO01l_event;
	event niO0ii_event;
	event niO1ll_event;
	event niO1Oi_event;
	event niO1OO_event;
	event nliilOi_event;
	event nlil10l_event;
	event nlil1ii_event;
	initial
		#1 ->n0101O_event;
	initial
		#1 ->n1i01i_event;
	initial
		#1 ->n1i0il_event;
	initial
		#1 ->n1i0iO_event;
	initial
		#1 ->n1i0li_event;
	initial
		#1 ->n1i0ll_event;
	initial
		#1 ->n1i0Oi_event;
	initial
		#1 ->n1i1lO_event;
	initial
		#1 ->nili0i_event;
	initial
		#1 ->nili0l_event;
	initial
		#1 ->niO00i_event;
	initial
		#1 ->niO01l_event;
	initial
		#1 ->niO0ii_event;
	initial
		#1 ->niO1ll_event;
	initial
		#1 ->niO1Oi_event;
	initial
		#1 ->niO1OO_event;
	initial
		#1 ->nliilOi_event;
	initial
		#1 ->nlil10l_event;
	initial
		#1 ->nlil1ii_event;
	always @(n0101O_event)
		n0101O <= 1;
	always @(n1i01i_event)
		n1i01i <= 1;
	always @(n1i0il_event)
		n1i0il <= 1;
	always @(n1i0iO_event)
		n1i0iO <= 1;
	always @(n1i0li_event)
		n1i0li <= 1;
	always @(n1i0ll_event)
		n1i0ll <= 1;
	always @(n1i0Oi_event)
		n1i0Oi <= 1;
	always @(n1i1lO_event)
		n1i1lO <= 1;
	always @(nili0i_event)
		nili0i <= 1;
	always @(nili0l_event)
		nili0l <= 1;
	always @(niO00i_event)
		niO00i <= 1;
	always @(niO01l_event)
		niO01l <= 1;
	always @(niO0ii_event)
		niO0ii <= 1;
	always @(niO1ll_event)
		niO1ll <= 1;
	always @(niO1Oi_event)
		niO1Oi <= 1;
	always @(niO1OO_event)
		niO1OO <= 1;
	always @(nliilOi_event)
		nliilOi <= 1;
	always @(nlil10l_event)
		nlil10l <= 1;
	always @(nlil1ii_event)
		nlil1ii <= 1;
	initial
	begin
		n0OllO = 0;
		n0OlOl = 0;
		n0OlOO = 0;
		n0OO0i = 0;
		n0OO0l = 0;
		n0OO0O = 0;
		n0OO1O = 0;
		n0OOii = 0;
		n0OOil = 0;
		n0OOiO = 0;
		n0OOli = 0;
		ni10Ol = 0;
		ni10OO = 0;
		ni1i0i = 0;
		ni1i0l = 0;
		ni1i0O = 0;
		ni1i1O = 0;
		ni1iii = 0;
		ni1iil = 0;
		ni1iiO = 0;
		ni1ili = 0;
		ni1ill = 0;
		ni1ilO = 0;
		ni1iOi = 0;
		ni1iOl = 0;
		ni1iOO = 0;
		ni1l0i = 0;
		ni1l0l = 0;
		ni1l0O = 0;
		ni1l1i = 0;
		ni1l1l = 0;
		ni1l1O = 0;
		ni1lii = 0;
		ni1lil = 0;
		ni1liO = 0;
		ni1lli = 0;
		ni1lll = 0;
		ni1llO = 0;
		ni1lOi = 0;
		ni1lOl = 0;
		ni1lOO = 0;
		ni1O1i = 0;
		ni1O1l = 0;
		ni1O1O = 0;
		nill0l = 0;
		nilOOi = 0;
		nilOOl = 0;
		nilOOO = 0;
		niO0il = 0;
		niO0li = 0;
		niO10i = 0;
		niO10l = 0;
		niO10O = 0;
		niO11i = 0;
		niO11l = 0;
		niO11O = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nliii1O)
	begin
		if (nliii1O == 1'b1) 
		begin
			n0OllO <= 0;
			n0OlOl <= 0;
			n0OlOO <= 0;
			n0OO0i <= 0;
			n0OO0l <= 0;
			n0OO0O <= 0;
			n0OO1O <= 0;
			n0OOii <= 0;
			n0OOil <= 0;
			n0OOiO <= 0;
			n0OOli <= 0;
			ni10Ol <= 0;
			ni10OO <= 0;
			ni1i0i <= 0;
			ni1i0l <= 0;
			ni1i0O <= 0;
			ni1i1O <= 0;
			ni1iii <= 0;
			ni1iil <= 0;
			ni1iiO <= 0;
			ni1ili <= 0;
			ni1ill <= 0;
			ni1ilO <= 0;
			ni1iOi <= 0;
			ni1iOl <= 0;
			ni1iOO <= 0;
			ni1l0i <= 0;
			ni1l0l <= 0;
			ni1l0O <= 0;
			ni1l1i <= 0;
			ni1l1l <= 0;
			ni1l1O <= 0;
			ni1lii <= 0;
			ni1lil <= 0;
			ni1liO <= 0;
			ni1lli <= 0;
			ni1lll <= 0;
			ni1llO <= 0;
			ni1lOi <= 0;
			ni1lOl <= 0;
			ni1lOO <= 0;
			ni1O1i <= 0;
			ni1O1l <= 0;
			ni1O1O <= 0;
			nill0l <= 0;
			nilOOi <= 0;
			nilOOl <= 0;
			nilOOO <= 0;
			niO0il <= 0;
			niO0li <= 0;
			niO10i <= 0;
			niO10l <= 0;
			niO10O <= 0;
			niO11i <= 0;
			niO11l <= 0;
			niO11O <= 0;
		end
		else if  (nliilOi == 1'b1) 
		begin
			n0OllO <= n0OlOl;
			n0OlOl <= nli1iOl;
			n0OlOO <= wire_n0OOll_dataout;
			n0OO0i <= wire_n0OOOi_dataout;
			n0OO0l <= wire_n0OOOl_dataout;
			n0OO0O <= wire_n0OOOO_dataout;
			n0OO1O <= wire_n0OOlO_dataout;
			n0OOii <= wire_ni111i_dataout;
			n0OOil <= wire_ni111l_dataout;
			n0OOiO <= wire_ni111O_dataout;
			n0OOli <= wire_ni11lO_o;
			ni10Ol <= wire_ni11Oi_o;
			ni10OO <= wire_ni11OO_o;
			ni1i0i <= ni1ilO;
			ni1i0l <= ni1iOi;
			ni1i0O <= ni1iOl;
			ni1i1O <= ni1ill;
			ni1iii <= ni1iOO;
			ni1iil <= ni1l1i;
			ni1iiO <= ni1l1l;
			ni1ili <= ni1l1O;
			ni1ill <= ni1iOO;
			ni1ilO <= ni1l1i;
			ni1iOi <= ni1l1l;
			ni1iOl <= ni1l1O;
			ni1iOO <= ni1lOO;
			ni1l0i <= ni1lil;
			ni1l0l <= ni1liO;
			ni1l0O <= ni1lli;
			ni1l1i <= ni1O1i;
			ni1l1l <= ni1O1l;
			ni1l1O <= ni1O1O;
			ni1lii <= ni1lll;
			ni1lil <= ni1lOO;
			ni1liO <= ni1O1i;
			ni1lli <= ni1O1l;
			ni1lll <= ni1O1O;
			ni1llO <= ni1lOi;
			ni1lOi <= mii_tx_err;
			ni1lOl <= mii_tx_en;
			ni1lOO <= mii_tx_d[0];
			ni1O1i <= mii_tx_d[1];
			ni1O1l <= mii_tx_d[2];
			ni1O1O <= mii_tx_d[3];
			nill0l <= gmii_tx_d[0];
			nilOOi <= gmii_tx_d[1];
			nilOOl <= gmii_tx_d[2];
			nilOOO <= gmii_tx_d[3];
			niO0il <= wire_niOi1i_dataout;
			niO0li <= niO0il;
			niO10i <= gmii_tx_d[7];
			niO10l <= gmii_tx_en;
			niO10O <= gmii_tx_err;
			niO11i <= gmii_tx_d[4];
			niO11l <= gmii_tx_d[5];
			niO11O <= gmii_tx_d[6];
		end
	end
	initial
	begin
		nl00ii = 0;
	end
	always @ ( posedge clk or  posedge reset)
	begin
		if (reset == 1'b1) 
		begin
			nl00ii <= 0;
		end
		else if  (wire_nl000O_ENA == 1'b1) 
		begin
			nl00ii <= nlO1iO;
		end
	end
	assign
		wire_nl000O_ENA = (nli1O0l & nlO1il);
	initial
	begin
		nl00ll = 0;
		nl00Oi = 0;
		nl00Ol = 0;
		nl00OO = 0;
		nl0i1i = 0;
		nl0i1O = 0;
	end
	always @ ( posedge clk or  posedge reset)
	begin
		if (reset == 1'b1) 
		begin
			nl00ll <= 0;
			nl00Oi <= 0;
			nl00Ol <= 0;
			nl00OO <= 0;
			nl0i1i <= 0;
			nl0i1O <= 0;
		end
		else if  (nli1Oii == 1'b1) 
		begin
			nl00ll <= nlO1iO;
			nl00Oi <= nlO1li;
			nl00Ol <= nlO1ll;
			nl00OO <= nlO1lO;
			nl0i1i <= nlO1Oi;
			nl0i1O <= nlO1Ol;
		end
	end
	initial
	begin
		n000i = 0;
		n110i = 0;
		n111i = 0;
		n111l = 0;
		n111O = 0;
		nl00O = 0;
		nl01l = 0;
		nl0il = 0;
		nlOOOl = 0;
		nlOOOO = 0;
	end
	always @ (clk or wire_nl0ii_PRN or wire_nl0ii_CLRN)
	begin
		if (wire_nl0ii_PRN == 1'b0) 
		begin
			n000i <= 1;
			n110i <= 1;
			n111i <= 1;
			n111l <= 1;
			n111O <= 1;
			nl00O <= 1;
			nl01l <= 1;
			nl0il <= 1;
			nlOOOl <= 1;
			nlOOOO <= 1;
		end
		else if  (wire_nl0ii_CLRN == 1'b0) 
		begin
			n000i <= 0;
			n110i <= 0;
			n111i <= 0;
			n111l <= 0;
			n111O <= 0;
			nl00O <= 0;
			nl01l <= 0;
			nl0il <= 0;
			nlOOOl <= 0;
			nlOOOO <= 0;
		end
		else 
		if (clk != nl0ii_clk_prev && clk == 1'b1) 
		begin
			n000i <= nlii0lO;
			n110i <= nlOOOO;
			n111i <= wire_nl01O_dataout;
			n111l <= n111i;
			n111O <= nlOOOl;
			nl00O <= nl01l;
			nl01l <= reset;
			nl0il <= (((~ nl00O) & nl01l) & (nliii1i10 ^ nliii1i9));
			nlOOOl <= reconfig_busy;
			nlOOOO <= ((~ n1i0O) & wire_nl10O_freqlocked);
		end
		nl0ii_clk_prev <= clk;
	end
	assign
		wire_nl0ii_CLRN = (nlii0OO12 ^ nlii0OO11),
		wire_nl0ii_PRN = (nlii0Ol14 ^ nlii0Ol13);
	initial
	begin
		nl0i0i = 0;
		nl0i0O = 0;
		nl0iii = 0;
		nl0iiO = 0;
		nl0ilO = 0;
		nl0iOl = 0;
		nl0iOO = 0;
		nl0l0i = 0;
		nl0l0O = 0;
		nl0l1O = 0;
	end
	always @ ( posedge clk or  posedge reset)
	begin
		if (reset == 1'b1) 
		begin
			nl0i0i <= 0;
			nl0i0O <= 0;
			nl0iii <= 0;
			nl0iiO <= 0;
			nl0ilO <= 0;
			nl0iOl <= 0;
			nl0iOO <= 0;
			nl0l0i <= 0;
			nl0l0O <= 0;
			nl0l1O <= 0;
		end
		else if  (nli1OOi == 1'b1) 
		begin
			nl0i0i <= nlO1li;
			nl0i0O <= nlO1ll;
			nl0iii <= nlO1lO;
			nl0iiO <= nlO1Ol;
			nl0ilO <= nlO01l;
			nl0iOl <= nlO00i;
			nl0iOO <= nlO00l;
			nl0l0i <= nlO0il;
			nl0l0O <= nlO0iO;
			nl0l1O <= nlO0ii;
		end
	end
	initial
	begin
		nl0iil = 0;
		nl0ili = 0;
		nl0ill = 0;
		nl0iOi = 0;
		nl0l1l = 0;
	end
	always @ ( posedge clk or  posedge reset)
	begin
		if (reset == 1'b1) 
		begin
			nl0iil <= 1;
			nl0ili <= 1;
			nl0ill <= 1;
			nl0iOi <= 1;
			nl0l1l <= 1;
		end
		else if  (nli1OOi == 1'b1) 
		begin
			nl0iil <= nlO1Oi;
			nl0ili <= nlO1OO;
			nl0ill <= nlO01i;
			nl0iOi <= nlO01O;
			nl0l1l <= nlO00O;
		end
	end
	event nl0iil_event;
	event nl0ili_event;
	event nl0ill_event;
	event nl0iOi_event;
	event nl0l1l_event;
	initial
		#1 ->nl0iil_event;
	initial
		#1 ->nl0ili_event;
	initial
		#1 ->nl0ill_event;
	initial
		#1 ->nl0iOi_event;
	initial
		#1 ->nl0l1l_event;
	always @(nl0iil_event)
		nl0iil <= 1;
	always @(nl0ili_event)
		nl0ili <= 1;
	always @(nl0ill_event)
		nl0ill <= 1;
	always @(nl0iOi_event)
		nl0iOi <= 1;
	always @(nl0l1l_event)
		nl0l1l <= 1;
	initial
	begin
		nl0liO = 0;
		nl0lll = 0;
	end
	always @ (clk or wire_nl0lli_PRN or reset)
	begin
		if (wire_nl0lli_PRN == 1'b0) 
		begin
			nl0liO <= 1;
			nl0lll <= 1;
		end
		else if  (reset == 1'b1) 
		begin
			nl0liO <= 0;
			nl0lll <= 0;
		end
		else if  (nli1Oll == 1'b1) 
		if (clk != nl0lli_clk_prev && clk == 1'b1) 
		begin
			nl0liO <= nlO1ll;
			nl0lll <= nlO1lO;
		end
		nl0lli_clk_prev <= clk;
	end
	assign
		wire_nl0lli_PRN = (nli1OiO80 ^ nli1OiO79);
	initial
	begin
		nl0lii = 0;
		nl0lil = 0;
		nl0lOi = 0;
	end
	always @ (clk or reset or wire_nl0llO_CLRN)
	begin
		if (reset == 1'b1) 
		begin
			nl0lii <= 1;
			nl0lil <= 1;
			nl0lOi <= 1;
		end
		else if  (wire_nl0llO_CLRN == 1'b0) 
		begin
			nl0lii <= 0;
			nl0lil <= 0;
			nl0lOi <= 0;
		end
		else if  (nli1Oll == 1'b1) 
		if (clk != nl0llO_clk_prev && clk == 1'b1) 
		begin
			nl0lii <= nlO1iO;
			nl0lil <= nlO1li;
			nl0lOi <= nlO1Oi;
		end
		nl0llO_clk_prev <= clk;
	end
	assign
		wire_nl0llO_CLRN = (nli1Oli78 ^ nli1Oli77);
	event nl0lii_event;
	event nl0lil_event;
	event nl0lOi_event;
	initial
		#1 ->nl0lii_event;
	initial
		#1 ->nl0lil_event;
	initial
		#1 ->nl0lOi_event;
	always @(nl0lii_event)
		nl0lii <= 1;
	always @(nl0lil_event)
		nl0lil <= 1;
	always @(nl0lOi_event)
		nl0lOi <= 1;
	initial
	begin
		nl00l = 0;
		nl0Oi = 0;
	end
	always @ (clk or wire_nl0lO_PRN or wire_nl0lO_CLRN)
	begin
		if (wire_nl0lO_PRN == 1'b0) 
		begin
			nl00l <= 1;
			nl0Oi <= 1;
		end
		else if  (wire_nl0lO_CLRN == 1'b0) 
		begin
			nl00l <= 0;
			nl0Oi <= 0;
		end
		else 
		if (clk != nl0lO_clk_prev && clk == 1'b1) 
		begin
			nl00l <= nlii0Oi;
			nl0Oi <= nl00l;
		end
		nl0lO_clk_prev <= clk;
	end
	assign
		wire_nl0lO_CLRN = (nliiiii6 ^ nliiiii5),
		wire_nl0lO_PRN = ((nliii0O8 ^ nliii0O7) & (~ gxb_pwrdn_in));
	event nl00l_event;
	event nl0Oi_event;
	initial
		#1 ->nl00l_event;
	initial
		#1 ->nl0Oi_event;
	always @(nl00l_event)
		nl00l <= 1;
	always @(nl0Oi_event)
		nl0Oi <= 1;
	initial
	begin
		n0iil = 0;
		nil1i = 0;
		nilii = 0;
		nilli = 0;
		nilll = 0;
		nillO = 0;
		nilOi = 0;
		nilOl = 0;
		nilOO = 0;
		niO0i = 0;
		niO0l = 0;
		niO0O = 0;
		niO1i = 0;
		niO1l = 0;
		niO1O = 0;
		niOii = 0;
		niOil = 0;
		niOiO = 0;
		niOli = 0;
		niOll = 0;
		niOlO = 0;
		niOOi = 0;
		niOOl = 0;
		niOOO = 0;
		nl11l = 0;
	end
	always @ ( posedge wire_nl1ii_clkout or  posedge n000l)
	begin
		if (n000l == 1'b1) 
		begin
			n0iil <= 0;
			nil1i <= 0;
			nilii <= 0;
			nilli <= 0;
			nilll <= 0;
			nillO <= 0;
			nilOi <= 0;
			nilOl <= 0;
			nilOO <= 0;
			niO0i <= 0;
			niO0l <= 0;
			niO0O <= 0;
			niO1i <= 0;
			niO1l <= 0;
			niO1O <= 0;
			niOii <= 0;
			niOil <= 0;
			niOiO <= 0;
			niOli <= 0;
			niOll <= 0;
			niOlO <= 0;
			niOOi <= 0;
			niOOl <= 0;
			niOOO <= 0;
			nl11l <= 0;
		end
		else 
		begin
			n0iil <= wire_nil1l_dataout;
			nil1i <= niOil;
			nilii <= niO0O;
			nilli <= niOiO;
			nilll <= niOli;
			nillO <= niOll;
			nilOi <= niOlO;
			nilOl <= niOOi;
			nilOO <= niOOl;
			niO0i <= wire_nl1ii_patterndetect[0];
			niO0l <= wire_nl1ii_errdetect[0];
			niO0O <= wire_nl1ii_ctrldetect[0];
			niO1i <= niOOO;
			niO1l <= nl11l;
			niO1O <= wire_nl1ii_runningdisp[0];
			niOii <= wire_nl1ii_disperr[0];
			niOil <= wire_nl1ii_syncstatus[0];
			niOiO <= wire_nl1ii_dataout[0];
			niOli <= wire_nl1ii_dataout[1];
			niOll <= wire_nl1ii_dataout[2];
			niOlO <= wire_nl1ii_dataout[3];
			niOOi <= wire_nl1ii_dataout[4];
			niOOl <= wire_nl1ii_dataout[5];
			niOOO <= wire_nl1ii_dataout[6];
			nl11l <= wire_nl1ii_dataout[7];
		end
	end
	initial
	begin
		nl111i = 0;
		nl1i0l = 0;
		nl1i0O = 0;
		nl1iii = 0;
		nl1iil = 0;
		nl1iiO = 0;
		nl1ili = 0;
		nl1ill = 0;
		nl1ilO = 0;
		nl1iOi = 0;
		nl1iOl = 0;
		nl1iOO = 0;
		nl1l0l = 0;
		nl1l1i = 0;
		nl1l1l = 0;
		nl1l1O = 0;
	end
	always @ ( posedge wire_nl1ii_clkout or  posedge nlilill)
	begin
		if (nlilill == 1'b1) 
		begin
			nl111i <= 0;
			nl1i0l <= 0;
			nl1i0O <= 0;
			nl1iii <= 0;
			nl1iil <= 0;
			nl1iiO <= 0;
			nl1ili <= 0;
			nl1ill <= 0;
			nl1ilO <= 0;
			nl1iOi <= 0;
			nl1iOl <= 0;
			nl1iOO <= 0;
			nl1l0l <= 0;
			nl1l1i <= 0;
			nl1l1l <= 0;
			nl1l1O <= 0;
		end
		else if  (nll0ll == 1'b1) 
		begin
			nl111i <= wire_nl1lii_dataout;
			nl1i0l <= wire_nl1lil_dataout;
			nl1i0O <= wire_nl1liO_dataout;
			nl1iii <= wire_nl1lli_dataout;
			nl1iil <= wire_nl1lll_dataout;
			nl1iiO <= wire_nl1llO_dataout;
			nl1ili <= wire_nl1lOi_dataout;
			nl1ill <= wire_nl1lOl_dataout;
			nl1ilO <= wire_nl1lOO_dataout;
			nl1iOi <= wire_nl1O1i_dataout;
			nl1iOl <= wire_nl1O1l_dataout;
			nl1iOO <= wire_nl1O1O_dataout;
			nl1l0l <= wire_nl1Oii_dataout;
			nl1l1i <= wire_nl1O0i_dataout;
			nl1l1l <= wire_nl1O0l_dataout;
			nl1l1O <= wire_nl1O0O_dataout;
		end
	end
	initial
	begin
		nl1li = 0;
		nl1lO = 0;
	end
	always @ ( negedge reconfig_clk or  negedge wire_nl1ll_CLRN)
	begin
		if (wire_nl1ll_CLRN == 1'b0) 
		begin
			nl1li <= 0;
			nl1lO <= 0;
		end
		else 
		begin
			nl1li <= reconfig_togxb[3];
			nl1lO <= nl1li;
		end
	end
	assign
		wire_nl1ll_CLRN = (nlii0ll16 ^ nlii0ll15);
	initial
	begin
		nl0lOl = 0;
		nl0O0i = 0;
		nl0O0l = 0;
		nl0O0O = 0;
		nl0O1l = 0;
		nl0O1O = 0;
		nl0Oii = 0;
		nl0Oil = 0;
		nl0OiO = 0;
		nl0Oli = 0;
		nl0Oll = 0;
		nl0OlO = 0;
		nl0OOi = 0;
		nl0OOl = 0;
		nl0OOO = 0;
		nli11l = 0;
	end
	always @ (clk or wire_nli11i_PRN or wire_nli11i_CLRN)
	begin
		if (wire_nli11i_PRN == 1'b0) 
		begin
			nl0lOl <= 1;
			nl0O0i <= 1;
			nl0O0l <= 1;
			nl0O0O <= 1;
			nl0O1l <= 1;
			nl0O1O <= 1;
			nl0Oii <= 1;
			nl0Oil <= 1;
			nl0OiO <= 1;
			nl0Oli <= 1;
			nl0Oll <= 1;
			nl0OlO <= 1;
			nl0OOi <= 1;
			nl0OOl <= 1;
			nl0OOO <= 1;
			nli11l <= 1;
		end
		else if  (wire_nli11i_CLRN == 1'b0) 
		begin
			nl0lOl <= 0;
			nl0O0i <= 0;
			nl0O0l <= 0;
			nl0O0O <= 0;
			nl0O1l <= 0;
			nl0O1O <= 0;
			nl0Oii <= 0;
			nl0Oil <= 0;
			nl0OiO <= 0;
			nl0Oli <= 0;
			nl0Oll <= 0;
			nl0OlO <= 0;
			nl0OOi <= 0;
			nl0OOl <= 0;
			nl0OOO <= 0;
			nli11l <= 0;
		end
		else if  (nli011l == 1'b1) 
		if (clk != nli11i_clk_prev && clk == 1'b1) 
		begin
			nl0lOl <= nlO1iO;
			nl0O0i <= nlO1lO;
			nl0O0l <= nlO1Oi;
			nl0O0O <= nlO1Ol;
			nl0O1l <= nlO1li;
			nl0O1O <= nlO1ll;
			nl0Oii <= nlO1OO;
			nl0Oil <= nlO01i;
			nl0OiO <= nlO01l;
			nl0Oli <= nlO01O;
			nl0Oll <= nlO00i;
			nl0OlO <= nlO00l;
			nl0OOi <= nlO00O;
			nl0OOl <= nlO0ii;
			nl0OOO <= nlO0il;
			nli11l <= nlO0iO;
		end
		nli11i_clk_prev <= clk;
	end
	assign
		wire_nli11i_CLRN = ((nli011i74 ^ nli011i73) & (~ reset)),
		wire_nli11i_PRN = (nli1OOO76 ^ nli1OOO75);
	initial
	begin
		nli00i = 0;
		nli00l = 0;
		nli00O = 0;
		nli01O = 0;
		nli0ii = 0;
		nli0il = 0;
		nli0iO = 0;
		nli0li = 0;
		nli0ll = 0;
		nli0lO = 0;
		nli0Oi = 0;
		nli0Ol = 0;
		nli0OO = 0;
		nli1OO = 0;
		nlii1i = 0;
		nlii1O = 0;
	end
	always @ ( posedge wire_nl1ii_clkout or  posedge nlilill)
	begin
		if (nlilill == 1'b1) 
		begin
			nli00i <= 0;
			nli00l <= 0;
			nli00O <= 0;
			nli01O <= 0;
			nli0ii <= 0;
			nli0il <= 0;
			nli0iO <= 0;
			nli0li <= 0;
			nli0ll <= 0;
			nli0lO <= 0;
			nli0Oi <= 0;
			nli0Ol <= 0;
			nli0OO <= 0;
			nli1OO <= 0;
			nlii1i <= 0;
			nlii1O <= 0;
		end
		else if  (nlOO11i == 1'b1) 
		begin
			nli00i <= nlOO1iO;
			nli00l <= nlOO1li;
			nli00O <= nlOO1ll;
			nli01O <= nlOO1il;
			nli0ii <= nlOO1lO;
			nli0il <= nlOO1Oi;
			nli0iO <= nlOO1Ol;
			nli0li <= nlOO1OO;
			nli0ll <= nlOO01i;
			nli0lO <= nlOO01l;
			nli0Oi <= nlOO01O;
			nli0Ol <= nlOO00i;
			nli0OO <= nlOO00l;
			nli1OO <= nlOO10O;
			nlii1i <= nlOO00O;
			nlii1O <= nlOO0ii;
		end
	end
	initial
	begin
		nliiiOl = 0;
		nliil1i = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nli0l1i)
	begin
		if (nli0l1i == 1'b1) 
		begin
			nliiiOl <= 1;
			nliil1i <= 1;
		end
		else 
		begin
			nliiiOl <= nliil1i;
			nliil1i <= nlii0Oi;
		end
	end
	event nliiiOl_event;
	event nliil1i_event;
	initial
		#1 ->nliiiOl_event;
	initial
		#1 ->nliil1i_event;
	always @(nliiiOl_event)
		nliiiOl <= 1;
	always @(nliil1i_event)
		nliil1i <= 1;
	initial
	begin
		nliil0i = 0;
		nliil1l = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nli0ill)
	begin
		if (nli0ill == 1'b1) 
		begin
			nliil0i <= 1;
			nliil1l <= 1;
		end
		else 
		begin
			nliil0i <= nlii0Oi;
			nliil1l <= nliil0i;
		end
	end
	event nliil0i_event;
	event nliil1l_event;
	initial
		#1 ->nliil0i_event;
	initial
		#1 ->nliil1l_event;
	always @(nliil0i_event)
		nliil0i <= 1;
	always @(nliil1l_event)
		nliil1l <= 1;
	initial
	begin
		nlii0i = 0;
		nliilO = 0;
		nliiOl = 0;
	end
	always @ (clk or reset or wire_nliiOi_CLRN)
	begin
		if (reset == 1'b1) 
		begin
			nlii0i <= 1;
			nliilO <= 1;
			nliiOl <= 1;
		end
		else if  (wire_nliiOi_CLRN == 1'b0) 
		begin
			nlii0i <= 0;
			nliilO <= 0;
			nliiOl <= 0;
		end
		else if  (nli01ii == 1'b1) 
		if (clk != nliiOi_clk_prev && clk == 1'b1) 
		begin
			nlii0i <= nlO1Ol;
			nliilO <= nlO01i;
			nliiOl <= nlO01l;
		end
		nliiOi_clk_prev <= clk;
	end
	assign
		wire_nliiOi_CLRN = (nli010l72 ^ nli010l71);
	event nlii0i_event;
	event nliilO_event;
	event nliiOl_event;
	initial
		#1 ->nlii0i_event;
	initial
		#1 ->nliilO_event;
	initial
		#1 ->nliiOl_event;
	always @(nlii0i_event)
		nlii0i <= 1;
	always @(nliilO_event)
		nliilO <= 1;
	always @(nliiOl_event)
		nliiOl <= 1;
	initial
	begin
		nliill = 0;
		nliiOO = 0;
		nlil1l = 0;
	end
	always @ ( posedge clk or  negedge wire_nlil1i_CLRN)
	begin
		if (wire_nlil1i_CLRN == 1'b0) 
		begin
			nliill <= 0;
			nliiOO <= 0;
			nlil1l <= 0;
		end
		else if  (nli01ii == 1'b1) 
		begin
			nliill <= nlO1OO;
			nliiOO <= nlO00O;
			nlil1l <= nlO0ii;
		end
	end
	assign
		wire_nlil1i_CLRN = ((nli010O70 ^ nli010O69) & (~ reset));
	initial
	begin
		nlilill = 0;
		nliliOi = 0;
	end
	always @ ( posedge wire_nl1ii_clkout or  posedge nliii0i)
	begin
		if (nliii0i == 1'b1) 
		begin
			nlilill <= 1;
			nliliOi <= 1;
		end
		else 
		begin
			nlilill <= nliliOi;
			nliliOi <= nlii0Oi;
		end
	end
	event nlilill_event;
	event nliliOi_event;
	initial
		#1 ->nlilill_event;
	initial
		#1 ->nliliOi_event;
	always @(nlilill_event)
		nlilill <= 1;
	always @(nliliOi_event)
		nliliOi <= 1;
	initial
	begin
		nliOOi = 0;
	end
	always @ (clk or reset or wire_nliOlO_CLRN)
	begin
		if (reset == 1'b1) 
		begin
			nliOOi <= 1;
		end
		else if  (wire_nliOlO_CLRN == 1'b0) 
		begin
			nliOOi <= 0;
		end
		else if  (nli01lO == 1'b1) 
		if (clk != nliOlO_clk_prev && clk == 1'b1) 
		begin
			nliOOi <= nlO00O;
		end
		nliOlO_clk_prev <= clk;
	end
	assign
		wire_nliOlO_CLRN = (nli01li68 ^ nli01li67);
	event nliOOi_event;
	initial
		#1 ->nliOOi_event;
	always @(nliOOi_event)
		nliOOi <= 1;
	initial
	begin
		nliOli = 0;
		nliOll = 0;
		nliOOO = 0;
	end
	always @ ( posedge clk or  negedge wire_nliOOl_CLRN)
	begin
		if (wire_nliOOl_CLRN == 1'b0) 
		begin
			nliOli <= 0;
			nliOll <= 0;
			nliOOO <= 0;
		end
		else if  (nli01lO == 1'b1) 
		begin
			nliOli <= nlO00i;
			nliOll <= nlO00l;
			nliOOO <= nlO0il;
		end
	end
	assign
		wire_nliOOl_CLRN = ((nli01ll66 ^ nli01ll65) & (~ reset));
	initial
	begin
		n0101i = 0;
		n0101l = 0;
		n0110i = 0;
		n0110l = 0;
		n0110O = 0;
		n011ii = 0;
		n011il = 0;
		n011iO = 0;
		n011li = 0;
		n011ll = 0;
		n011lO = 0;
		n011Oi = 0;
		n011Ol = 0;
		n011OO = 0;
		n01i0l = 0;
		n01i0O = 0;
		n01ill = 0;
		n01iOi = 0;
		n01iOl = 0;
		n01iOO = 0;
		n1i00l = 0;
		n1i00O = 0;
		n1i0ii = 0;
		n1i0lO = 0;
		n1i0Ol = 0;
		nili1l = 0;
		nili1O = 0;
		niliil = 0;
		nilill = 0;
		nililO = 0;
		niliOi = 0;
		niliOl = 0;
		niliOO = 0;
		nill0i = 0;
		nill1i = 0;
		nill1l = 0;
		nill1O = 0;
		niO00l = 0;
		niO01i = 0;
		niO01O = 0;
		niO0OO = 0;
		niO1ii = 0;
		niO1il = 0;
		niO1lO = 0;
		niO1Ol = 0;
		niOi0i = 0;
		niOi1l = 0;
		niOi1O = 0;
		niOiiO = 0;
		niOill = 0;
		niOiOi = 0;
		niOiOl = 0;
		niOiOO = 0;
		niOl1i = 0;
		niOl1l = 0;
		nliiliO = 0;
		nliilOO = 0;
		nliiO0i = 0;
		nliiO0l = 0;
		nliiO0O = 0;
		nliiO1i = 0;
		nliiO1l = 0;
		nliiO1O = 0;
		nliiOii = 0;
		nliiOil = 0;
		nlil10O = 0;
		nll00i = 0;
		nll00O = 0;
		nll01l = 0;
		nll01O = 0;
	end
	always @ ( posedge wire_nl10l_clkout or  posedge nliii1O)
	begin
		if (nliii1O == 1'b1) 
		begin
			n0101i <= 0;
			n0101l <= 0;
			n0110i <= 0;
			n0110l <= 0;
			n0110O <= 0;
			n011ii <= 0;
			n011il <= 0;
			n011iO <= 0;
			n011li <= 0;
			n011ll <= 0;
			n011lO <= 0;
			n011Oi <= 0;
			n011Ol <= 0;
			n011OO <= 0;
			n01i0l <= 0;
			n01i0O <= 0;
			n01ill <= 0;
			n01iOi <= 0;
			n01iOl <= 0;
			n01iOO <= 0;
			n1i00l <= 0;
			n1i00O <= 0;
			n1i0ii <= 0;
			n1i0lO <= 0;
			n1i0Ol <= 0;
			nili1l <= 0;
			nili1O <= 0;
			niliil <= 0;
			nilill <= 0;
			nililO <= 0;
			niliOi <= 0;
			niliOl <= 0;
			niliOO <= 0;
			nill0i <= 0;
			nill1i <= 0;
			nill1l <= 0;
			nill1O <= 0;
			niO00l <= 0;
			niO01i <= 0;
			niO01O <= 0;
			niO0OO <= 0;
			niO1ii <= 0;
			niO1il <= 0;
			niO1lO <= 0;
			niO1Ol <= 0;
			niOi0i <= 0;
			niOi1l <= 0;
			niOi1O <= 0;
			niOiiO <= 0;
			niOill <= 0;
			niOiOi <= 0;
			niOiOl <= 0;
			niOiOO <= 0;
			niOl1i <= 0;
			niOl1l <= 0;
			nliiliO <= 0;
			nliilOO <= 0;
			nliiO0i <= 0;
			nliiO0l <= 0;
			nliiO0O <= 0;
			nliiO1i <= 0;
			nliiO1l <= 0;
			nliiO1O <= 0;
			nliiOii <= 0;
			nliiOil <= 0;
			nlil10O <= 0;
			nll00i <= 0;
			nll00O <= 0;
			nll01l <= 0;
			nll01O <= 0;
		end
		else 
		begin
			n0101i <= wire_n01i1l_dataout;
			n0101l <= wire_n01i1O_dataout;
			n0110i <= wire_n0100l_dataout;
			n0110l <= wire_n0100O_dataout;
			n0110O <= wire_n010ii_dataout;
			n011ii <= wire_n010il_dataout;
			n011il <= wire_n010iO_dataout;
			n011iO <= wire_n010li_dataout;
			n011li <= wire_n010ll_dataout;
			n011ll <= wire_n010lO_dataout;
			n011lO <= wire_n010Oi_dataout;
			n011Oi <= wire_n010Ol_dataout;
			n011Ol <= wire_n010OO_dataout;
			n011OO <= wire_n01i1i_dataout;
			n01i0l <= wire_n01ilO_dataout;
			n01i0O <= n01i0l;
			n01ill <= n01iOi;
			n01iOi <= nlilOl;
			n01iOl <= n01iOO;
			n01iOO <= nlOil1i;
			n1i00l <= wire_n1i1Oi_dataout;
			n1i00O <= wire_n1ii1i_dataout;
			n1i0ii <= wire_n1ii1l_dataout;
			n1i0lO <= wire_n1iiii_dataout;
			n1i0Ol <= wire_n0100i_dataout;
			nili1l <= (~ ((~ (niO01O ^ niO01i)) & (~ (niO00i ^ niO01l))));
			nili1O <= (~ ((~ (niO1lO ^ niO1il)) & (~ (niO1Oi ^ niO1ll))));
			niliil <= wire_nill0O_dataout;
			nilill <= wire_nillii_dataout;
			nililO <= wire_nillil_dataout;
			niliOi <= wire_nilliO_dataout;
			niliOl <= wire_nillli_dataout;
			niliOO <= wire_nillll_dataout;
			nill0i <= wire_nillOO_dataout;
			nill1i <= wire_nilllO_dataout;
			nill1l <= wire_nillOi_dataout;
			nill1O <= wire_nillOl_dataout;
			niO00l <= nl011O;
			niO01i <= niO01O;
			niO01O <= niO00l;
			niO0OO <= niOi1l;
			niO1ii <= wire_niO1iO_dataout;
			niO1il <= niO1lO;
			niO1lO <= niO1Ol;
			niO1Ol <= nl011O;
			niOi0i <= n0liOi;
			niOi1l <= nlilOl;
			niOi1O <= niOi0i;
			niOiiO <= wire_niOilO_dataout;
			niOill <= niOiOi;
			niOiOi <= nl011l;
			niOiOl <= niOiOO;
			niOiOO <= nlilOl;
			niOl1i <= niOl1l;
			niOl1l <= nlOl10l;
			nliiliO <= wire_nliiOiO_dataout;
			nliilOO <= wire_nliiOli_dataout;
			nliiO0i <= wire_nliiOOl_dataout;
			nliiO0l <= wire_nlil11i_dataout;
			nliiO0O <= wire_nlil11l_dataout;
			nliiO1i <= wire_nliiOll_dataout;
			nliiO1l <= wire_nliiOlO_dataout;
			nliiO1O <= wire_nliiOOi_dataout;
			nliiOii <= wire_nlil11O_dataout;
			nliiOil <= nlil10O;
			nlil10O <= nl011O;
			nll00i <= (nll0li & nll00O);
			nll00O <= nll0li;
			nll01l <= nll01O;
			nll01O <= nll00i;
		end
	end
	initial
	begin
		n0O11l = 0;
		n0Oi0i = 0;
		n1010i = 0;
		n1010l = 0;
		n1010O = 0;
		n1011i = 0;
		n1011l = 0;
		n1011O = 0;
		n101ii = 0;
		n101il = 0;
		n101iO = 0;
		n101li = 0;
		n101ll = 0;
		n101lO = 0;
		n101Oi = 0;
		n101Ol = 0;
		n10lil = 0;
		n10liO = 0;
		n10lli = 0;
		n10lll = 0;
		n10llO = 0;
		n10lOi = 0;
		n10lOl = 0;
		n10lOO = 0;
		n10O0i = 0;
		n10O1i = 0;
		n10O1l = 0;
		n10O1O = 0;
		n11OOi = 0;
		n11OOl = 0;
		n11OOO = 0;
		n1i10O = 0;
		n1i11i = 0;
		n1i11l = 0;
		nl011i = 0;
		nl1l0O = 0;
		nl1Oil = 0;
		nl1OiO = 0;
		nl1Oli = 0;
		nl1Oll = 0;
		nl1OlO = 0;
		nl1OOi = 0;
		nl1OOl = 0;
		nl1OOO = 0;
		nli1lO = 0;
		nli1Oi = 0;
		nli1Ol = 0;
		nliOO0l = 0;
		nliOOlO = 0;
		nll000i = 0;
		nll00ii = 0;
		nll00il = 0;
		nll00iO = 0;
		nll01lO = 0;
		nll01Oi = 0;
		nll01OO = 0;
		nll0iiO = 0;
		nll0ili = 0;
		nll0iOO = 0;
		nll0l0i = 0;
		nll0l0l = 0;
		nll0l0O = 0;
		nll0l1i = 0;
		nll0l1l = 0;
		nll0l1O = 0;
		nll0lii = 0;
		nll0lil = 0;
		nll0liO = 0;
		nll0ll = 0;
		nll0lli = 0;
		nll0lll = 0;
		nll0llO = 0;
		nll0lOi = 0;
		nll0lOl = 0;
		nll0lOO = 0;
		nll0Oi = 0;
		nll0OO = 0;
		nll100i = 0;
		nll100l = 0;
		nll100O = 0;
		nll101i = 0;
		nll101l = 0;
		nll101O = 0;
		nll10ii = 0;
		nll110i = 0;
		nll110l = 0;
		nll110O = 0;
		nll111i = 0;
		nll111l = 0;
		nll111O = 0;
		nll11ii = 0;
		nll11il = 0;
		nll11iO = 0;
		nll11li = 0;
		nll11ll = 0;
		nll11lO = 0;
		nll11Oi = 0;
		nll11Ol = 0;
		nll11OO = 0;
		nlli1i = 0;
		nlli1O = 0;
		nllil0l = 0;
		nlliliO = 0;
		nllilli = 0;
		nllilll = 0;
		nllillO = 0;
		nllilOi = 0;
		nllilOl = 0;
		nllilOO = 0;
		nlliO0i = 0;
		nlliO0l = 0;
		nlliO0O = 0;
		nlliO1i = 0;
		nlliO1l = 0;
		nlliO1O = 0;
		nlliOii = 0;
		nlliOil = 0;
		nlliOiO = 0;
		nlliOli = 0;
		nlliOll = 0;
		nlliOlO = 0;
		nlliOOi = 0;
		nlliOOl = 0;
		nllO01i = 0;
		nllO01l = 0;
		nllO01O = 0;
		nllOi0O = 0;
		nllOiii = 0;
		nllOiil = 0;
		nllOiiO = 0;
		nllOO0l = 0;
		nllOO0O = 0;
		nllOOii = 0;
		nllOOil = 0;
		nllOOiO = 0;
		nllOOli = 0;
		nllOOll = 0;
		nllOOlO = 0;
		nllOOOi = 0;
		nllOOOl = 0;
		nllOOOO = 0;
		nlO100i = 0;
		nlO100l = 0;
		nlO100O = 0;
		nlO101i = 0;
		nlO101l = 0;
		nlO101O = 0;
		nlO110i = 0;
		nlO110l = 0;
		nlO110O = 0;
		nlO111i = 0;
		nlO111l = 0;
		nlO111O = 0;
		nlO11ii = 0;
		nlO11il = 0;
		nlO11iO = 0;
		nlO11li = 0;
		nlO11ll = 0;
		nlO11lO = 0;
		nlO11Oi = 0;
		nlO11Ol = 0;
		nlO11OO = 0;
		nlOi00i = 0;
		nlOi00l = 0;
		nlOi01i = 0;
		nlOi01l = 0;
		nlOi01O = 0;
		nlOi0ii = 0;
		nlOi1OO = 0;
		nlOil1i = 0;
		nlOil1l = 0;
		nlOiliO = 0;
		nlOilli = 0;
		nlOilll = 0;
		nlOillO = 0;
		nlOilOi = 0;
		nlOilOl = 0;
		nlOilOO = 0;
		nlOiO0i = 0;
		nlOiO0l = 0;
		nlOiO0O = 0;
		nlOiO1i = 0;
		nlOiO1l = 0;
		nlOiO1O = 0;
		nlOiOii = 0;
		nlOiOil = 0;
		nlOiOiO = 0;
		nlOiOli = 0;
		nlOiOll = 0;
		nlOiOlO = 0;
		nlOiOOi = 0;
		nlOiOOl = 0;
		nlOiOOO = 0;
		nlOl10i = 0;
		nlOl10l = 0;
		nlOl10O = 0;
		nlOl11i = 0;
		nlOl11l = 0;
		nlOl11O = 0;
		nlOl1ii = 0;
		nlOl1il = 0;
		nlOO00i = 0;
		nlOO00l = 0;
		nlOO00O = 0;
		nlOO01i = 0;
		nlOO01l = 0;
		nlOO01O = 0;
		nlOO0ii = 0;
		nlOO0il = 0;
		nlOO10O = 0;
		nlOO11i = 0;
		nlOO1il = 0;
		nlOO1iO = 0;
		nlOO1li = 0;
		nlOO1ll = 0;
		nlOO1lO = 0;
		nlOO1Oi = 0;
		nlOO1Ol = 0;
		nlOO1OO = 0;
		nlOOO0i = 0;
	end
	always @ ( posedge wire_nl1ii_clkout or  negedge wire_nlli1l_CLRN)
	begin
		if (wire_nlli1l_CLRN == 1'b0) 
		begin
			n0O11l <= 0;
			n0Oi0i <= 0;
			n1010i <= 0;
			n1010l <= 0;
			n1010O <= 0;
			n1011i <= 0;
			n1011l <= 0;
			n1011O <= 0;
			n101ii <= 0;
			n101il <= 0;
			n101iO <= 0;
			n101li <= 0;
			n101ll <= 0;
			n101lO <= 0;
			n101Oi <= 0;
			n101Ol <= 0;
			n10lil <= 0;
			n10liO <= 0;
			n10lli <= 0;
			n10lll <= 0;
			n10llO <= 0;
			n10lOi <= 0;
			n10lOl <= 0;
			n10lOO <= 0;
			n10O0i <= 0;
			n10O1i <= 0;
			n10O1l <= 0;
			n10O1O <= 0;
			n11OOi <= 0;
			n11OOl <= 0;
			n11OOO <= 0;
			n1i10O <= 0;
			n1i11i <= 0;
			n1i11l <= 0;
			nl011i <= 0;
			nl1l0O <= 0;
			nl1Oil <= 0;
			nl1OiO <= 0;
			nl1Oli <= 0;
			nl1Oll <= 0;
			nl1OlO <= 0;
			nl1OOi <= 0;
			nl1OOl <= 0;
			nl1OOO <= 0;
			nli1lO <= 0;
			nli1Oi <= 0;
			nli1Ol <= 0;
			nliOO0l <= 0;
			nliOOlO <= 0;
			nll000i <= 0;
			nll00ii <= 0;
			nll00il <= 0;
			nll00iO <= 0;
			nll01lO <= 0;
			nll01Oi <= 0;
			nll01OO <= 0;
			nll0iiO <= 0;
			nll0ili <= 0;
			nll0iOO <= 0;
			nll0l0i <= 0;
			nll0l0l <= 0;
			nll0l0O <= 0;
			nll0l1i <= 0;
			nll0l1l <= 0;
			nll0l1O <= 0;
			nll0lii <= 0;
			nll0lil <= 0;
			nll0liO <= 0;
			nll0ll <= 0;
			nll0lli <= 0;
			nll0lll <= 0;
			nll0llO <= 0;
			nll0lOi <= 0;
			nll0lOl <= 0;
			nll0lOO <= 0;
			nll0Oi <= 0;
			nll0OO <= 0;
			nll100i <= 0;
			nll100l <= 0;
			nll100O <= 0;
			nll101i <= 0;
			nll101l <= 0;
			nll101O <= 0;
			nll10ii <= 0;
			nll110i <= 0;
			nll110l <= 0;
			nll110O <= 0;
			nll111i <= 0;
			nll111l <= 0;
			nll111O <= 0;
			nll11ii <= 0;
			nll11il <= 0;
			nll11iO <= 0;
			nll11li <= 0;
			nll11ll <= 0;
			nll11lO <= 0;
			nll11Oi <= 0;
			nll11Ol <= 0;
			nll11OO <= 0;
			nlli1i <= 0;
			nlli1O <= 0;
			nllil0l <= 0;
			nlliliO <= 0;
			nllilli <= 0;
			nllilll <= 0;
			nllillO <= 0;
			nllilOi <= 0;
			nllilOl <= 0;
			nllilOO <= 0;
			nlliO0i <= 0;
			nlliO0l <= 0;
			nlliO0O <= 0;
			nlliO1i <= 0;
			nlliO1l <= 0;
			nlliO1O <= 0;
			nlliOii <= 0;
			nlliOil <= 0;
			nlliOiO <= 0;
			nlliOli <= 0;
			nlliOll <= 0;
			nlliOlO <= 0;
			nlliOOi <= 0;
			nlliOOl <= 0;
			nllO01i <= 0;
			nllO01l <= 0;
			nllO01O <= 0;
			nllOi0O <= 0;
			nllOiii <= 0;
			nllOiil <= 0;
			nllOiiO <= 0;
			nllOO0l <= 0;
			nllOO0O <= 0;
			nllOOii <= 0;
			nllOOil <= 0;
			nllOOiO <= 0;
			nllOOli <= 0;
			nllOOll <= 0;
			nllOOlO <= 0;
			nllOOOi <= 0;
			nllOOOl <= 0;
			nllOOOO <= 0;
			nlO100i <= 0;
			nlO100l <= 0;
			nlO100O <= 0;
			nlO101i <= 0;
			nlO101l <= 0;
			nlO101O <= 0;
			nlO110i <= 0;
			nlO110l <= 0;
			nlO110O <= 0;
			nlO111i <= 0;
			nlO111l <= 0;
			nlO111O <= 0;
			nlO11ii <= 0;
			nlO11il <= 0;
			nlO11iO <= 0;
			nlO11li <= 0;
			nlO11ll <= 0;
			nlO11lO <= 0;
			nlO11Oi <= 0;
			nlO11Ol <= 0;
			nlO11OO <= 0;
			nlOi00i <= 0;
			nlOi00l <= 0;
			nlOi01i <= 0;
			nlOi01l <= 0;
			nlOi01O <= 0;
			nlOi0ii <= 0;
			nlOi1OO <= 0;
			nlOil1i <= 0;
			nlOil1l <= 0;
			nlOiliO <= 0;
			nlOilli <= 0;
			nlOilll <= 0;
			nlOillO <= 0;
			nlOilOi <= 0;
			nlOilOl <= 0;
			nlOilOO <= 0;
			nlOiO0i <= 0;
			nlOiO0l <= 0;
			nlOiO0O <= 0;
			nlOiO1i <= 0;
			nlOiO1l <= 0;
			nlOiO1O <= 0;
			nlOiOii <= 0;
			nlOiOil <= 0;
			nlOiOiO <= 0;
			nlOiOli <= 0;
			nlOiOll <= 0;
			nlOiOlO <= 0;
			nlOiOOi <= 0;
			nlOiOOl <= 0;
			nlOiOOO <= 0;
			nlOl10i <= 0;
			nlOl10l <= 0;
			nlOl10O <= 0;
			nlOl11i <= 0;
			nlOl11l <= 0;
			nlOl11O <= 0;
			nlOl1ii <= 0;
			nlOl1il <= 0;
			nlOO00i <= 0;
			nlOO00l <= 0;
			nlOO00O <= 0;
			nlOO01i <= 0;
			nlOO01l <= 0;
			nlOO01O <= 0;
			nlOO0ii <= 0;
			nlOO0il <= 0;
			nlOO10O <= 0;
			nlOO11i <= 0;
			nlOO1il <= 0;
			nlOO1iO <= 0;
			nlOO1li <= 0;
			nlOO1ll <= 0;
			nlOO1lO <= 0;
			nlOO1Oi <= 0;
			nlOO1Ol <= 0;
			nlOO1OO <= 0;
			nlOOO0i <= 0;
		end
		else 
		begin
			n0O11l <= (~ ((~ (n0Oi0i ^ wire_n01lii_dout[0])) & (~ (n0Oiil ^ wire_n01lii_dout[1]))));
			n0Oi0i <= wire_n01lii_dout[0];
			n1010i <= wire_n100il_dataout;
			n1010l <= wire_n100iO_dataout;
			n1010O <= wire_n100li_dataout;
			n1011i <= wire_n1000l_dataout;
			n1011l <= wire_n1000O_dataout;
			n1011O <= wire_n100ii_dataout;
			n101ii <= wire_n100ll_dataout;
			n101il <= wire_n100lO_dataout;
			n101iO <= wire_n100Oi_dataout;
			n101li <= wire_n100Ol_dataout;
			n101ll <= wire_n100OO_dataout;
			n101lO <= wire_n10i1i_dataout;
			n101Oi <= wire_n10i1l_dataout;
			n101Ol <= wire_n10i1O_dataout;
			n10lil <= wire_n10O0l_dataout;
			n10liO <= wire_n10O0O_dataout;
			n10lli <= wire_n10Oii_dataout;
			n10lll <= wire_n10Oil_dataout;
			n10llO <= wire_n10OiO_dataout;
			n10lOi <= wire_n10Oli_dataout;
			n10lOl <= wire_n10Oll_dataout;
			n10lOO <= wire_n10OlO_dataout;
			n10O0i <= nil1i;
			n10O1i <= wire_n10OOi_dataout;
			n10O1l <= wire_n10OOl_dataout;
			n10O1O <= wire_n10OOO_dataout;
			n11OOi <= wire_n1001l_dataout;
			n11OOl <= wire_n1001O_dataout;
			n11OOO <= wire_n1000i_dataout;
			n1i10O <= nlilOl;
			n1i11i <= wire_n1i11O_dataout;
			n1i11l <= n1i10O;
			nl011i <= nlO1ii;
			nl1l0O <= nl1OlO;
			nl1Oil <= nl1OOi;
			nl1OiO <= nl1OOl;
			nl1Oli <= nl1OOO;
			nl1Oll <= nl011i;
			nl1OlO <= nlO11O;
			nl1OOi <= nlO10i;
			nl1OOl <= nlO10l;
			nl1OOO <= nlO10O;
			nli1lO <= nli1Oi;
			nli1Oi <= nli10O;
			nli1Ol <= wire_nli01i_dataout;
			nliOO0l <= wire_nliOOOi_dataout;
			nliOOlO <= wire_nll10il_dataout;
			nll000i <= wire_nll00li_dataout;
			nll00ii <= wire_nll00ll_dataout;
			nll00il <= wire_nll00lO_dataout;
			nll00iO <= wire_nll0ill_dataout;
			nll01lO <= wire_nliOO0O_dataout;
			nll01Oi <= wire_nll001i_dataout;
			nll01OO <= wire_nll000l_dataout;
			nll0iiO <= wire_nll0ilO_dataout;
			nll0ili <= wire_nll0O1i_dataout;
			nll0iOO <= wire_nll0O1l_dataout;
			nll0l0i <= wire_nll0O0O_dataout;
			nll0l0l <= wire_nll0Oii_dataout;
			nll0l0O <= wire_nll0Oil_dataout;
			nll0l1i <= wire_nll0O1O_dataout;
			nll0l1l <= wire_nll0O0i_dataout;
			nll0l1O <= wire_nll0O0l_dataout;
			nll0lii <= wire_nll0OiO_dataout;
			nll0lil <= wire_nll0Oli_dataout;
			nll0liO <= wire_nll0Oll_dataout;
			nll0ll <= (nlli1i & (~ nll0OO));
			nll0lli <= wire_nll0OlO_dataout;
			nll0lll <= wire_nll0OOi_dataout;
			nll0llO <= wire_nll0OOl_dataout;
			nll0lOi <= wire_nll0OOO_dataout;
			nll0lOl <= wire_nlli11i_dataout;
			nll0lOO <= wire_nllil0O_dataout;
			nll0Oi <= nll0OO;
			nll0OO <= nlli1i;
			nll100i <= wire_nll1ill_dataout;
			nll100l <= wire_nll1ilO_dataout;
			nll100O <= wire_nll1iOi_dataout;
			nll101i <= wire_nll1iil_dataout;
			nll101l <= wire_nll1iiO_dataout;
			nll101O <= wire_nll1ili_dataout;
			nll10ii <= wire_nliOOll_dataout;
			nll110i <= wire_nll10ll_dataout;
			nll110l <= wire_nll10lO_dataout;
			nll110O <= wire_nll10Oi_dataout;
			nll111i <= wire_nll01Ol_dataout;
			nll111l <= wire_nll10iO_dataout;
			nll111O <= wire_nll10li_dataout;
			nll11ii <= wire_nll10Ol_dataout;
			nll11il <= wire_nll10OO_dataout;
			nll11iO <= wire_nll1i1i_dataout;
			nll11li <= wire_nll1i1l_dataout;
			nll11ll <= wire_nll1i1O_dataout;
			nll11lO <= wire_nll1i0i_dataout;
			nll11Oi <= wire_nll1i0l_dataout;
			nll11Ol <= wire_nll1i0O_dataout;
			nll11OO <= wire_nll1iii_dataout;
			nlli1i <= (nlliii & nlli1O);
			nlli1O <= nlliii;
			nllil0l <= wire_nlliOOO_dataout;
			nlliliO <= wire_nlll11i_dataout;
			nllilli <= wire_nlll11l_dataout;
			nllilll <= wire_nlll11O_dataout;
			nllillO <= wire_nlll10i_dataout;
			nllilOi <= wire_nlll10l_dataout;
			nllilOl <= wire_nlll10O_dataout;
			nllilOO <= wire_nlll1ii_dataout;
			nlliO0i <= wire_nlll1ll_dataout;
			nlliO0l <= wire_nlll1lO_dataout;
			nlliO0O <= wire_nlll1Oi_dataout;
			nlliO1i <= wire_nlll1il_dataout;
			nlliO1l <= wire_nlll1iO_dataout;
			nlliO1O <= wire_nlll1li_dataout;
			nlliOii <= wire_nlll1Ol_dataout;
			nlliOil <= wire_nlll1OO_dataout;
			nlliOiO <= wire_nlll01i_dataout;
			nlliOli <= wire_nlll01l_dataout;
			nlliOll <= wire_nlll01O_dataout;
			nlliOlO <= wire_nlll00i_dataout;
			nlliOOi <= wire_nlll00l_dataout;
			nlliOOl <= wire_nllO00i_dataout;
			nllO01i <= wire_nllO00l_dataout;
			nllO01l <= wire_nllO00O_dataout;
			nllO01O <= wire_nllOili_dataout;
			nllOi0O <= wire_nllOill_dataout;
			nllOiii <= wire_nllOilO_dataout;
			nllOiil <= wire_nllOiOi_dataout;
			nllOiiO <= wire_nlO10ii_dataout;
			nllOO0l <= wire_nlO10il_dataout;
			nllOO0O <= wire_nlO10iO_dataout;
			nllOOii <= wire_nlO10li_dataout;
			nllOOil <= wire_nlO10ll_dataout;
			nllOOiO <= wire_nlO10lO_dataout;
			nllOOli <= wire_nlO10Oi_dataout;
			nllOOll <= wire_nlO10Ol_dataout;
			nllOOlO <= wire_nlO10OO_dataout;
			nllOOOi <= wire_nlO1i1i_dataout;
			nllOOOl <= wire_nlO1i1l_dataout;
			nllOOOO <= wire_nlO1i1O_dataout;
			nlO100i <= wire_nlO1lii_dataout;
			nlO100l <= wire_nlO1lil_dataout;
			nlO100O <= wire_nlOi0il_dataout;
			nlO101i <= wire_nlO1l0i_dataout;
			nlO101l <= wire_nlO1l0l_dataout;
			nlO101O <= wire_nlO1l0O_dataout;
			nlO110i <= wire_nlO1iii_dataout;
			nlO110l <= wire_nlO1iil_dataout;
			nlO110O <= wire_nlO1iiO_dataout;
			nlO111i <= wire_nlO1i0i_dataout;
			nlO111l <= wire_nlO1i0l_dataout;
			nlO111O <= wire_nlO1i0O_dataout;
			nlO11ii <= wire_nlO1ili_dataout;
			nlO11il <= wire_nlO1ill_dataout;
			nlO11iO <= wire_nlO1ilO_dataout;
			nlO11li <= wire_nlO1iOi_dataout;
			nlO11ll <= wire_nlO1iOl_dataout;
			nlO11lO <= wire_nlO1iOO_dataout;
			nlO11Oi <= wire_nlO1l1i_dataout;
			nlO11Ol <= wire_nlO1l1l_dataout;
			nlO11OO <= wire_nlO1l1O_dataout;
			nlOi00i <= wire_nlOi0Oi_dataout;
			nlOi00l <= wire_nlOi0Ol_dataout;
			nlOi01i <= wire_nlOi0li_dataout;
			nlOi01l <= wire_nlOi0ll_dataout;
			nlOi01O <= wire_nlOi0lO_dataout;
			nlOi0ii <= wire_nliliOl_dout;
			nlOi1OO <= wire_nlOi0iO_dataout;
			nlOil1i <= wire_nlOil1O_dataout;
			nlOil1l <= wire_nlOl1iO_dataout;
			nlOiliO <= wire_nlOl1li_dataout;
			nlOilli <= wire_nlOl1ll_dataout;
			nlOilll <= wire_nlOl1lO_dataout;
			nlOillO <= wire_nlOl1Oi_dataout;
			nlOilOi <= wire_nlOl1Ol_dataout;
			nlOilOl <= wire_nlOl1OO_dataout;
			nlOilOO <= wire_nlOl01i_dataout;
			nlOiO0i <= wire_nlOl00l_dataout;
			nlOiO0l <= wire_nlOl00O_dataout;
			nlOiO0O <= wire_nlOl0ii_dataout;
			nlOiO1i <= wire_nlOl01l_dataout;
			nlOiO1l <= wire_nlOl01O_dataout;
			nlOiO1O <= wire_nlOl00i_dataout;
			nlOiOii <= wire_nlOl0il_dataout;
			nlOiOil <= wire_nlOl0iO_dataout;
			nlOiOiO <= wire_nlOl0li_dataout;
			nlOiOli <= wire_nlOl0ll_dataout;
			nlOiOll <= wire_nlOl0lO_dataout;
			nlOiOlO <= wire_nlOl0Oi_dataout;
			nlOiOOi <= wire_nlOl0Ol_dataout;
			nlOiOOl <= wire_nlOl0OO_dataout;
			nlOiOOO <= wire_nlOli1i_dataout;
			nlOl10i <= wire_nlOli0l_dataout;
			nlOl10l <= wire_nlOli0O_dataout;
			nlOl10O <= wire_nlOliii_dataout;
			nlOl11i <= wire_nlOli1l_dataout;
			nlOl11l <= wire_nlOli1O_dataout;
			nlOl11O <= wire_nlOli0i_dataout;
			nlOl1ii <= wire_nlOliil_dataout;
			nlOl1il <= wire_nlOO11l_dataout;
			nlOO00i <= wire_nlOOi0O_dataout;
			nlOO00l <= wire_nlOOiii_dataout;
			nlOO00O <= wire_nlOOiil_dataout;
			nlOO01i <= wire_nlOOi1O_dataout;
			nlOO01l <= wire_nlOOi0i_dataout;
			nlOO01O <= wire_nlOOi0l_dataout;
			nlOO0ii <= wire_nlOOiiO_dataout;
			nlOO0il <= wire_nlOOO0l_dataout;
			nlOO10O <= wire_nlOO0iO_dataout;
			nlOO11i <= wire_nlOO1ii_dataout;
			nlOO1il <= wire_nlOO0li_dataout;
			nlOO1iO <= wire_nlOO0ll_dataout;
			nlOO1li <= wire_nlOO0lO_dataout;
			nlOO1ll <= wire_nlOO0Oi_dataout;
			nlOO1lO <= wire_nlOO0Ol_dataout;
			nlOO1Oi <= wire_nlOO0OO_dataout;
			nlOO1Ol <= wire_nlOOi1i_dataout;
			nlOO1OO <= wire_nlOOi1l_dataout;
			nlOOO0i <= wire_n1001i_dataout;
		end
	end
	assign
		wire_nlli1l_CLRN = ((nli01Ol64 ^ nli01Ol63) & (~ nlilill));
	initial
	begin
		nl010i = 0;
		nlll0l = 0;
		nlOO0l = 0;
	end
	always @ (clk or wire_nlOO0i_PRN or wire_nlOO0i_CLRN)
	begin
		if (wire_nlOO0i_PRN == 1'b0) 
		begin
			nl010i <= 1;
			nlll0l <= 1;
			nlOO0l <= 1;
		end
		else if  (wire_nlOO0i_CLRN == 1'b0) 
		begin
			nl010i <= 0;
			nlll0l <= 0;
			nlOO0l <= 0;
		end
		else 
		if (clk != nlOO0i_clk_prev && clk == 1'b1) 
		begin
			nl010i <= wire_nl01il_dataout;
			nlll0l <= (~ nlOO1O);
			nlOO0l <= wire_nlOi0l_o;
		end
		nlOO0i_clk_prev <= clk;
	end
	assign
		wire_nlOO0i_CLRN = (nli00Ol60 ^ nli00Ol59),
		wire_nlOO0i_PRN = ((nli00Oi62 ^ nli00Oi61) & (~ reset));
	event nl010i_event;
	event nlll0l_event;
	event nlOO0l_event;
	initial
		#1 ->nl010i_event;
	initial
		#1 ->nlll0l_event;
	initial
		#1 ->nlOO0l_event;
	always @(nl010i_event)
		nl010i <= 1;
	always @(nlll0l_event)
		nlll0l <= 1;
	always @(nlOO0l_event)
		nlOO0l <= 1;
	initial
	begin
		niOO0i = 0;
		niOO0l = 0;
		niOO0O = 0;
		niOO1i = 0;
		niOO1l = 0;
		niOO1O = 0;
		niOOii = 0;
		niOOil = 0;
		niOOiO = 0;
		niOOli = 0;
		niOOll = 0;
		niOOlO = 0;
		niOOOi = 0;
		niOOOl = 0;
		niOOOO = 0;
		nl010l = 0;
		nl011l = 0;
		nl011O = 0;
		nl1i0i = 0;
		nli10l = 0;
		nli10O = 0;
		nli11O = 0;
		nli1ll = 0;
		nlil0i = 0;
		nlil0O = 0;
		nlil1O = 0;
		nlilii = 0;
		nlilOl = 0;
		nliO0l = 0;
		nliO0O = 0;
		nliOii = 0;
		nliOil = 0;
		nll0ii = 0;
		nll0iO = 0;
		nll0li = 0;
		nll11i = 0;
		nll11l = 0;
		nll1il = 0;
		nll1iO = 0;
		nll1li = 0;
		nll1ll = 0;
		nll1lO = 0;
		nll1Oi = 0;
		nlli0i = 0;
		nlli0O = 0;
		nlliii = 0;
		nlliil = 0;
		nllilO = 0;
		nlliOi = 0;
		nlliOl = 0;
		nlliOO = 0;
		nlll0i = 0;
		nlll1i = 0;
		nlll1l = 0;
		nlll1O = 0;
		nllO0i = 0;
		nllO0l = 0;
		nllO0O = 0;
		nllO1i = 0;
		nllO1l = 0;
		nllO1O = 0;
		nllOii = 0;
		nllOil = 0;
		nllOiO = 0;
		nllOli = 0;
		nllOll = 0;
		nllOlO = 0;
		nllOOi = 0;
		nllOOl = 0;
		nllOOO = 0;
		nlO00i = 0;
		nlO00l = 0;
		nlO00O = 0;
		nlO01i = 0;
		nlO01l = 0;
		nlO01O = 0;
		nlO0ii = 0;
		nlO0il = 0;
		nlO0iO = 0;
		nlO0li = 0;
		nlO10i = 0;
		nlO10l = 0;
		nlO10O = 0;
		nlO11i = 0;
		nlO11l = 0;
		nlO11O = 0;
		nlO1ii = 0;
		nlO1il = 0;
		nlO1iO = 0;
		nlO1li = 0;
		nlO1ll = 0;
		nlO1lO = 0;
		nlO1Oi = 0;
		nlO1Ol = 0;
		nlO1OO = 0;
		nlOlOO = 0;
		nlOO1i = 0;
		nlOO1l = 0;
		nlOO1O = 0;
		nlOOii = 0;
	end
	always @ (clk or wire_nlOO0O_PRN or reset)
	begin
		if (wire_nlOO0O_PRN == 1'b0) 
		begin
			niOO0i <= 1;
			niOO0l <= 1;
			niOO0O <= 1;
			niOO1i <= 1;
			niOO1l <= 1;
			niOO1O <= 1;
			niOOii <= 1;
			niOOil <= 1;
			niOOiO <= 1;
			niOOli <= 1;
			niOOll <= 1;
			niOOlO <= 1;
			niOOOi <= 1;
			niOOOl <= 1;
			niOOOO <= 1;
			nl010l <= 1;
			nl011l <= 1;
			nl011O <= 1;
			nl1i0i <= 1;
			nli10l <= 1;
			nli10O <= 1;
			nli11O <= 1;
			nli1ll <= 1;
			nlil0i <= 1;
			nlil0O <= 1;
			nlil1O <= 1;
			nlilii <= 1;
			nlilOl <= 1;
			nliO0l <= 1;
			nliO0O <= 1;
			nliOii <= 1;
			nliOil <= 1;
			nll0ii <= 1;
			nll0iO <= 1;
			nll0li <= 1;
			nll11i <= 1;
			nll11l <= 1;
			nll1il <= 1;
			nll1iO <= 1;
			nll1li <= 1;
			nll1ll <= 1;
			nll1lO <= 1;
			nll1Oi <= 1;
			nlli0i <= 1;
			nlli0O <= 1;
			nlliii <= 1;
			nlliil <= 1;
			nllilO <= 1;
			nlliOi <= 1;
			nlliOl <= 1;
			nlliOO <= 1;
			nlll0i <= 1;
			nlll1i <= 1;
			nlll1l <= 1;
			nlll1O <= 1;
			nllO0i <= 1;
			nllO0l <= 1;
			nllO0O <= 1;
			nllO1i <= 1;
			nllO1l <= 1;
			nllO1O <= 1;
			nllOii <= 1;
			nllOil <= 1;
			nllOiO <= 1;
			nllOli <= 1;
			nllOll <= 1;
			nllOlO <= 1;
			nllOOi <= 1;
			nllOOl <= 1;
			nllOOO <= 1;
			nlO00i <= 1;
			nlO00l <= 1;
			nlO00O <= 1;
			nlO01i <= 1;
			nlO01l <= 1;
			nlO01O <= 1;
			nlO0ii <= 1;
			nlO0il <= 1;
			nlO0iO <= 1;
			nlO0li <= 1;
			nlO10i <= 1;
			nlO10l <= 1;
			nlO10O <= 1;
			nlO11i <= 1;
			nlO11l <= 1;
			nlO11O <= 1;
			nlO1ii <= 1;
			nlO1il <= 1;
			nlO1iO <= 1;
			nlO1li <= 1;
			nlO1ll <= 1;
			nlO1lO <= 1;
			nlO1Oi <= 1;
			nlO1Ol <= 1;
			nlO1OO <= 1;
			nlOlOO <= 1;
			nlOO1i <= 1;
			nlOO1l <= 1;
			nlOO1O <= 1;
			nlOOii <= 1;
		end
		else if  (reset == 1'b1) 
		begin
			niOO0i <= 0;
			niOO0l <= 0;
			niOO0O <= 0;
			niOO1i <= 0;
			niOO1l <= 0;
			niOO1O <= 0;
			niOOii <= 0;
			niOOil <= 0;
			niOOiO <= 0;
			niOOli <= 0;
			niOOll <= 0;
			niOOlO <= 0;
			niOOOi <= 0;
			niOOOl <= 0;
			niOOOO <= 0;
			nl010l <= 0;
			nl011l <= 0;
			nl011O <= 0;
			nl1i0i <= 0;
			nli10l <= 0;
			nli10O <= 0;
			nli11O <= 0;
			nli1ll <= 0;
			nlil0i <= 0;
			nlil0O <= 0;
			nlil1O <= 0;
			nlilii <= 0;
			nlilOl <= 0;
			nliO0l <= 0;
			nliO0O <= 0;
			nliOii <= 0;
			nliOil <= 0;
			nll0ii <= 0;
			nll0iO <= 0;
			nll0li <= 0;
			nll11i <= 0;
			nll11l <= 0;
			nll1il <= 0;
			nll1iO <= 0;
			nll1li <= 0;
			nll1ll <= 0;
			nll1lO <= 0;
			nll1Oi <= 0;
			nlli0i <= 0;
			nlli0O <= 0;
			nlliii <= 0;
			nlliil <= 0;
			nllilO <= 0;
			nlliOi <= 0;
			nlliOl <= 0;
			nlliOO <= 0;
			nlll0i <= 0;
			nlll1i <= 0;
			nlll1l <= 0;
			nlll1O <= 0;
			nllO0i <= 0;
			nllO0l <= 0;
			nllO0O <= 0;
			nllO1i <= 0;
			nllO1l <= 0;
			nllO1O <= 0;
			nllOii <= 0;
			nllOil <= 0;
			nllOiO <= 0;
			nllOli <= 0;
			nllOll <= 0;
			nllOlO <= 0;
			nllOOi <= 0;
			nllOOl <= 0;
			nllOOO <= 0;
			nlO00i <= 0;
			nlO00l <= 0;
			nlO00O <= 0;
			nlO01i <= 0;
			nlO01l <= 0;
			nlO01O <= 0;
			nlO0ii <= 0;
			nlO0il <= 0;
			nlO0iO <= 0;
			nlO0li <= 0;
			nlO10i <= 0;
			nlO10l <= 0;
			nlO10O <= 0;
			nlO11i <= 0;
			nlO11l <= 0;
			nlO11O <= 0;
			nlO1ii <= 0;
			nlO1il <= 0;
			nlO1iO <= 0;
			nlO1li <= 0;
			nlO1ll <= 0;
			nlO1lO <= 0;
			nlO1Oi <= 0;
			nlO1Ol <= 0;
			nlO1OO <= 0;
			nlOlOO <= 0;
			nlOO1i <= 0;
			nlOO1l <= 0;
			nlOO1O <= 0;
			nlOOii <= 0;
		end
		else 
		if (clk != nlOO0O_clk_prev && clk == 1'b1) 
		begin
			niOO0i <= wire_nl110O_dataout;
			niOO0l <= wire_nl11ii_dataout;
			niOO0O <= wire_nl11il_dataout;
			niOO1i <= wire_nl111O_dataout;
			niOO1l <= wire_nl110i_dataout;
			niOO1O <= wire_nl110l_dataout;
			niOOii <= wire_nl11iO_dataout;
			niOOil <= wire_nl11li_dataout;
			niOOiO <= wire_nl11ll_dataout;
			niOOli <= wire_nl11lO_dataout;
			niOOll <= wire_nl11Oi_dataout;
			niOOlO <= wire_nl11Ol_dataout;
			niOOOi <= wire_nl11OO_dataout;
			niOOOl <= wire_nl101i_dataout;
			niOOOO <= wire_nl101l_dataout;
			nl010l <= wire_nl00il_dataout;
			nl011l <= wire_nl010O_dataout;
			nl011O <= wire_nl01ii_dataout;
			nl1i0i <= wire_nl111l_dataout;
			nli10l <= wire_nli1ii_dataout;
			nli10O <= nli1ll;
			nli11O <= nli10O;
			nli1ll <= nli1Ol;
			nlil0i <= wire_nlilli_dataout;
			nlil0O <= ((~ nll11i) & (nll1lO & nliOOi));
			nlil1O <= nll1li;
			nlilii <= wire_nlilOO_dataout;
			nlilOl <= (nll11i | nliOli);
			nliO0l <= nliOOi;
			nliO0O <= nliOll;
			nliOii <= nliOil;
			nliOil <= wire_nll11O_dataout;
			nll0ii <= nll01l;
			nll0iO <= wire_nll0lO_dataout;
			nll0li <= wire_nlO0lO_o;
			nll11i <= wire_nll10l_dataout;
			nll11l <= nlO11l;
			nll1il <= nll1iO;
			nll1iO <= nil1i;
			nll1li <= nll1ll;
			nll1ll <= nll01Oi;
			nll1lO <= nll1Oi;
			nll1Oi <= nll111i;
			nlli0i <= nll0Oi;
			nlli0O <= wire_nlliiO_dataout;
			nlliii <= wire_nlO0Ol_o;
			nlliil <= nli01OO;
			nllilO <= wire_nlll0O_dataout;
			nlliOi <= wire_nlllii_dataout;
			nlliOl <= wire_nlllil_dataout;
			nlliOO <= wire_nllliO_dataout;
			nlll0i <= wire_nlllOi_dataout;
			nlll1i <= wire_nlllli_dataout;
			nlll1l <= wire_nlllll_dataout;
			nlll1O <= wire_nllllO_dataout;
			nllO0i <= niOO1O;
			nllO0l <= niOO0i;
			nllO0O <= niOO0l;
			nllO1i <= nl1i0i;
			nllO1l <= niOO1i;
			nllO1O <= niOO1l;
			nllOii <= niOO0O;
			nllOil <= niOOii;
			nllOiO <= niOOil;
			nllOli <= niOOiO;
			nllOll <= niOOli;
			nllOlO <= niOOll;
			nllOOi <= niOOlO;
			nllOOl <= niOOOi;
			nllOOO <= niOOOl;
			nlO00i <= writedata[10];
			nlO00l <= writedata[11];
			nlO00O <= writedata[12];
			nlO01i <= writedata[7];
			nlO01l <= writedata[8];
			nlO01O <= writedata[9];
			nlO0ii <= writedata[13];
			nlO0il <= writedata[14];
			nlO0iO <= writedata[15];
			nlO0li <= wire_nlO0lO_o;
			nlO10i <= address[1];
			nlO10l <= address[2];
			nlO10O <= address[3];
			nlO11i <= niOOOO;
			nlO11l <= wire_nlOi1i_o;
			nlO11O <= address[0];
			nlO1ii <= address[4];
			nlO1il <= wire_nlO0ll_dataout;
			nlO1iO <= writedata[0];
			nlO1li <= writedata[1];
			nlO1ll <= writedata[2];
			nlO1lO <= writedata[3];
			nlO1Oi <= writedata[4];
			nlO1Ol <= writedata[5];
			nlO1OO <= writedata[6];
			nlOlOO <= wire_nlO0Ol_o;
			nlOO1i <= nlOO1O;
			nlOO1l <= wire_nlOi1i_o;
			nlOO1O <= wire_nlOi1O_o;
			nlOOii <= wire_nlOOil_dataout;
		end
		nlOO0O_clk_prev <= clk;
	end
	assign
		wire_nlOO0O_PRN = (nli00OO58 ^ nli00OO57);
	and(wire_n0000i_dataout, wire_n000ll_dataout, nli1i1l);
	and(wire_n0000l_dataout, wire_n000lO_dataout, nli1i1l);
	and(wire_n0000O_dataout, wire_n000Oi_dataout, nli1i1l);
	assign		wire_n0001i_dataout = (nli1i1i === 1'b1) ? wire_n00iiO_dataout : wire_n000il_dataout;
	assign		wire_n0001l_dataout = (nli1i1i === 1'b1) ? wire_n00ili_dataout : wire_n000iO_dataout;
	and(wire_n0001O_dataout, wire_n000li_dataout, nli1i1l);
	and(wire_n000ii_dataout, wire_n000Ol_dataout, nli1i1l);
	and(wire_n000il_dataout, wire_n000OO_dataout, nli1i1l);
	and(wire_n000iO_dataout, wire_n00i1i_dataout, nli1i1l);
	and(wire_n000li_dataout, wire_n00i1l_o[0], ~(wire_n00i1O_o));
	and(wire_n000ll_dataout, wire_n00i1l_o[1], ~(wire_n00i1O_o));
	and(wire_n000lO_dataout, wire_n00i1l_o[2], ~(wire_n00i1O_o));
	and(wire_n000Oi_dataout, wire_n00i1l_o[3], ~(wire_n00i1O_o));
	and(wire_n000Ol_dataout, wire_n00i1l_o[4], ~(wire_n00i1O_o));
	and(wire_n000OO_dataout, wire_n00i1l_o[5], ~(wire_n00i1O_o));
	assign		wire_n0011i_dataout = (nli1i1i === 1'b1) ? nli10Ol : wire_n0011l_dataout;
	and(wire_n0011l_dataout, nli10OO, nli1i1l);
	assign		wire_n001ll_dataout = (nli1i1i === 1'b1) ? wire_n00i0i_dataout : wire_n0001O_dataout;
	assign		wire_n001lO_dataout = (nli1i1i === 1'b1) ? wire_n00i0l_dataout : wire_n0000i_dataout;
	assign		wire_n001Oi_dataout = (nli1i1i === 1'b1) ? wire_n00i0O_dataout : wire_n0000l_dataout;
	assign		wire_n001Ol_dataout = (nli1i1i === 1'b1) ? wire_n00iii_dataout : wire_n0000O_dataout;
	assign		wire_n001OO_dataout = (nli1i1i === 1'b1) ? wire_n00iil_dataout : wire_n000ii_dataout;
	and(wire_n00i0i_dataout, wire_n00i1l_o[0], ~(nli1i1O));
	and(wire_n00i0l_dataout, wire_n00i1l_o[1], ~(nli1i1O));
	and(wire_n00i0O_dataout, wire_n00i1l_o[2], ~(nli1i1O));
	and(wire_n00i1i_dataout, wire_n00i1l_o[6], ~(wire_n00i1O_o));
	and(wire_n00iii_dataout, wire_n00i1l_o[3], ~(nli1i1O));
	and(wire_n00iil_dataout, wire_n00i1l_o[4], ~(nli1i1O));
	and(wire_n00iiO_dataout, wire_n00i1l_o[5], ~(nli1i1O));
	and(wire_n00ili_dataout, wire_n00i1l_o[6], ~(nli1i1O));
	and(wire_n00l0i_dataout, (~ n01Oli), ~(nli1i0i));
	and(wire_n00l1O_dataout, n01Oli, ~(nli1i0i));
	and(wire_n00lii_dataout, wire_n00lli_dataout, ~((~ nli1iiO)));
	and(wire_n00lil_dataout, nli1iii, ~((~ nli1iiO)));
	or(wire_n00liO_dataout, wire_n00lll_dataout, (~ nli1iiO));
	and(wire_n00lli_dataout, nli1i0O, ~(nli1iii));
	and(wire_n00lll_dataout, (~ nli1i0O), ~(nli1iii));
	or(wire_n00O1l_dataout, wire_n00O0i_o[0], nli1iiO);
	and(wire_n00O1O_dataout, wire_n00O0i_o[1], ~(nli1iiO));
	and(wire_n0100i_dataout, n0110i, ~(wire_n1i1li_dout));
	and(wire_n0100l_dataout, n0110l, ~(wire_n1i1li_dout));
	and(wire_n0100O_dataout, n0110O, ~(wire_n1i1li_dout));
	or(wire_n010i_dataout, wire_n01ii_dataout, nli0ili);
	and(wire_n010ii_dataout, wire_n1OiiO_dataout, ~(wire_n1i1li_dout));
	and(wire_n010il_dataout, n011il, ~(wire_n1i1li_dout));
	and(wire_n010iO_dataout, n011iO, ~(wire_n1i1li_dout));
	assign		wire_n010l_dataout = (n011i === 1'b1) ? wire_n01il_o[1] : n01iO;
	and(wire_n010li_dataout, n011li, ~(wire_n1i1li_dout));
	and(wire_n010ll_dataout, wire_n1Oili_o, ~(wire_n1i1li_dout));
	and(wire_n010lO_dataout, wire_n1OilO_dataout, ~(wire_n1i1li_dout));
	assign		wire_n010O_dataout = (n011i === 1'b1) ? wire_n01il_o[2] : n1OOO;
	and(wire_n010Oi_dataout, n011Oi, ~(wire_n1i1li_dout));
	and(wire_n010Ol_dataout, wire_n1OiOi_o, ~(wire_n1i1li_dout));
	and(wire_n010OO_dataout, n011OO, ~(wire_n1i1li_dout));
	and(wire_n011l_dataout, wire_n010l_dataout, ~(nli0ili));
	or(wire_n011O_dataout, wire_n010O_dataout, nli0ili);
	or(wire_n01i0i_dataout, wire_n1Ol0l_o, wire_n1i1li_dout);
	and(wire_n01i1i_dataout, wire_n1OiOl_dataout, ~(wire_n1i1li_dout));
	and(wire_n01i1l_dataout, wire_n1OiOO_o, ~(wire_n1i1li_dout));
	and(wire_n01i1O_dataout, wire_n1Ol1O_o, ~(wire_n1i1li_dout));
	and(wire_n01ii_dataout, wire_n01il_o[3], n011i);
	assign		wire_n01iii_dataout = (wire_n01iil_o[1] === 1'b1) ? (~ ((~ n1i00l) & (~ n01iOl))) : (n1i00l | n01iOl);
	and(wire_n01ilO_dataout, wire_n01iii_dataout, ~(n01ill));
	or(wire_n01Oll_dataout, (n00O1i & (~ nli10Oi)), (n00O0O & (~ nli10Oi)));
	and(wire_n0i00i_dataout, wire_n0i0ii_o[1], wire_n0i0il_o);
	and(wire_n0i00l_dataout, wire_n0i0ii_o[2], wire_n0i0il_o);
	and(wire_n0i00O_dataout, wire_n0i0ii_o[3], wire_n0i0il_o);
	and(wire_n0i01O_dataout, wire_n0i0ii_o[0], wire_n0i0il_o);
	and(wire_n0iilO_dataout, wire_n0il1i_o[0], wire_n0il1l_o);
	and(wire_n0iiOi_dataout, wire_n0il1i_o[1], wire_n0il1l_o);
	and(wire_n0iiOl_dataout, wire_n0il1i_o[2], wire_n0il1l_o);
	and(wire_n0iiOO_dataout, wire_n0il1i_o[3], wire_n0il1l_o);
	and(wire_n0il0i_dataout, wire_n00OOO_q_b[1], n0iOii);
	and(wire_n0il0l_dataout, wire_n00OOO_q_b[2], n0iOii);
	and(wire_n0il0O_dataout, wire_n00OOO_q_b[3], n0iOii);
	and(wire_n0il1O_dataout, wire_n00OOO_q_b[0], n0iOii);
	and(wire_n0ilii_dataout, wire_n00OOO_q_b[4], n0iOii);
	and(wire_n0ilil_dataout, wire_n00OOO_q_b[5], n0iOii);
	and(wire_n0iliO_dataout, wire_n00OOO_q_b[6], n0iOii);
	and(wire_n0illi_dataout, wire_n00OOO_q_b[7], n0iOii);
	and(wire_n0illl_dataout, wire_n00OOO_q_b[8], n0iOii);
	and(wire_n0illO_dataout, wire_n00OOO_q_b[9], n0iOii);
	assign		wire_n0l0lO_dataout = (((n0lili & nli1ill) & (~ ((~ wire_n0illl_dataout) & (n0iO0i & (~ n0l0ll))))) === 1'b1) ? n0Oi1i : wire_n0l0Oi_dataout;
	and(wire_n0l0Oi_dataout, n0Oi1i, ((n0lili & (~ nli1ill)) & (~ (n0iO0i & (~ wire_n0illl_dataout)))));
	or(wire_n0lill_dataout, (~ n0iO0i), wire_n0lilO_o[1]);
	and(wire_n0ll0i_dataout, n0ll1O, n0lO1i);
	and(wire_n0ll0l_dataout, n0llll, n0lO1i);
	and(wire_n0ll0O_dataout, n0lllO, n0lO1i);
	and(wire_n0llii_dataout, n0llOi, n0lO1i);
	and(wire_n0llil_dataout, n0llOl, n0lO1i);
	and(wire_n0lliO_dataout, n0llOO, n0lO1i);
	assign		wire_n0lO0i_dataout = (n0Oi1i === 1'b1) ? wire_n0iliO_dataout : wire_n0il0l_dataout;
	assign		wire_n0lO0l_dataout = (n0Oi1i === 1'b1) ? wire_n0illi_dataout : wire_n0il0O_dataout;
	assign		wire_n0lO1l_dataout = (n0Oi1i === 1'b1) ? wire_n0ilii_dataout : wire_n0il1O_dataout;
	assign		wire_n0lO1O_dataout = (n0Oi1i === 1'b1) ? wire_n0ilil_dataout : wire_n0il0i_dataout;
	and(wire_n0O00i_dataout, wire_n0ilil_dataout, nli1ilO);
	and(wire_n0O00l_dataout, wire_n0iliO_dataout, nli1ilO);
	and(wire_n0O00O_dataout, wire_n0illi_dataout, nli1ilO);
	and(wire_n0O01i_dataout, wire_n0il0l_dataout, nli1ilO);
	and(wire_n0O01l_dataout, wire_n0il0O_dataout, nli1ilO);
	and(wire_n0O01O_dataout, wire_n0ilii_dataout, nli1ilO);
	and(wire_n0O0ii_dataout, wire_n0illl_dataout, nli1ilO);
	and(wire_n0O0il_dataout, wire_n0illO_dataout, nli1ilO);
	and(wire_n0O1Ol_dataout, wire_n0il1O_dataout, nli1ilO);
	and(wire_n0O1OO_dataout, wire_n0il0i_dataout, nli1ilO);
	assign		wire_n0Oi0l_dataout = (nlil01i === 1'b1) ? wire_n0Oi0O_dataout : n0Oi1i;
	or(wire_n0Oi0O_dataout, (~ n0Oi1i), nli1ilO);
	assign		wire_n0OOll_dataout = (nli1iOi === 1'b1) ? ni1i1O : wire_ni110i_dataout;
	assign		wire_n0OOlO_dataout = (nli1iOi === 1'b1) ? ni1i0i : wire_ni110l_dataout;
	assign		wire_n0OOOi_dataout = (nli1iOi === 1'b1) ? ni1i0l : wire_ni110O_dataout;
	assign		wire_n0OOOl_dataout = (nli1iOi === 1'b1) ? ni1i0O : wire_ni11ii_dataout;
	assign		wire_n0OOOO_dataout = (nli1iOi === 1'b1) ? ni1iii : wire_ni11il_dataout;
	and(wire_n1000i_dataout, wire_n10iil_dataout, ~(n1i11l));
	and(wire_n1000l_dataout, wire_n10iiO_dataout, ~(n1i11l));
	and(wire_n1000O_dataout, (~ nil1i), ~(n1i11l));
	and(wire_n1001i_dataout, wire_n10i0l_dataout, ~(n1i11l));
	and(wire_n1001l_dataout, wire_n10i0O_dataout, ~(n1i11l));
	and(wire_n1001O_dataout, wire_n10iii_dataout, ~(n1i11l));
	and(wire_n100ii_dataout, wire_n10ili_dataout, ~(n1i11l));
	and(wire_n100il_dataout, wire_n10ill_dataout, ~(n1i11l));
	and(wire_n100iO_dataout, wire_n10ilO_dataout, ~(n1i11l));
	and(wire_n100li_dataout, wire_n10iOi_dataout, ~(n1i11l));
	and(wire_n100ll_dataout, wire_n10iOl_dataout, ~(n1i11l));
	and(wire_n100lO_dataout, wire_n10iOO_dataout, ~(n1i11l));
	and(wire_n100Oi_dataout, wire_n10l1i_dataout, ~(n1i11l));
	and(wire_n100Ol_dataout, wire_n10l1l_dataout, ~(n1i11l));
	and(wire_n100OO_dataout, wire_n10l1O_dataout, ~(n1i11l));
	or(wire_n10i0i_dataout, wire_n10lii_dataout, n1i11l);
	and(wire_n10i0l_dataout, wire_nlOOOil_o, ~((~ nil1i)));
	and(wire_n10i0O_dataout, wire_nlOOOli_dataout, ~((~ nil1i)));
	and(wire_n10i1i_dataout, wire_n10l0i_dataout, ~(n1i11l));
	and(wire_n10i1l_dataout, wire_n10l0l_dataout, ~(n1i11l));
	and(wire_n10i1O_dataout, wire_n10l0O_dataout, ~(n1i11l));
	and(wire_n10iii_dataout, wire_nlOOOll_dataout, ~((~ nil1i)));
	and(wire_n10iil_dataout, wire_nlOOOlO_o, ~((~ nil1i)));
	and(wire_n10iiO_dataout, wire_nlOOOOl_o, ~((~ nil1i)));
	and(wire_n10ili_dataout, wire_n1111i_o, ~((~ nil1i)));
	and(wire_n10ill_dataout, wire_n1111O_dataout, ~((~ nil1i)));
	and(wire_n10ilO_dataout, wire_n1110i_o, ~((~ nil1i)));
	and(wire_n10iOi_dataout, wire_n1110l_o, ~((~ nil1i)));
	and(wire_n10iOl_dataout, wire_n111ii_dataout, ~((~ nil1i)));
	and(wire_n10iOO_dataout, wire_n111il_o, ~((~ nil1i)));
	and(wire_n10l0i_dataout, wire_n111Ol_o, ~((~ nil1i)));
	and(wire_n10l0l_dataout, wire_n1101i_o, ~((~ nil1i)));
	and(wire_n10l0O_dataout, wire_n1101O_o, ~((~ nil1i)));
	and(wire_n10l1i_dataout, wire_n111li_dataout, ~((~ nil1i)));
	and(wire_n10l1l_dataout, wire_n111ll_dataout, ~((~ nil1i)));
	and(wire_n10l1O_dataout, wire_n111lO_o, ~((~ nil1i)));
	and(wire_n10lii_dataout, wire_n1100l_o, ~((~ nil1i)));
	and(wire_n10O0l_dataout, n0l1i, ~(n1i11l));
	and(wire_n10O0O_dataout, nil0O, ~(n1i11l));
	and(wire_n10Oii_dataout, nilli, ~(n1i11l));
	and(wire_n10Oil_dataout, nilll, ~(n1i11l));
	and(wire_n10OiO_dataout, nillO, ~(n1i11l));
	and(wire_n10Oli_dataout, nilOi, ~(n1i11l));
	and(wire_n10Oll_dataout, nilOl, ~(n1i11l));
	and(wire_n10OlO_dataout, nilOO, ~(n1i11l));
	and(wire_n10OOi_dataout, niO1i, ~(n1i11l));
	and(wire_n10OOl_dataout, niO1l, ~(n1i11l));
	and(wire_n10OOO_dataout, nilii, ~(n1i11l));
	and(wire_n110ii_dataout, wire_n110li_dataout, ~(nl0OOOl));
	and(wire_n110il_dataout, wire_n110ll_dataout, ~(nl0OOOl));
	and(wire_n110iO_dataout, nli11ii, ~(nl0OOOl));
	and(wire_n110li_dataout, nl0OO0O, ~(nli11ii));
	and(wire_n110ll_dataout, (~ nl0OO0O), ~(nli11ii));
	and(wire_n110Oi_dataout, nl0OO0O, ~(nli111l));
	and(wire_n110Ol_dataout, (~ nl0OO0O), ~(nli111l));
	and(wire_n110OO_dataout, wire_n11i0i_dataout, ~(nl0OOll));
	and(wire_n1111O_dataout, (~ nl0OOOO), n1010l);
	and(wire_n111ii_dataout, wire_n11i1l_dataout, n101ll);
	and(wire_n111li_dataout, nl0OO0O, n101li);
	and(wire_n111ll_dataout, nl0OOll, n101ll);
	and(wire_n11i0i_dataout, wire_n11iii_dataout, ~(nl0OOiO));
	and(wire_n11i0l_dataout, nl0OOil, ~(nl0OOiO));
	and(wire_n11i0O_dataout, wire_n11iil_dataout, ~(nl0OOiO));
	and(wire_n11i1i_dataout, nl0OOiO, ~(nl0OOll));
	and(wire_n11i1l_dataout, wire_n11i0l_dataout, ~(nl0OOll));
	and(wire_n11i1O_dataout, wire_n11i0O_dataout, ~(nl0OOll));
	or(wire_n11ii_dataout, wire_n11iO_dataout, nli0i1l);
	and(wire_n11iii_dataout, nl0OO0O, ~(nl0OOil));
	and(wire_n11iil_dataout, (~ nl0OO0O), ~(nl0OOil));
	or(wire_n11il_dataout, wire_n11li_dataout, nli0i1l);
	assign		wire_n11iO_dataout = (n110l === 1'b1) ? wire_n11ll_o[1] : n11lO;
	and(wire_n11iOO_dataout, (~ nl0OOOi), ~(nl0OOOl));
	and(wire_n11l0i_dataout, nl0OOOl, ~(n10liO));
	and(wire_n11l0O_dataout, wire_n11liO_dataout, ~(nli110O));
	and(wire_n11l1i_dataout, nl0OOOi, ~(nl0OOOl));
	or(wire_n11l1O_dataout, (~ nl0OOOl), n10liO);
	and(wire_n11li_dataout, wire_n11ll_o[2], n110l);
	and(wire_n11lii_dataout, wire_n11lli_dataout, ~(nli110O));
	and(wire_n11lil_dataout, wire_n11lll_dataout, ~(nli110O));
	and(wire_n11liO_dataout, wire_n11llO_dataout, ~(nli110i));
	or(wire_n11lli_dataout, nli111O, nli110i);
	and(wire_n11lll_dataout, wire_n11lOi_dataout, ~(nli110i));
	and(wire_n11llO_dataout, nli111i, ~(nli111O));
	and(wire_n11lOi_dataout, (~ nli111i), ~(nli111O));
	and(wire_n11Oil_dataout, nli11iO, ~(nli11li));
	and(wire_n11OiO_dataout, (~ nli11iO), ~(nli11li));
	or(wire_n1i00i_dataout, (~ n1i1lO), nli11Ol);
	or(wire_n1i01l_dataout, wire_n1i01O_dataout, wire_n1i1li_dout);
	or(wire_n1i01O_dataout, wire_n1i00i_dataout, wire_n1Oili_o);
	or(wire_n1i0OO_dataout, wire_n1iiiO_dataout, wire_n1i1li_dout);
	or(wire_n1i10i_dataout, (~ n1i11i), ((~ n10O0i) & nil1i));
	and(wire_n1i11O_dataout, wire_n1i10i_dataout, nil1i);
	and(wire_n1i1Oi_dataout, wire_n1i1Ol_dataout, ~(wire_n1i1li_dout));
	or(wire_n1i1Ol_dataout, wire_n1i1OO_dataout, wire_n1Ol1O_o);
	and(wire_n1i1OO_dataout, n1i00l, ~(wire_n1OiOl_dataout));
	or(wire_n1ii0i_dataout, wire_n1iiOi_dataout, wire_n1i1li_dout);
	or(wire_n1ii0l_dataout, wire_n1iiOl_dataout, wire_n1i1li_dout);
	or(wire_n1ii0O_dataout, wire_n1iiOO_dataout, wire_n1i1li_dout);
	and(wire_n1ii1i_dataout, wire_n1iili_dataout, ~(wire_n1i1li_dout));
	and(wire_n1ii1l_dataout, wire_n1iill_dataout, ~(wire_n1i1li_dout));
	or(wire_n1ii1O_dataout, wire_n1iilO_dataout, wire_n1i1li_dout);
	or(wire_n1iii_dataout, wire_n1iiO_o[1], (~ nli0i0l));
	and(wire_n1iiii_dataout, wire_n1il1i_dataout, ~(wire_n1i1li_dout));
	or(wire_n1iiil_dataout, wire_n1il1l_dataout, wire_n1i1li_dout);
	or(wire_n1iiiO_dataout, wire_n1il1O_dataout, wire_n1Ol1O_o);
	or(wire_n1iil_dataout, wire_n1iiO_o[2], (~ nli0i0l));
	or(wire_n1iili_dataout, wire_n1il0i_dataout, wire_n1Ol1O_o);
	or(wire_n1iill_dataout, wire_n1il0l_dataout, wire_n1Ol1O_o);
	and(wire_n1iilO_dataout, wire_n1il0O_dataout, ~(wire_n1Ol1O_o));
	or(wire_n1iiOi_dataout, wire_n1ilii_dataout, wire_n1Ol1O_o);
	or(wire_n1iiOl_dataout, wire_n1ilil_dataout, wire_n1Ol1O_o);
	or(wire_n1iiOO_dataout, wire_n1iliO_dataout, wire_n1Ol1O_o);
	or(wire_n1il0i_dataout, wire_n1ilOi_dataout, wire_n1OiOl_dataout);
	and(wire_n1il0l_dataout, wire_n1ilOl_dataout, ~(wire_n1OiOl_dataout));
	or(wire_n1il0O_dataout, wire_n1ilOO_dataout, wire_n1OiOl_dataout);
	or(wire_n1il1i_dataout, wire_n1illi_dataout, wire_n1Ol1O_o);
	or(wire_n1il1l_dataout, wire_n1illl_dataout, wire_n1Ol1O_o);
	or(wire_n1il1O_dataout, wire_n1illO_dataout, wire_n1OiOl_dataout);
	or(wire_n1ilii_dataout, wire_n1iO1i_dataout, wire_n1OiOl_dataout);
	or(wire_n1ilil_dataout, wire_n1iO1l_dataout, wire_n1OiOl_dataout);
	or(wire_n1iliO_dataout, wire_n1iO1O_dataout, wire_n1OiOl_dataout);
	or(wire_n1illi_dataout, wire_n1iO0i_dataout, wire_n1OiOl_dataout);
	or(wire_n1illl_dataout, wire_n1iO0l_dataout, wire_n1OiOl_dataout);
	or(wire_n1illO_dataout, wire_n1iO0O_dataout, n011OO);
	or(wire_n1ilOi_dataout, wire_n1iOii_dataout, n011OO);
	or(wire_n1ilOl_dataout, wire_n1iOil_dataout, n011OO);
	or(wire_n1ilOO_dataout, wire_n1iOiO_dataout, n011OO);
	or(wire_n1iO0i_dataout, wire_n1iOOi_dataout, n011OO);
	or(wire_n1iO0l_dataout, wire_n1iOOl_dataout, n011OO);
	or(wire_n1iO0O_dataout, wire_n1iOOO_dataout, wire_n1OilO_dataout);
	and(wire_n1iO1i_dataout, wire_n1iOli_dataout, ~(n011OO));
	or(wire_n1iO1l_dataout, wire_n1iOll_dataout, n011OO);
	or(wire_n1iO1O_dataout, wire_n1iOlO_dataout, n011OO);
	or(wire_n1iOii_dataout, wire_n1l11i_dataout, wire_n1OilO_dataout);
	or(wire_n1iOil_dataout, wire_n1l11l_dataout, wire_n1OilO_dataout);
	or(wire_n1iOiO_dataout, wire_n1l11O_dataout, wire_n1OilO_dataout);
	and(wire_n1iOli_dataout, wire_n1l10i_dataout, ~(wire_n1OilO_dataout));
	or(wire_n1iOll_dataout, wire_n1l10l_dataout, wire_n1OilO_dataout);
	or(wire_n1iOlO_dataout, wire_n1l10O_dataout, wire_n1OilO_dataout);
	or(wire_n1iOOi_dataout, wire_n1l1ii_dataout, wire_n1OilO_dataout);
	or(wire_n1iOOl_dataout, wire_n1l1il_dataout, wire_n1OilO_dataout);
	or(wire_n1iOOO_dataout, wire_n1l1iO_dataout, wire_n1OiOi_o);
	and(wire_n1l00i_dataout, wire_n1l0Oi_dataout, ~(nli11OO));
	or(wire_n1l00l_dataout, wire_n1l0Ol_dataout, nli11OO);
	or(wire_n1l00O_dataout, wire_n1l0OO_dataout, nli11OO);
	or(wire_n1l01i_dataout, wire_n1l0li_dataout, n011Oi);
	or(wire_n1l01l_dataout, wire_n1l0ll_dataout, n011Oi);
	or(wire_n1l01O_dataout, wire_n1l0lO_dataout, nli11OO);
	or(wire_n1l0ii_dataout, wire_n1li1i_dataout, nli11OO);
	or(wire_n1l0il_dataout, wire_n1li1l_dataout, nli11OO);
	or(wire_n1l0iO_dataout, wire_n1li1O_dataout, nli11OO);
	or(wire_n1l0li_dataout, wire_n1li0i_dataout, nli11OO);
	or(wire_n1l0ll_dataout, wire_n1li0l_dataout, nli11OO);
	and(wire_n1l0lO_dataout, wire_n1li0O_dataout, ~(wire_n1OiOO_o));
	assign		wire_n1l0Oi_dataout = (wire_n1OiOO_o === 1'b1) ? nii00O : wire_n1liii_dataout;
	assign		wire_n1l0Ol_dataout = (wire_n1OiOO_o === 1'b1) ? nii0ii : wire_n1liil_dataout;
	assign		wire_n1l0OO_dataout = (wire_n1OiOO_o === 1'b1) ? nii0il : wire_n1liiO_dataout;
	and(wire_n1l10i_dataout, wire_n1l1Oi_dataout, ~(wire_n1OiOi_o));
	or(wire_n1l10l_dataout, wire_n1l1Ol_dataout, wire_n1OiOi_o);
	or(wire_n1l10O_dataout, wire_n1l1OO_dataout, wire_n1OiOi_o);
	or(wire_n1l11i_dataout, wire_n1l1li_dataout, wire_n1OiOi_o);
	or(wire_n1l11l_dataout, wire_n1l1ll_dataout, wire_n1OiOi_o);
	or(wire_n1l11O_dataout, wire_n1l1lO_dataout, wire_n1OiOi_o);
	or(wire_n1l1ii_dataout, wire_n1l01i_dataout, wire_n1OiOi_o);
	or(wire_n1l1il_dataout, wire_n1l01l_dataout, wire_n1OiOi_o);
	or(wire_n1l1iO_dataout, wire_n1l01O_dataout, n011Oi);
	and(wire_n1l1li_dataout, wire_n1l00i_dataout, ~(n011Oi));
	or(wire_n1l1ll_dataout, wire_n1l00l_dataout, n011Oi);
	or(wire_n1l1lO_dataout, wire_n1l00O_dataout, n011Oi);
	or(wire_n1l1Oi_dataout, wire_n1l0ii_dataout, n011Oi);
	or(wire_n1l1Ol_dataout, wire_n1l0il_dataout, n011Oi);
	or(wire_n1l1OO_dataout, wire_n1l0iO_dataout, n011Oi);
	assign		wire_n1li0i_dataout = (wire_n1OiOO_o === 1'b1) ? nii0lO : wire_n1liOi_dataout;
	assign		wire_n1li0l_dataout = (wire_n1OiOO_o === 1'b1) ? nii0Oi : wire_n1liOl_dataout;
	or(wire_n1li0O_dataout, wire_n1liOO_dataout, wire_n1Oili_o);
	assign		wire_n1li1i_dataout = (wire_n1OiOO_o === 1'b1) ? nii0iO : wire_n1lili_dataout;
	assign		wire_n1li1l_dataout = (wire_n1OiOO_o === 1'b1) ? nii0li : wire_n1lill_dataout;
	assign		wire_n1li1O_dataout = (wire_n1OiOO_o === 1'b1) ? nii0ll : wire_n1lilO_dataout;
	or(wire_n1lii_dataout, wire_n1lll_o[1], (~ nli0iil));
	and(wire_n1liii_dataout, wire_n1ll1i_dataout, ~(wire_n1Oili_o));
	and(wire_n1liil_dataout, wire_n1ll1l_dataout, ~(wire_n1Oili_o));
	or(wire_n1liiO_dataout, wire_n1ll1O_dataout, wire_n1Oili_o);
	or(wire_n1lil_dataout, wire_n1lll_o[2], (~ nli0iil));
	or(wire_n1lili_dataout, wire_n1ll0i_dataout, wire_n1Oili_o);
	or(wire_n1lill_dataout, wire_n1ll0l_dataout, wire_n1Oili_o);
	or(wire_n1lilO_dataout, wire_n1ll0O_dataout, wire_n1Oili_o);
	or(wire_n1liO_dataout, wire_n1lll_o[3], (~ nli0iil));
	and(wire_n1liOi_dataout, wire_n1llii_dataout, ~(wire_n1Oili_o));
	or(wire_n1liOl_dataout, wire_n1llil_dataout, wire_n1Oili_o);
	and(wire_n1liOO_dataout, wire_n1lliO_dataout, ~(n011li));
	and(wire_n1ll0i_dataout, wire_n1llOi_dataout, ~(n011li));
	or(wire_n1ll0l_dataout, wire_n1llOl_dataout, n011li);
	or(wire_n1ll0O_dataout, wire_n1llOO_dataout, n011li);
	or(wire_n1ll1i_dataout, wire_n1llli_dataout, n011li);
	and(wire_n1ll1l_dataout, wire_n1llll_dataout, ~(n011li));
	or(wire_n1ll1O_dataout, wire_n1lllO_dataout, n011li);
	or(wire_n1lli_dataout, wire_n1lll_o[4], (~ nli0iil));
	and(wire_n1llii_dataout, wire_n1lO1i_dataout, ~(n011li));
	or(wire_n1llil_dataout, wire_n1lO1l_dataout, n011li);
	and(wire_n1lliO_dataout, wire_n1lO1O_dataout, ~(n011iO));
	assign		wire_n1llli_dataout = (n011iO === 1'b1) ? wire_n1i1iO_dout[0] : wire_n1lO0i_dataout;
	assign		wire_n1llll_dataout = (n011iO === 1'b1) ? wire_n1i1iO_dout[1] : wire_n1lO0l_dataout;
	assign		wire_n1lllO_dataout = (n011iO === 1'b1) ? wire_n1i1iO_dout[2] : wire_n1lO0O_dataout;
	assign		wire_n1llOi_dataout = (n011iO === 1'b1) ? wire_n1i1iO_dout[3] : wire_n1lOii_dataout;
	assign		wire_n1llOl_dataout = (n011iO === 1'b1) ? wire_n1i1iO_dout[4] : wire_n1lOil_dataout;
	assign		wire_n1llOO_dataout = (n011iO === 1'b1) ? wire_n1i1iO_dout[5] : wire_n1lOiO_dataout;
	assign		wire_n1lO0i_dataout = (n011il === 1'b1) ? wire_n1i1iO_dout[8] : wire_n1lOOi_dataout;
	assign		wire_n1lO0l_dataout = (n011il === 1'b1) ? wire_n1i1iO_dout[9] : wire_n1lOOl_dataout;
	assign		wire_n1lO0O_dataout = (n011il === 1'b1) ? wire_n1i1iO_dout[10] : wire_n1lOOO_dataout;
	assign		wire_n1lO1i_dataout = (n011iO === 1'b1) ? wire_n1i1iO_dout[6] : wire_n1lOli_dataout;
	assign		wire_n1lO1l_dataout = (n011iO === 1'b1) ? wire_n1i1iO_dout[7] : wire_n1lOll_dataout;
	and(wire_n1lO1O_dataout, wire_n1lOlO_dataout, ~(n011il));
	assign		wire_n1lOii_dataout = (n011il === 1'b1) ? wire_n1i1iO_dout[11] : wire_n1O11i_dataout;
	assign		wire_n1lOil_dataout = (n011il === 1'b1) ? wire_n1i1iO_dout[12] : wire_n1O11l_dataout;
	assign		wire_n1lOiO_dataout = (n011il === 1'b1) ? wire_n1i1iO_dout[13] : wire_n1O11O_dataout;
	assign		wire_n1lOli_dataout = (n011il === 1'b1) ? wire_n1i1iO_dout[14] : wire_n1O10i_dataout;
	assign		wire_n1lOll_dataout = (n011il === 1'b1) ? wire_n1i1iO_dout[15] : wire_n1O10l_dataout;
	or(wire_n1lOlO_dataout, wire_n1O10O_dataout, wire_n1OiiO_dataout);
	and(wire_n1lOOi_dataout, wire_n1O1ii_dataout, ~(wire_n1OiiO_dataout));
	and(wire_n1lOOl_dataout, wire_n1O1il_dataout, ~(wire_n1OiiO_dataout));
	or(wire_n1lOOO_dataout, wire_n1O1iO_dataout, wire_n1OiiO_dataout);
	assign		wire_n1O00i_dataout = (n0110l === 1'b1) ? wire_n1i1iO_dout[3] : wire_n1O0Oi_dataout;
	assign		wire_n1O00l_dataout = (n0110l === 1'b1) ? wire_n1i1iO_dout[4] : wire_n1O0Ol_dataout;
	assign		wire_n1O00O_dataout = (n0110l === 1'b1) ? wire_n1i1iO_dout[5] : wire_n1O0OO_dataout;
	assign		wire_n1O01i_dataout = (n0110l === 1'b1) ? wire_n1i1iO_dout[0] : wire_n1O0li_dataout;
	assign		wire_n1O01l_dataout = (n0110l === 1'b1) ? wire_n1i1iO_dout[1] : wire_n1O0ll_dataout;
	assign		wire_n1O01O_dataout = (n0110l === 1'b1) ? wire_n1i1iO_dout[2] : wire_n1O0lO_dataout;
	assign		wire_n1O0ii_dataout = (n0110l === 1'b1) ? wire_n1i1iO_dout[6] : wire_n1Oi1i_dataout;
	assign		wire_n1O0il_dataout = (n0110l === 1'b1) ? wire_n1i1iO_dout[7] : wire_n1Oi1l_dataout;
	and(wire_n1O0iO_dataout, wire_n1Oi1O_dataout, ~(n0110i));
	and(wire_n1O0l_dataout, wire_n1Oil_dataout, ~(nli0iiO));
	and(wire_n1O0li_dataout, wire_n1i1iO_dout[8], n0110i);
	and(wire_n1O0ll_dataout, wire_n1i1iO_dout[9], n0110i);
	assign		wire_n1O0lO_dataout = (n0110i === 1'b1) ? wire_n1i1iO_dout[10] : wire_n1Oi0l_dataout;
	or(wire_n1O0O_dataout, wire_n1OiO_dataout, nli0iiO);
	assign		wire_n1O0Oi_dataout = (n0110i === 1'b1) ? wire_n1i1iO_dout[11] : wire_n1Oi1O_dataout;
	or(wire_n1O0Ol_dataout, wire_n1i1iO_dout[12], ~(n0110i));
	assign		wire_n1O0OO_dataout = (n0110i === 1'b1) ? wire_n1i1iO_dout[13] : wire_n1Oi1O_dataout;
	and(wire_n1O10i_dataout, wire_n1O1Oi_dataout, ~(wire_n1OiiO_dataout));
	or(wire_n1O10l_dataout, wire_n1O1Ol_dataout, wire_n1OiiO_dataout);
	and(wire_n1O10O_dataout, wire_n1O1OO_dataout, ~(n0110O));
	or(wire_n1O11i_dataout, wire_n1O1li_dataout, wire_n1OiiO_dataout);
	or(wire_n1O11l_dataout, wire_n1O1ll_dataout, wire_n1OiiO_dataout);
	or(wire_n1O11O_dataout, wire_n1O1lO_dataout, wire_n1OiiO_dataout);
	and(wire_n1O1ii_dataout, wire_n1O01i_dataout, ~(n0110O));
	or(wire_n1O1il_dataout, wire_n1O01l_dataout, n0110O);
	and(wire_n1O1iO_dataout, wire_n1O01O_dataout, ~(n0110O));
	and(wire_n1O1li_dataout, wire_n1O00i_dataout, ~(n0110O));
	and(wire_n1O1ll_dataout, wire_n1O00l_dataout, ~(n0110O));
	and(wire_n1O1lO_dataout, wire_n1O00O_dataout, ~(n0110O));
	or(wire_n1O1Oi_dataout, wire_n1O0ii_dataout, n0110O);
	and(wire_n1O1Ol_dataout, wire_n1O0il_dataout, ~(n0110O));
	and(wire_n1O1OO_dataout, wire_n1O0iO_dataout, ~(n0110l));
	and(wire_n1Oi0i_dataout, nli11Oi, ~(nli11Ol));
	or(wire_n1Oi0l_dataout, (~ nli11Oi), nli11Ol);
	assign		wire_n1Oi1i_dataout = (n0110i === 1'b1) ? wire_n1i1iO_dout[14] : wire_n1Oi0i_dataout;
	assign		wire_n1Oi1l_dataout = (n0110i === 1'b1) ? wire_n1i1iO_dout[15] : wire_n1Oi0l_dataout;
	or(wire_n1Oi1O_dataout, (~ nli11Oi), nli11Ol);
	or(wire_n1Oii_dataout, wire_n1Oli_dataout, nli0iiO);
	and(wire_n1OiiO_dataout, nli10ii, n011ii);
	assign		wire_n1Oil_dataout = (n1O0i === 1'b1) ? wire_n1Oll_o[1] : n1OlO;
	and(wire_n1OilO_dataout, n1i1lO, n011Ol);
	assign		wire_n1OiO_dataout = (n1O0i === 1'b1) ? wire_n1Oll_o[2] : n1O1O;
	and(wire_n1OiOl_dataout, nli10il, n0101i);
	and(wire_n1Oli_dataout, wire_n1Oll_o[3], n1O0i);
	and(wire_n1Olii_dataout, wire_n1Olli_dataout, ~(nli10ii));
	and(wire_n1Olil_dataout, nli100l, ~(nli10ii));
	and(wire_n1OliO_dataout, wire_n1Olll_dataout, ~(nli10ii));
	and(wire_n1Olli_dataout, nli10iO, ~(nli100l));
	and(wire_n1Olll_dataout, (~ nli10iO), ~(nli100l));
	and(wire_n1OlOi_dataout, wire_n1OO1i_dataout, ~(nli10ii));
	and(wire_n1OlOl_dataout, nli10ll, ~(nli10ii));
	and(wire_n1OlOO_dataout, wire_n1OO1l_dataout, ~(nli10ii));
	and(wire_n1OO0O_dataout, wire_n1OOiO_dataout, ~(nli10lO));
	and(wire_n1OO1i_dataout, nli100O, ~(nli10ll));
	and(wire_n1OO1l_dataout, (~ nli100O), ~(nli10ll));
	and(wire_n1OOii_dataout, nli10li, ~(nli10lO));
	and(wire_n1OOil_dataout, wire_n1OOli_dataout, ~(nli10lO));
	and(wire_n1OOiO_dataout, nli10iO, ~(nli10li));
	and(wire_n1OOli_dataout, (~ nli10iO), ~(nli10li));
	and(wire_ni01il_dataout, wire_ni01lO_o[0], wire_ni01Oi_o);
	and(wire_ni01iO_dataout, wire_ni01lO_o[1], wire_ni01Oi_o);
	and(wire_ni01li_dataout, wire_ni01lO_o[2], wire_ni01Oi_o);
	and(wire_ni01ll_dataout, wire_ni01lO_o[3], wire_ni01Oi_o);
	and(wire_ni0i0i_dataout, wire_ni0i0l_o[3], wire_ni0i0O_o);
	and(wire_ni0i1i_dataout, wire_ni0i0l_o[0], wire_ni0i0O_o);
	and(wire_ni0i1l_dataout, wire_ni0i0l_o[1], wire_ni0i0O_o);
	and(wire_ni0i1O_dataout, wire_ni0i0l_o[2], wire_ni0i0O_o);
	and(wire_ni0iii_dataout, wire_ni1O0i_q_b[0], ni0lli);
	and(wire_ni0iil_dataout, wire_ni1O0i_q_b[1], ni0lli);
	and(wire_ni0iiO_dataout, wire_ni1O0i_q_b[2], ni0lli);
	and(wire_ni0ili_dataout, wire_ni1O0i_q_b[3], ni0lli);
	and(wire_ni0ill_dataout, wire_ni1O0i_q_b[4], ni0lli);
	and(wire_ni0ilO_dataout, wire_ni1O0i_q_b[5], ni0lli);
	and(wire_ni0iOi_dataout, wire_ni1O0i_q_b[6], ni0lli);
	and(wire_ni0iOl_dataout, wire_ni1O0i_q_b[7], ni0lli);
	and(wire_ni0iOO_dataout, wire_ni1O0i_q_b[8], ni0lli);
	and(wire_ni0l1i_dataout, wire_ni1O0i_q_b[9], ni0lli);
	and(wire_ni10il_dataout, nli1l1l, ~(nli1l1O));
	and(wire_ni10iO_dataout, (~ nli1l1l), ~(nli1l1O));
	and(wire_ni110i_dataout, ni1l0i, ni10Ol);
	and(wire_ni110l_dataout, ni1l0l, ni10Ol);
	and(wire_ni110O_dataout, ni1l0O, ni10Ol);
	assign		wire_ni111i_dataout = (nli1iOi === 1'b1) ? ni1iil : wire_ni11iO_dataout;
	assign		wire_ni111l_dataout = (nli1iOi === 1'b1) ? ni1iiO : wire_ni11li_dataout;
	assign		wire_ni111O_dataout = (nli1iOi === 1'b1) ? ni1ili : wire_ni11ll_dataout;
	and(wire_ni11ii_dataout, ni1lii, ni10Ol);
	and(wire_ni11il_dataout, ni1lil, ni10Ol);
	and(wire_ni11iO_dataout, ni1liO, ni10Ol);
	and(wire_ni11li_dataout, ni1lli, ni10Ol);
	and(wire_ni11ll_dataout, ni1lll, ni10Ol);
	and(wire_niii0i_dataout, nli1l0O, nli1lil);
	or(wire_niii1i_dataout, niiilO, nil1OO);
	assign		wire_niii1O_dataout = (nli1lii === 1'b1) ? nli1l0l : wire_niii0i_dataout;
	assign		wire_niiiOi_dataout = (nli1lii === 1'b1) ? wire_niiO0O_dataout : wire_niil0l_dataout;
	assign		wire_niiiOl_dataout = (nli1lii === 1'b1) ? wire_niiOii_dataout : wire_niil0O_dataout;
	assign		wire_niiiOO_dataout = (nli1lii === 1'b1) ? wire_niiOil_dataout : wire_niilii_dataout;
	assign		wire_niil0i_dataout = (nli1lii === 1'b1) ? wire_niiOlO_dataout : wire_niilll_dataout;
	and(wire_niil0l_dataout, wire_niillO_dataout, nli1lil);
	and(wire_niil0O_dataout, wire_niilOi_dataout, nli1lil);
	assign		wire_niil1i_dataout = (nli1lii === 1'b1) ? wire_niiOiO_dataout : wire_niilil_dataout;
	assign		wire_niil1l_dataout = (nli1lii === 1'b1) ? wire_niiOli_dataout : wire_niiliO_dataout;
	assign		wire_niil1O_dataout = (nli1lii === 1'b1) ? wire_niiOll_dataout : wire_niilli_dataout;
	and(wire_niilii_dataout, wire_niilOl_dataout, nli1lil);
	and(wire_niilil_dataout, wire_niilOO_dataout, nli1lil);
	and(wire_niiliO_dataout, wire_niiO1i_dataout, nli1lil);
	and(wire_niilli_dataout, wire_niiO1l_dataout, nli1lil);
	and(wire_niilll_dataout, wire_niiO1O_dataout, nli1lil);
	and(wire_niillO_dataout, wire_niiO0i_o[0], ~(wire_niiO0l_o));
	and(wire_niilOi_dataout, wire_niiO0i_o[1], ~(wire_niiO0l_o));
	and(wire_niilOl_dataout, wire_niiO0i_o[2], ~(wire_niiO0l_o));
	and(wire_niilOO_dataout, wire_niiO0i_o[3], ~(wire_niiO0l_o));
	and(wire_niiO0O_dataout, wire_niiO0i_o[0], ~(nli1liO));
	and(wire_niiO1i_dataout, wire_niiO0i_o[4], ~(wire_niiO0l_o));
	and(wire_niiO1l_dataout, wire_niiO0i_o[5], ~(wire_niiO0l_o));
	and(wire_niiO1O_dataout, wire_niiO0i_o[6], ~(wire_niiO0l_o));
	and(wire_niiOii_dataout, wire_niiO0i_o[1], ~(nli1liO));
	and(wire_niiOil_dataout, wire_niiO0i_o[2], ~(nli1liO));
	and(wire_niiOiO_dataout, wire_niiO0i_o[3], ~(nli1liO));
	and(wire_niiOli_dataout, wire_niiO0i_o[4], ~(nli1liO));
	and(wire_niiOll_dataout, wire_niiO0i_o[5], ~(nli1liO));
	and(wire_niiOlO_dataout, wire_niiO0i_o[6], ~(nli1liO));
	and(wire_nil10l_dataout, nii0OO, ~(nli1lli));
	and(wire_nil10O_dataout, (~ nii0OO), ~(nli1lli));
	and(wire_nil1iO_dataout, nli1llO, ~(nli1lOi));
	and(wire_nil1l_dataout, wire_nil1O_dataout, ~(((~ n0l1i) | (~ wire_nl1ii_syncstatus[0]))));
	and(wire_nil1li_dataout, (~ nli1llO), ~(nli1lOi));
	or(wire_nil1O_dataout, n0iil, (wire_nl1ii_syncstatus[0] & wire_nl1ii_rlv));
	assign		wire_nill0O_dataout = (nliilOi === 1'b1) ? wire_nilO1i_dataout : niliil;
	assign		wire_nillii_dataout = (nliilOi === 1'b1) ? wire_nilO1l_dataout : nilill;
	assign		wire_nillil_dataout = (nliilOi === 1'b1) ? wire_nilO1O_dataout : nililO;
	assign		wire_nilliO_dataout = (nliilOi === 1'b1) ? wire_nilO0i_dataout : niliOi;
	assign		wire_nillli_dataout = (nliilOi === 1'b1) ? wire_nilO0l_dataout : niliOl;
	assign		wire_nillll_dataout = (nliilOi === 1'b1) ? wire_nilO0O_dataout : niliOO;
	assign		wire_nilllO_dataout = (nliilOi === 1'b1) ? wire_nilOii_dataout : nill1i;
	assign		wire_nillOi_dataout = (nliilOi === 1'b1) ? wire_nilOil_dataout : nill1l;
	assign		wire_nillOl_dataout = (nliilOi === 1'b1) ? wire_nilOiO_dataout : nill1O;
	assign		wire_nillOO_dataout = (nliilOi === 1'b1) ? wire_nilOli_dataout : nill0i;
	assign		wire_nilO0i_dataout = (nli1O1i === 1'b1) ? nilOOO : n0Olii;
	assign		wire_nilO0l_dataout = (nli1O1i === 1'b1) ? niO11i : n0Olil;
	assign		wire_nilO0O_dataout = (nli1O1i === 1'b1) ? niO11l : n0OliO;
	assign		wire_nilO1i_dataout = (nli1O1i === 1'b1) ? nill0l : n0Ol0i;
	assign		wire_nilO1l_dataout = (nli1O1i === 1'b1) ? nilOOi : n0Ol0l;
	assign		wire_nilO1O_dataout = (nli1O1i === 1'b1) ? nilOOl : n0Ol0O;
	assign		wire_nilOii_dataout = (nli1O1i === 1'b1) ? niO11O : n0Olli;
	assign		wire_nilOil_dataout = (nli1O1i === 1'b1) ? niO10i : n0Olll;
	assign		wire_nilOiO_dataout = (nli1O1i === 1'b1) ? niO10l : n0Ol1O;
	assign		wire_nilOli_dataout = (nli1O1i === 1'b1) ? niO10O : n0OO1l;
	assign		wire_niO0ll_dataout = (wire_niO0lO_o[1] === 1'b1) ? (~ ((~ mii_tx_en) & (~ niOi1O))) : (mii_tx_en | niOi1O);
	assign		wire_niO1iO_dataout = (nliilOi === 1'b1) ? wire_niO1li_dataout : niO1ii;
	or(wire_niO1li_dataout, (~ niO1ii), nli1O1i);
	assign		wire_niOi0l_dataout = (wire_niOi0O_o[1] === 1'b1) ? (~ ((~ nii00l) | (~ niOl1i))) : (niOill & (nii00l & niOl1i));
	and(wire_niOi1i_dataout, wire_niO0ll_dataout, ~(niO0OO));
	and(wire_niOilO_dataout, wire_niOi0l_dataout, ~(niOiOl));
	and(wire_nl000i_dataout, nl0i1i, ~((nl00OO & (~ nl00Ol))));
	or(wire_nl00il_dataout, wire_nl00iO_dataout, nlliil);
	and(wire_nl00iO_dataout, nl010l, ~((nli1O0O & nlO11l)));
	and(wire_nl010O_dataout, wire_nl01iO_dataout, ~((~ nl00ll)));
	and(wire_nl01ii_dataout, wire_nl01li_dataout, ~((~ nl00ll)));
	or(wire_nl01il_dataout, wire_nl01ll_dataout, (~ nl00ll));
	assign		wire_nl01iO_dataout = (nli1O0i === 1'b1) ? wire_nl000i_dataout : wire_nl01lO_dataout;
	assign		wire_nl01li_dataout = (nli1O0i === 1'b1) ? nl00Ol : wire_nl01Oi_dataout;
	assign		wire_nl01ll_dataout = (nli1O0i === 1'b1) ? nl00OO : wire_nl01Ol_dataout;
	assign		wire_nl01lO_dataout = (nli1O1O === 1'b1) ? wire_nl01OO_dataout : nl011l;
	and(wire_nl01O_dataout, wire_nl11O_locked, ~(reset));
	assign		wire_nl01Oi_dataout = (nli1O1O === 1'b1) ? nli0lO : nl011O;
	assign		wire_nl01Ol_dataout = (nli1O1O === 1'b1) ? nli0Oi : nl010i;
	and(wire_nl01OO_dataout, (~ nli0Ol), ~((nli0Oi & (~ nli0lO))));
	and(wire_nl101i_dataout, wire_nl1i1l_o, nlO11l);
	and(wire_nl101l_dataout, wire_nl1i1O_o, nlO11l);
	and(wire_nl110i_dataout, wire_nl100l_o, nlO11l);
	and(wire_nl110l_dataout, wire_nl100O_o, nlO11l);
	and(wire_nl110O_dataout, wire_nl10ii_o, nlO11l);
	and(wire_nl111l_dataout, wire_nl101O_o, nlO11l);
	and(wire_nl111O_dataout, wire_nl100i_o, nlO11l);
	and(wire_nl11ii_dataout, wire_nl10il_o, nlO11l);
	and(wire_nl11il_dataout, wire_nl10iO_o, nlO11l);
	and(wire_nl11iO_dataout, wire_nl10li_o, nlO11l);
	and(wire_nl11li_dataout, wire_nl10ll_o, nlO11l);
	and(wire_nl11ll_dataout, wire_nl10lO_o, nlO11l);
	and(wire_nl11lO_dataout, wire_nl10Oi_o, nlO11l);
	and(wire_nl11Oi_dataout, wire_nl10Ol_o, nlO11l);
	and(wire_nl11Ol_dataout, wire_nl10OO_o, nlO11l);
	and(wire_nl11OO_dataout, wire_nl1i1i_o, nlO11l);
	and(wire_nl1lii_dataout, nli1OO, nli1O1l);
	and(wire_nl1lil_dataout, nli01O, nli1O1l);
	and(wire_nl1liO_dataout, nli00i, nli1O1l);
	and(wire_nl1lli_dataout, nli00l, nli1O1l);
	and(wire_nl1lll_dataout, nli00O, nli1O1l);
	and(wire_nl1llO_dataout, nli0ii, nli1O1l);
	and(wire_nl1lOi_dataout, nli0il, nli1O1l);
	and(wire_nl1lOl_dataout, nli0iO, nli1O1l);
	and(wire_nl1lOO_dataout, nli0li, nli1O1l);
	and(wire_nl1O0i_dataout, nli0Ol, nli1O1l);
	and(wire_nl1O0l_dataout, nli0OO, nli1O1l);
	and(wire_nl1O0O_dataout, nlii1i, nli1O1l);
	and(wire_nl1O1i_dataout, nli0ll, nli1O1l);
	and(wire_nl1O1l_dataout, nli0lO, nli1O1l);
	and(wire_nl1O1O_dataout, nli0Oi, nli1O1l);
	and(wire_nl1Oii_dataout, nlii1O, nli1O1l);
	or(wire_nli01i_dataout, wire_nli01l_dataout, nll01lO);
	and(wire_nli01l_dataout, nli1Ol, ~(nli1lO));
	or(wire_nli1ii_dataout, wire_nli1il_dataout, nli10O);
	and(wire_nli1il_dataout, nli10l, ~((nll11l & (nli010i & (~ nlO11l)))));
	and(wire_nlii0l_dataout, nlii0i, ~(nl00ll));
	and(wire_nlii0O_dataout, nliill, ~(nl00ll));
	and(wire_nliiii_dataout, nliilO, ~(nl00ll));
	and(wire_nliiil_dataout, nliiOl, ~(nl00ll));
	and(wire_nliiiO_dataout, nliiOO, ~(nl00ll));
	and(wire_nliili_dataout, nlil1l, ~(nl00ll));
	or(wire_nliilli_dataout, wire_nliilll_dataout, nlil10l);
	or(wire_nliilll_dataout, (((~ nlil10l) & (~ nliiOil)) & nl0O1OO), (((~ nlil10l) & nliiOil) & nl0O01i));
	and(wire_nliiOiO_dataout, wire_nliiOOO_o[0], ~(nl0O1OO));
	and(wire_nliiOli_dataout, wire_nliiOOO_o[1], ~(nl0O1OO));
	and(wire_nliiOll_dataout, wire_nliiOOO_o[2], ~(nl0O1OO));
	and(wire_nliiOlO_dataout, wire_nliiOOO_o[3], ~(nl0O1OO));
	and(wire_nliiOOi_dataout, wire_nliiOOO_o[4], ~(nl0O1OO));
	and(wire_nliiOOl_dataout, wire_nliiOOO_o[5], ~(nl0O1OO));
	and(wire_nlil0lO_dataout, wire_nlili1O_o[0], ~(nl0O01l));
	and(wire_nlil0Oi_dataout, wire_nlili1O_o[1], ~(nl0O01l));
	and(wire_nlil0Ol_dataout, wire_nlili1O_o[2], ~(nl0O01l));
	and(wire_nlil0OO_dataout, wire_nlili1O_o[3], ~(nl0O01l));
	and(wire_nlil11i_dataout, wire_nlil10i_o[0], ~(nl0O01i));
	and(wire_nlil11l_dataout, wire_nlil10i_o[1], ~(nl0O01i));
	and(wire_nlil11O_dataout, wire_nlil10i_o[2], ~(nl0O01i));
	or(wire_nlil1Oi_dataout, wire_nlil1Ol_dataout, nliliil);
	or(wire_nlil1Ol_dataout, (((~ nliliil) & (~ nlil0ll)) & nl0O01l), (((~ nliliil) & nlil0ll) & nl0O01O));
	and(wire_nlili0i_dataout, wire_nliliii_o[0], ~(nl0O01O));
	and(wire_nlili0l_dataout, wire_nliliii_o[1], ~(nl0O01O));
	and(wire_nlili0O_dataout, wire_nliliii_o[2], ~(nl0O01O));
	and(wire_nlili1i_dataout, wire_nlili1O_o[4], ~(nl0O01l));
	and(wire_nlili1l_dataout, wire_nlili1O_o[5], ~(nl0O01l));
	or(wire_nlilli_dataout, wire_nlilll_dataout, (nll1il & (~ nlilii)));
	and(wire_nlilll_dataout, nlil0i, ~(((~ nll1il) & nlil0i)));
	and(wire_nlilOO_dataout, wire_nliO1i_dataout, ~((nll11l & (nli01iO & (~ nlO11l)))));
	or(wire_nliO1i_dataout, nlilii, (nll1il & nlil0i));
	and(wire_nliOO0O_dataout, wire_nliOOii_dataout, ~(wire_nlill1i_dout));
	or(wire_nliOOii_dataout, wire_nliOOil_dataout, wire_nlO0O0l_o);
	and(wire_nliOOil_dataout, nll01lO, ~((wire_nlO0Oll_o | (wire_nlO0OOi_o | wire_nlO0OiO_o))));
	and(wire_nliOOll_dataout, wire_nliliOO_dout, ~(wire_nlill1i_dout));
	and(wire_nliOOOi_dataout, wire_nliOOOl_dataout, ~(wire_nlill1i_dout));
	or(wire_nliOOOl_dataout, wire_nliOOOO_dataout, nil1i);
	and(wire_nliOOOO_dataout, nliOO0l, ~(nl0O00i));
	and(wire_nll000l_dataout, ((~ nl0O0lO) & nl0O00O), ~(wire_nlill1i_dout));
	and(wire_nll001i_dataout, wire_nll001l_dataout, ~(wire_nlill1i_dout));
	or(wire_nll001l_dataout, wire_nll001O_dataout, wire_nlO0Oii_o);
	and(wire_nll001O_dataout, nll01Oi, ~(wire_nlO0Oll_o));
	and(wire_nll00li_dataout, wire_nll00Oi_dataout, ~(wire_nlill1i_dout));
	and(wire_nll00ll_dataout, wire_nll00Ol_dataout, ~(wire_nlill1i_dout));
	and(wire_nll00lO_dataout, wire_nll00OO_dataout, ~(wire_nlill1i_dout));
	assign		wire_nll00Oi_dataout = (nl0O00l === 1'b1) ? wire_nll0iii_o[0] : wire_nll0i1i_dataout;
	assign		wire_nll00Ol_dataout = (nl0O00l === 1'b1) ? wire_nll0iii_o[1] : wire_nll0i1l_dataout;
	assign		wire_nll00OO_dataout = (nl0O00l === 1'b1) ? wire_nll0iii_o[2] : wire_nll0i1O_dataout;
	assign		wire_nll010i_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[14] : nll11OO;
	assign		wire_nll010l_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[15] : nll101i;
	assign		wire_nll010O_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[16] : nll101l;
	assign		wire_nll011i_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[11] : nll11lO;
	assign		wire_nll011l_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[12] : nll11Oi;
	assign		wire_nll011O_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[13] : nll11Ol;
	assign		wire_nll01ii_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[17] : nll101O;
	assign		wire_nll01il_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[18] : nll100i;
	assign		wire_nll01iO_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[19] : nll100l;
	assign		wire_nll01li_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[20] : nll100O;
	and(wire_nll01Ol_dataout, wire_nlO0O1i_o, ~(wire_nlill1i_dout));
	and(wire_nll0i0i_dataout, nll000i, ~(nlOO11i));
	and(wire_nll0i0l_dataout, nll00ii, ~(nlOO11i));
	and(wire_nll0i0O_dataout, nll00il, ~(nlOO11i));
	and(wire_nll0i1i_dataout, wire_nll0i0i_dataout, ~((~ nlOl1il)));
	and(wire_nll0i1l_dataout, wire_nll0i0l_dataout, ~((~ nlOl1il)));
	and(wire_nll0i1O_dataout, wire_nll0i0O_dataout, ~((~ nlOl1il)));
	and(wire_nll0ill_dataout, (nlOi01i | nlOi1OO), ~(wire_nlill1i_dout));
	and(wire_nll0ilO_dataout, (nlOi1OO | nlO100O), ~(wire_nlill1i_dout));
	or(wire_nll0lO_dataout, nll0ii, nli001i);
	and(wire_nll0O0i_dataout, wire_nlli10l_dataout, ~(wire_nlill1i_dout));
	and(wire_nll0O0l_dataout, wire_nlli10O_dataout, ~(wire_nlill1i_dout));
	and(wire_nll0O0O_dataout, wire_nlli1ii_dataout, ~(wire_nlill1i_dout));
	and(wire_nll0O1i_dataout, wire_nlli11l_dataout, ~(wire_nlill1i_dout));
	and(wire_nll0O1l_dataout, wire_nlli11O_dataout, ~(wire_nlill1i_dout));
	and(wire_nll0O1O_dataout, wire_nlli10i_dataout, ~(wire_nlill1i_dout));
	and(wire_nll0Oii_dataout, wire_nlli1il_dataout, ~(wire_nlill1i_dout));
	and(wire_nll0Oil_dataout, wire_nlli1iO_dataout, ~(wire_nlill1i_dout));
	and(wire_nll0OiO_dataout, wire_nlli1li_dataout, ~(wire_nlill1i_dout));
	and(wire_nll0Oli_dataout, wire_nlli1ll_dataout, ~(wire_nlill1i_dout));
	and(wire_nll0Oll_dataout, wire_nlli1lO_dataout, ~(wire_nlill1i_dout));
	and(wire_nll0OlO_dataout, wire_nlli1Oi_dataout, ~(wire_nlill1i_dout));
	and(wire_nll0OOi_dataout, wire_nlli1Ol_dataout, ~(wire_nlill1i_dout));
	and(wire_nll0OOl_dataout, wire_nlli1OO_dataout, ~(wire_nlill1i_dout));
	and(wire_nll0OOO_dataout, wire_nlli01i_dataout, ~(wire_nlill1i_dout));
	assign		wire_nll10i_dataout = (nli01lO === 1'b1) ? nlO01O : nliOil;
	and(wire_nll10il_dataout, wire_nll1iOl_dataout, ~(wire_nlill1i_dout));
	and(wire_nll10iO_dataout, wire_nll1iOO_dataout, ~(wire_nlill1i_dout));
	and(wire_nll10l_dataout, wire_nll10O_dataout, ~(nll11i));
	and(wire_nll10li_dataout, wire_nll1l1i_dataout, ~(wire_nlill1i_dout));
	and(wire_nll10ll_dataout, wire_nll1l1l_dataout, ~(wire_nlill1i_dout));
	and(wire_nll10lO_dataout, wire_nll1l1O_dataout, ~(wire_nlill1i_dout));
	assign		wire_nll10O_dataout = (nli01lO === 1'b1) ? nlO0iO : nll11i;
	and(wire_nll10Oi_dataout, wire_nll1l0i_dataout, ~(wire_nlill1i_dout));
	and(wire_nll10Ol_dataout, wire_nll1l0l_dataout, ~(wire_nlill1i_dout));
	and(wire_nll10OO_dataout, wire_nll1l0O_dataout, ~(wire_nlill1i_dout));
	and(wire_nll11O_dataout, wire_nll10i_dataout, ~(nll10ii));
	and(wire_nll1i0i_dataout, wire_nll1lli_dataout, ~(wire_nlill1i_dout));
	and(wire_nll1i0l_dataout, wire_nll1lll_dataout, ~(wire_nlill1i_dout));
	and(wire_nll1i0O_dataout, wire_nll1llO_dataout, ~(wire_nlill1i_dout));
	and(wire_nll1i1i_dataout, wire_nll1lii_dataout, ~(wire_nlill1i_dout));
	and(wire_nll1i1l_dataout, wire_nll1lil_dataout, ~(wire_nlill1i_dout));
	and(wire_nll1i1O_dataout, wire_nll1liO_dataout, ~(wire_nlill1i_dout));
	and(wire_nll1iii_dataout, wire_nll1lOi_dataout, ~(wire_nlill1i_dout));
	and(wire_nll1iil_dataout, wire_nll1lOl_dataout, ~(wire_nlill1i_dout));
	and(wire_nll1iiO_dataout, wire_nll1lOO_dataout, ~(wire_nlill1i_dout));
	and(wire_nll1ili_dataout, wire_nll1O1i_dataout, ~(wire_nlill1i_dout));
	and(wire_nll1ill_dataout, wire_nll1O1l_dataout, ~(wire_nlill1i_dout));
	and(wire_nll1ilO_dataout, wire_nll1O1O_dataout, ~(wire_nlill1i_dout));
	and(wire_nll1iOi_dataout, wire_nll1O0i_dataout, ~(wire_nlill1i_dout));
	and(wire_nll1iOl_dataout, wire_nll1O0l_dataout, ~(nil1i));
	and(wire_nll1iOO_dataout, wire_nll1O0O_dataout, ~(nil1i));
	and(wire_nll1l0i_dataout, wire_nll1Oli_dataout, ~(nil1i));
	and(wire_nll1l0l_dataout, wire_nll1Oll_dataout, ~(nil1i));
	and(wire_nll1l0O_dataout, wire_nll1OlO_dataout, ~(nil1i));
	and(wire_nll1l1i_dataout, wire_nll1Oii_dataout, ~(nil1i));
	and(wire_nll1l1l_dataout, wire_nll1Oil_dataout, ~(nil1i));
	and(wire_nll1l1O_dataout, wire_nll1OiO_dataout, ~(nil1i));
	and(wire_nll1lii_dataout, wire_nll1OOi_dataout, ~(nil1i));
	and(wire_nll1lil_dataout, wire_nll1OOl_dataout, ~(nil1i));
	and(wire_nll1liO_dataout, wire_nll1OOO_dataout, ~(nil1i));
	and(wire_nll1lli_dataout, wire_nll011i_dataout, ~(nil1i));
	and(wire_nll1lll_dataout, wire_nll011l_dataout, ~(nil1i));
	and(wire_nll1llO_dataout, wire_nll011O_dataout, ~(nil1i));
	and(wire_nll1lOi_dataout, wire_nll010i_dataout, ~(nil1i));
	and(wire_nll1lOl_dataout, wire_nll010l_dataout, ~(nil1i));
	and(wire_nll1lOO_dataout, wire_nll010O_dataout, ~(nil1i));
	and(wire_nll1O0i_dataout, wire_nll01li_dataout, ~(nil1i));
	assign		wire_nll1O0l_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[0] : nliOOlO;
	assign		wire_nll1O0O_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[1] : nll111l;
	and(wire_nll1O1i_dataout, wire_nll01ii_dataout, ~(nil1i));
	and(wire_nll1O1l_dataout, wire_nll01il_dataout, ~(nil1i));
	and(wire_nll1O1O_dataout, wire_nll01iO_dataout, ~(nil1i));
	assign		wire_nll1Oii_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[2] : nll111O;
	assign		wire_nll1Oil_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[3] : nll110i;
	assign		wire_nll1OiO_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[4] : nll110l;
	assign		wire_nll1Oli_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[5] : nll110O;
	assign		wire_nll1Oll_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[6] : nll11ii;
	assign		wire_nll1OlO_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[7] : nll11il;
	assign		wire_nll1OOi_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[8] : nll11iO;
	assign		wire_nll1OOl_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[9] : nll11li;
	assign		wire_nll1OOO_dataout = (nliOO0l === 1'b1) ? wire_nll01ll_o[10] : nll11ll;
	and(wire_nlli00i_dataout, wire_nllii0l_dataout, ~(wire_nlO0OiO_o));
	and(wire_nlli00l_dataout, wire_nllii0O_dataout, ~(wire_nlO0OiO_o));
	and(wire_nlli00O_dataout, wire_nlliiii_dataout, ~(wire_nlO0OiO_o));
	and(wire_nlli01i_dataout, wire_nllii1l_dataout, ~(nlOi00O));
	and(wire_nlli01l_dataout, wire_nllii1O_dataout, ~(nlOi00O));
	assign		wire_nlli01O_dataout = (wire_nlO0OiO_o === 1'b1) ? nl00ll : wire_nllii0i_dataout;
	and(wire_nlli0ii_dataout, wire_nlliiil_dataout, ~(wire_nlO0OiO_o));
	assign		wire_nlli0il_dataout = (wire_nlO0OiO_o === 1'b1) ? wire_nlii0l_dataout : wire_nlliiiO_dataout;
	assign		wire_nlli0iO_dataout = (wire_nlO0OiO_o === 1'b1) ? wire_nlii0O_dataout : wire_nlliili_dataout;
	assign		wire_nlli0li_dataout = (wire_nlO0OiO_o === 1'b1) ? wire_nliiii_dataout : wire_nlliill_dataout;
	assign		wire_nlli0ll_dataout = (wire_nlO0OiO_o === 1'b1) ? wire_nliiil_dataout : wire_nlliilO_dataout;
	and(wire_nlli0lO_dataout, wire_nlliiOi_dataout, ~(wire_nlO0OiO_o));
	and(wire_nlli0Oi_dataout, wire_nlliiOl_dataout, ~(wire_nlO0OiO_o));
	and(wire_nlli0Ol_dataout, wire_nlliiOO_dataout, ~(wire_nlO0OiO_o));
	assign		wire_nlli0OO_dataout = (wire_nlO0OiO_o === 1'b1) ? wire_nliiiO_dataout : wire_nllil1i_dataout;
	and(wire_nlli10i_dataout, wire_nlli00l_dataout, ~(nlOi00O));
	and(wire_nlli10l_dataout, wire_nlli00O_dataout, ~(nlOi00O));
	and(wire_nlli10O_dataout, wire_nlli0ii_dataout, ~(nlOi00O));
	and(wire_nlli11i_dataout, wire_nlli01l_dataout, ~(wire_nlill1i_dout));
	and(wire_nlli11l_dataout, wire_nlli01O_dataout, ~(nlOi00O));
	and(wire_nlli11O_dataout, wire_nlli00i_dataout, ~(nlOi00O));
	and(wire_nlli1ii_dataout, wire_nlli0il_dataout, ~(nlOi00O));
	and(wire_nlli1il_dataout, wire_nlli0iO_dataout, ~(nlOi00O));
	and(wire_nlli1iO_dataout, wire_nlli0li_dataout, ~(nlOi00O));
	and(wire_nlli1li_dataout, wire_nlli0ll_dataout, ~(nlOi00O));
	and(wire_nlli1ll_dataout, wire_nlli0lO_dataout, ~(nlOi00O));
	and(wire_nlli1lO_dataout, wire_nlli0Oi_dataout, ~(nlOi00O));
	and(wire_nlli1Oi_dataout, wire_nlli0Ol_dataout, ~(nlOi00O));
	and(wire_nlli1Ol_dataout, wire_nlli0OO_dataout, ~(nlOi00O));
	and(wire_nlli1OO_dataout, wire_nllii1i_dataout, ~(nlOi00O));
	assign		wire_nllii0i_dataout = (wire_nlO0Oii_o === 1'b1) ? nl00ll : nll0ili;
	and(wire_nllii0l_dataout, nll0iOO, ~(wire_nlO0Oii_o));
	and(wire_nllii0O_dataout, nll0l1i, ~(wire_nlO0Oii_o));
	assign		wire_nllii1i_dataout = (wire_nlO0OiO_o === 1'b1) ? wire_nliili_dataout : wire_nllil1l_dataout;
	and(wire_nllii1l_dataout, wire_nllil1O_dataout, ~(wire_nlO0OiO_o));
	and(wire_nllii1O_dataout, wire_nllil0i_dataout, ~(wire_nlO0OiO_o));
	and(wire_nlliiii_dataout, nll0l1l, ~(wire_nlO0Oii_o));
	and(wire_nlliiil_dataout, nll0l1O, ~(wire_nlO0Oii_o));
	assign		wire_nlliiiO_dataout = (wire_nlO0Oii_o === 1'b1) ? wire_nlii0l_dataout : nll0l0i;
	assign		wire_nlliili_dataout = (wire_nlO0Oii_o === 1'b1) ? wire_nlii0O_dataout : nll0l0l;
	assign		wire_nlliill_dataout = (wire_nlO0Oii_o === 1'b1) ? wire_nliiii_dataout : nll0l0O;
	assign		wire_nlliilO_dataout = (wire_nlO0Oii_o === 1'b1) ? wire_nliiil_dataout : nll0lii;
	or(wire_nlliiO_dataout, nlli0i, nli001i);
	and(wire_nlliiOi_dataout, nll0lil, ~(wire_nlO0Oii_o));
	and(wire_nlliiOl_dataout, nll0liO, ~(wire_nlO0Oii_o));
	and(wire_nlliiOO_dataout, nll0lli, ~(wire_nlO0Oii_o));
	and(wire_nllil0i_dataout, nll0lOl, ~(wire_nlO0Oii_o));
	and(wire_nllil0O_dataout, wire_nllilii_dataout, ~(wire_nlill1i_dout));
	assign		wire_nllil1i_dataout = (wire_nlO0Oii_o === 1'b1) ? wire_nliiiO_dataout : nll0lll;
	assign		wire_nllil1l_dataout = (wire_nlO0Oii_o === 1'b1) ? wire_nliili_dataout : nll0llO;
	or(wire_nllil1O_dataout, nll0lOi, wire_nlO0Oii_o);
	and(wire_nllilii_dataout, nl0O0ii, ~((nlOi00O | nl0O0li)));
	and(wire_nlliOOO_dataout, wire_nlll00O_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll00i_dataout, wire_nlllili_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll00l_dataout, wire_nlllill_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll00O_dataout, wire_nlllilO_dataout, ~(nl0O0iO));
	and(wire_nlll01i_dataout, wire_nllliii_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll01l_dataout, wire_nllliil_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll01O_dataout, wire_nllliiO_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll0ii_dataout, wire_nllliOi_dataout, ~(nl0O0iO));
	and(wire_nlll0il_dataout, wire_nllliOl_dataout, ~(nl0O0iO));
	and(wire_nlll0iO_dataout, wire_nllliOO_dataout, ~(nl0O0iO));
	and(wire_nlll0li_dataout, wire_nllll1i_dataout, ~(nl0O0iO));
	and(wire_nlll0ll_dataout, wire_nllll1l_dataout, ~(nl0O0iO));
	and(wire_nlll0lO_dataout, wire_nllll1O_dataout, ~(nl0O0iO));
	and(wire_nlll0O_dataout, wire_nlllOl_o[0], nli001l);
	and(wire_nlll0Oi_dataout, wire_nllll0i_dataout, ~(nl0O0iO));
	and(wire_nlll0Ol_dataout, wire_nllll0l_dataout, ~(nl0O0iO));
	and(wire_nlll0OO_dataout, wire_nllll0O_dataout, ~(nl0O0iO));
	and(wire_nlll10i_dataout, wire_nlll0li_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll10l_dataout, wire_nlll0ll_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll10O_dataout, wire_nlll0lO_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll11i_dataout, wire_nlll0ii_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll11l_dataout, wire_nlll0il_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll11O_dataout, wire_nlll0iO_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll1ii_dataout, wire_nlll0Oi_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll1il_dataout, wire_nlll0Ol_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll1iO_dataout, wire_nlll0OO_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll1li_dataout, wire_nllli1i_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll1ll_dataout, wire_nllli1l_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll1lO_dataout, wire_nllli1O_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll1Oi_dataout, wire_nllli0i_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll1Ol_dataout, wire_nllli0l_dataout, ~(wire_nlill1i_dout));
	and(wire_nlll1OO_dataout, wire_nllli0O_dataout, ~(wire_nlill1i_dout));
	and(wire_nllli0i_dataout, wire_nllllli_dataout, ~(nl0O0iO));
	and(wire_nllli0l_dataout, wire_nllllll_dataout, ~(nl0O0iO));
	and(wire_nllli0O_dataout, wire_nlllllO_dataout, ~(nl0O0iO));
	and(wire_nllli1i_dataout, wire_nllllii_dataout, ~(nl0O0iO));
	and(wire_nllli1l_dataout, wire_nllllil_dataout, ~(nl0O0iO));
	and(wire_nllli1O_dataout, wire_nlllliO_dataout, ~(nl0O0iO));
	and(wire_nlllii_dataout, wire_nlllOl_o[1], nli001l);
	and(wire_nllliii_dataout, wire_nllllOi_dataout, ~(nl0O0iO));
	and(wire_nllliil_dataout, wire_nllllOl_dataout, ~(nl0O0iO));
	and(wire_nllliiO_dataout, wire_nllllOO_dataout, ~(nl0O0iO));
	and(wire_nlllil_dataout, wire_nlllOl_o[2], nli001l);
	and(wire_nlllili_dataout, wire_nlllO1i_dataout, ~(nl0O0iO));
	and(wire_nlllill_dataout, wire_nlllO1l_dataout, ~(nl0O0iO));
	assign		wire_nlllilO_dataout = (nl0O0il === 1'b1) ? wire_nlllO1O_dataout : nllil0l;
	and(wire_nllliO_dataout, wire_nlllOl_o[3], nli001l);
	assign		wire_nllliOi_dataout = (nl0O0il === 1'b1) ? wire_nlllO0i_dataout : nlliliO;
	assign		wire_nllliOl_dataout = (nl0O0il === 1'b1) ? wire_nlllO0l_dataout : nllilli;
	assign		wire_nllliOO_dataout = (nl0O0il === 1'b1) ? wire_nlllO0O_dataout : nllilll;
	assign		wire_nllll0i_dataout = (nl0O0il === 1'b1) ? wire_nlllOli_dataout : nllilOO;
	assign		wire_nllll0l_dataout = (nl0O0il === 1'b1) ? wire_nlllOll_dataout : nlliO1i;
	assign		wire_nllll0O_dataout = (nl0O0il === 1'b1) ? wire_nlllOlO_dataout : nlliO1l;
	assign		wire_nllll1i_dataout = (nl0O0il === 1'b1) ? wire_nlllOii_dataout : nllillO;
	assign		wire_nllll1l_dataout = (nl0O0il === 1'b1) ? wire_nlllOil_dataout : nllilOi;
	assign		wire_nllll1O_dataout = (nl0O0il === 1'b1) ? wire_nlllOiO_dataout : nllilOl;
	and(wire_nlllli_dataout, wire_nlllOl_o[4], nli001l);
	assign		wire_nllllii_dataout = (nl0O0il === 1'b1) ? wire_nlllOOi_dataout : nlliO1O;
	assign		wire_nllllil_dataout = (nl0O0il === 1'b1) ? wire_nlllOOl_dataout : nlliO0i;
	assign		wire_nlllliO_dataout = (nl0O0il === 1'b1) ? wire_nlllOOO_dataout : nlliO0l;
	and(wire_nlllll_dataout, wire_nlllOl_o[5], nli001l);
	assign		wire_nllllli_dataout = (nl0O0il === 1'b1) ? wire_nllO11i_dataout : nlliO0O;
	assign		wire_nllllll_dataout = (nl0O0il === 1'b1) ? wire_nllO11l_dataout : nlliOii;
	assign		wire_nlllllO_dataout = (nl0O0il === 1'b1) ? wire_nllO11O_dataout : nlliOil;
	and(wire_nllllO_dataout, wire_nlllOl_o[6], nli001l);
	assign		wire_nllllOi_dataout = (nl0O0il === 1'b1) ? wire_nllO10i_dataout : nlliOiO;
	assign		wire_nllllOl_dataout = (nl0O0il === 1'b1) ? wire_nllO10l_dataout : nlliOli;
	assign		wire_nllllOO_dataout = (nl0O0il === 1'b1) ? wire_nllO10O_dataout : nlliOll;
	assign		wire_nlllO0i_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[1] : nlliliO;
	assign		wire_nlllO0l_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[2] : nllilli;
	assign		wire_nlllO0O_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[3] : nllilll;
	assign		wire_nlllO1i_dataout = (nl0O0il === 1'b1) ? wire_nllO1ii_dataout : nlliOlO;
	assign		wire_nlllO1l_dataout = (nl0O0il === 1'b1) ? wire_nllO1il_dataout : nlliOOi;
	assign		wire_nlllO1O_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[0] : nllil0l;
	and(wire_nlllOi_dataout, wire_nlllOl_o[7], nli001l);
	assign		wire_nlllOii_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[4] : nllillO;
	assign		wire_nlllOil_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[5] : nllilOi;
	assign		wire_nlllOiO_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[6] : nllilOl;
	assign		wire_nlllOli_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[7] : nllilOO;
	assign		wire_nlllOll_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[8] : nlliO1i;
	assign		wire_nlllOlO_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[9] : nlliO1l;
	assign		wire_nlllOOi_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[10] : nlliO1O;
	assign		wire_nlllOOl_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[11] : nlliO0i;
	assign		wire_nlllOOO_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[12] : nlliO0l;
	and(wire_nllO00i_dataout, ((~ (nlO100l ^ nlO111O)) & nl0O0ll), ~(wire_nlill1i_dout));
	and(wire_nllO00l_dataout, ((~ nl0O0lO) & (nl0Oi1i & nl0O0Oi)), ~(wire_nlill1i_dout));
	and(wire_nllO00O_dataout, ((~ nl0O0lO) & nl0Oi1i), ~(wire_nlill1i_dout));
	assign		wire_nllO10i_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[16] : nlliOiO;
	assign		wire_nllO10l_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[17] : nlliOli;
	assign		wire_nllO10O_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[18] : nlliOll;
	assign		wire_nllO11i_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[13] : nlliO0O;
	assign		wire_nllO11l_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[14] : nlliOii;
	assign		wire_nllO11O_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[15] : nlliOil;
	assign		wire_nllO1ii_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[19] : nlliOlO;
	assign		wire_nllO1il_dataout = ((~ nll0lOO) === 1'b1) ? wire_nllO1iO_o[20] : nlliOOi;
	and(wire_nllOili_dataout, wire_nllOiOl_dataout, ~(wire_nlill1i_dout));
	and(wire_nllOill_dataout, wire_nllOiOO_dataout, ~(wire_nlill1i_dout));
	and(wire_nllOilO_dataout, wire_nllOliO_dataout, ~(wire_nlill1i_dout));
	and(wire_nllOiOi_dataout, wire_nllOlli_dataout, ~(wire_nlill1i_dout));
	assign		wire_nllOiOl_dataout = (nlOO11i === 1'b1) ? wire_nllOl1O_dataout : wire_nllOl1i_dataout;
	assign		wire_nllOiOO_dataout = (nlOO11i === 1'b1) ? wire_nllOl0i_dataout : wire_nllOl1l_dataout;
	and(wire_nllOl0i_dataout, wire_nllOl0O_dataout, nl0O0Ol);
	assign		wire_nllOl0l_dataout = ((~ nl0O0Oi) === 1'b1) ? wire_nllOlii_o[0] : nllO01O;
	assign		wire_nllOl0O_dataout = ((~ nl0O0Oi) === 1'b1) ? wire_nllOlii_o[1] : nllOi0O;
	and(wire_nllOl1i_dataout, nllO01O, ~(nlOl1il));
	and(wire_nllOl1l_dataout, nllOi0O, ~(nlOl1il));
	and(wire_nllOl1O_dataout, wire_nllOl0l_dataout, nl0O0Ol);
	assign		wire_nllOliO_dataout = (nlOO11i === 1'b1) ? wire_nllOlOi_dataout : wire_nllOlll_dataout;
	assign		wire_nllOlli_dataout = (nlOO11i === 1'b1) ? wire_nllOlOl_dataout : wire_nllOllO_dataout;
	and(wire_nllOlll_dataout, nllOiii, ~(nlOl1il));
	and(wire_nllOllO_dataout, nllOiil, ~(nlOl1il));
	and(wire_nllOlOi_dataout, wire_nllOlOO_dataout, nl0Oi1l);
	and(wire_nllOlOl_dataout, wire_nllOO1i_dataout, nl0Oi1l);
	assign		wire_nllOlOO_dataout = ((~ nl0Oi1i) === 1'b1) ? wire_nllOO1l_o[0] : nllOiii;
	assign		wire_nllOO1i_dataout = ((~ nl0Oi1i) === 1'b1) ? wire_nllOO1l_o[1] : nllOiil;
	assign		wire_nlO000i_dataout = (nl0Oi0l === 1'b1) ? nlO11Oi : nllOOlO;
	assign		wire_nlO000l_dataout = (nl0Oi0l === 1'b1) ? nlO11Ol : nllOOOi;
	assign		wire_nlO000O_dataout = (nl0Oi0l === 1'b1) ? nlO11OO : nllOOOl;
	assign		wire_nlO001i_dataout = (nl0Oi0l === 1'b1) ? nlO11li : nllOOiO;
	assign		wire_nlO001l_dataout = (nl0Oi0l === 1'b1) ? nlO11ll : nllOOli;
	assign		wire_nlO001O_dataout = (nl0Oi0l === 1'b1) ? nlO11lO : nllOOll;
	assign		wire_nlO00ii_dataout = (nl0Oi0l === 1'b1) ? nlO101i : nllOOOO;
	assign		wire_nlO00il_dataout = (nl0Oi0l === 1'b1) ? nlO101l : nlO111i;
	assign		wire_nlO00iO_dataout = (nl0Oi0l === 1'b1) ? nlO101O : nlO111l;
	assign		wire_nlO00li_dataout = (nl0Oi0l === 1'b1) ? nlO100l : nlO111O;
	and(wire_nlO00lO_dataout, wire_nlO0iOi_dataout, ~(nlOl1il));
	and(wire_nlO00Oi_dataout, wire_nlO0iOl_dataout, ~(nlOl1il));
	and(wire_nlO00Ol_dataout, wire_nlO0iOO_dataout, ~(nlOl1il));
	and(wire_nlO00OO_dataout, wire_nlO0l1i_dataout, ~(nlOl1il));
	and(wire_nlO010i_dataout, wire_nlO0i0O_dataout, ~(nlOi00O));
	and(wire_nlO010l_dataout, wire_nlO0iii_dataout, ~(nlOi00O));
	and(wire_nlO010O_dataout, wire_nlO0iil_dataout, ~(nlOi00O));
	and(wire_nlO011i_dataout, wire_nlO0i1O_dataout, ~(nlOi00O));
	and(wire_nlO011l_dataout, wire_nlO0i0i_dataout, ~(nlOi00O));
	and(wire_nlO011O_dataout, wire_nlO0i0l_dataout, ~(nlOi00O));
	and(wire_nlO01ii_dataout, wire_nlO0iiO_dataout, ~(nlOi00O));
	and(wire_nlO01il_dataout, wire_nlO0ili_dataout, ~(nlOi00O));
	and(wire_nlO01iO_dataout, wire_nlO0ill_dataout, ~(nlOi00O));
	and(wire_nlO01li_dataout, wire_nlO0ilO_dataout, ~(nlOi00O));
	assign		wire_nlO01ll_dataout = (nl0Oi0l === 1'b1) ? nlO110l : nllOiiO;
	assign		wire_nlO01lO_dataout = (nl0Oi0l === 1'b1) ? nlO110O : nllOO0l;
	assign		wire_nlO01Oi_dataout = (nl0Oi0l === 1'b1) ? nlO11ii : nllOO0O;
	assign		wire_nlO01Ol_dataout = (nl0Oi0l === 1'b1) ? nlO11il : nllOOii;
	assign		wire_nlO01OO_dataout = (nl0Oi0l === 1'b1) ? nlO11iO : nllOOil;
	and(wire_nlO0i0i_dataout, wire_nlO0l0l_dataout, ~(nlOl1il));
	and(wire_nlO0i0l_dataout, wire_nlO0l0O_dataout, ~(nlOl1il));
	and(wire_nlO0i0O_dataout, wire_nlO0lii_dataout, ~(nlOl1il));
	and(wire_nlO0i1i_dataout, wire_nlO0l1l_dataout, ~(nlOl1il));
	and(wire_nlO0i1l_dataout, wire_nlO0l1O_dataout, ~(nlOl1il));
	and(wire_nlO0i1O_dataout, wire_nlO0l0i_dataout, ~(nlOl1il));
	and(wire_nlO0iii_dataout, wire_nlO0lil_dataout, ~(nlOl1il));
	and(wire_nlO0iil_dataout, wire_nlO0liO_dataout, ~(nlOl1il));
	and(wire_nlO0iiO_dataout, wire_nlO0lli_dataout, ~(nlOl1il));
	and(wire_nlO0ili_dataout, wire_nlO0lll_dataout, ~(nlOl1il));
	and(wire_nlO0ill_dataout, wire_nlO0llO_dataout, ~(nlOl1il));
	and(wire_nlO0ilO_dataout, wire_nlO0lOi_dataout, ~(nlOl1il));
	assign		wire_nlO0iOi_dataout = (nlOO11i === 1'b1) ? nlOO10O : nlO110l;
	assign		wire_nlO0iOl_dataout = (nlOO11i === 1'b1) ? nlOO1il : nlO110O;
	assign		wire_nlO0iOO_dataout = (nlOO11i === 1'b1) ? nlOO1iO : nlO11ii;
	assign		wire_nlO0l0i_dataout = (nlOO11i === 1'b1) ? nlOO1Oi : nlO11ll;
	assign		wire_nlO0l0l_dataout = (nlOO11i === 1'b1) ? nlOO1Ol : nlO11lO;
	assign		wire_nlO0l0O_dataout = (nlOO11i === 1'b1) ? nlOO1OO : nlO11Oi;
	assign		wire_nlO0l1i_dataout = (nlOO11i === 1'b1) ? nlOO1li : nlO11il;
	assign		wire_nlO0l1l_dataout = (nlOO11i === 1'b1) ? nlOO1ll : nlO11iO;
	assign		wire_nlO0l1O_dataout = (nlOO11i === 1'b1) ? nlOO1lO : nlO11li;
	assign		wire_nlO0lii_dataout = (nlOO11i === 1'b1) ? nlOO01i : nlO11Ol;
	assign		wire_nlO0lil_dataout = (nlOO11i === 1'b1) ? nlOO01l : nlO11OO;
	assign		wire_nlO0liO_dataout = (nlOO11i === 1'b1) ? nlOO01O : nlO101i;
	and(wire_nlO0ll_dataout, write, wire_nlOi1O_o);
	assign		wire_nlO0lli_dataout = (nlOO11i === 1'b1) ? nlOO00i : nlO101l;
	assign		wire_nlO0lll_dataout = (nlOO11i === 1'b1) ? nlOO00l : nlO101O;
	assign		wire_nlO0llO_dataout = (nlOO11i === 1'b1) ? nlOO00O : nlO100i;
	assign		wire_nlO0lOi_dataout = (nlOO11i === 1'b1) ? nlOO0ii : nlO100l;
	and(wire_nlO0OOO_dataout, (~ nl0Ol1i), ~(nl0OiOi));
	and(wire_nlO10ii_dataout, wire_nlO1liO_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO10il_dataout, wire_nlO1lli_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO10iO_dataout, wire_nlO1lll_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO10li_dataout, wire_nlO1llO_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO10ll_dataout, wire_nlO1lOi_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO10lO_dataout, wire_nlO1lOl_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO10Oi_dataout, wire_nlO1lOO_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO10Ol_dataout, wire_nlO1O1i_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO10OO_dataout, wire_nlO1O1l_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1i0i_dataout, wire_nlO1O0O_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1i0l_dataout, wire_nlO1Oii_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1i0O_dataout, wire_nlO1Oil_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1i1i_dataout, wire_nlO1O1O_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1i1l_dataout, wire_nlO1O0i_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1i1O_dataout, wire_nlO1O0l_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1iii_dataout, wire_nlO1OiO_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1iil_dataout, wire_nlO1Oli_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1iiO_dataout, wire_nlO1Oll_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1ili_dataout, wire_nlO1OlO_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1ill_dataout, wire_nlO1OOi_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1ilO_dataout, wire_nlO1OOl_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1iOi_dataout, wire_nlO1OOO_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1iOl_dataout, wire_nlO011i_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1iOO_dataout, wire_nlO011l_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1l0i_dataout, wire_nlO010O_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1l0l_dataout, wire_nlO01ii_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1l0O_dataout, wire_nlO01il_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1l1i_dataout, wire_nlO011O_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1l1l_dataout, wire_nlO010i_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1l1O_dataout, wire_nlO010l_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1lii_dataout, wire_nlO01iO_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1lil_dataout, wire_nlO01li_dataout, ~(wire_nlill1i_dout));
	and(wire_nlO1liO_dataout, wire_nlO01ll_dataout, ~(nlOi00O));
	and(wire_nlO1lli_dataout, wire_nlO01lO_dataout, ~(nlOi00O));
	and(wire_nlO1lll_dataout, wire_nlO01Oi_dataout, ~(nlOi00O));
	and(wire_nlO1llO_dataout, wire_nlO01Ol_dataout, ~(nlOi00O));
	and(wire_nlO1lOi_dataout, wire_nlO01OO_dataout, ~(nlOi00O));
	and(wire_nlO1lOl_dataout, wire_nlO001i_dataout, ~(nlOi00O));
	and(wire_nlO1lOO_dataout, wire_nlO001l_dataout, ~(nlOi00O));
	and(wire_nlO1O0i_dataout, wire_nlO000O_dataout, ~(nlOi00O));
	and(wire_nlO1O0l_dataout, wire_nlO00ii_dataout, ~(nlOi00O));
	and(wire_nlO1O0O_dataout, wire_nlO00il_dataout, ~(nlOi00O));
	and(wire_nlO1O1i_dataout, wire_nlO001O_dataout, ~(nlOi00O));
	and(wire_nlO1O1l_dataout, wire_nlO000i_dataout, ~(nlOi00O));
	and(wire_nlO1O1O_dataout, wire_nlO000l_dataout, ~(nlOi00O));
	and(wire_nlO1Oii_dataout, wire_nlO00iO_dataout, ~(nlOi00O));
	and(wire_nlO1Oil_dataout, wire_nlO00li_dataout, ~(nlOi00O));
	and(wire_nlO1OiO_dataout, nl0Oi0i, ~(nlOi00O));
	and(wire_nlO1Oli_dataout, wire_nlO00lO_dataout, ~(nlOi00O));
	and(wire_nlO1Oll_dataout, wire_nlO00Oi_dataout, ~(nlOi00O));
	and(wire_nlO1OlO_dataout, wire_nlO00Ol_dataout, ~(nlOi00O));
	and(wire_nlO1OOi_dataout, wire_nlO00OO_dataout, ~(nlOi00O));
	and(wire_nlO1OOl_dataout, wire_nlO0i1i_dataout, ~(nlOi00O));
	and(wire_nlO1OOO_dataout, wire_nlO0i1l_dataout, ~(nlOi00O));
	and(wire_nlOi0il_dataout, wire_nlO0lOl_o, ~(nl0Ol0i));
	and(wire_nlOi0iO_dataout, wire_nlO0O1i_o, ~(nl0Ol0i));
	and(wire_nlOi0li_dataout, wire_nlO0O1O_o, ~(nl0Ol0i));
	and(wire_nlOi0ll_dataout, wire_nlO0O0l_o, ~(nl0Ol0i));
	and(wire_nlOi0lO_dataout, wire_nlO0Oii_o, ~(nl0Ol0i));
	and(wire_nlOi0Oi_dataout, wire_nlO0OiO_o, ~(nl0Ol0i));
	and(wire_nlOi0Ol_dataout, wire_nlO0Oll_o, ~(nl0Ol0i));
	or(wire_nlOi0OO_dataout, wire_nlO0OOi_o, nl0Ol0i);
	and(wire_nlOi10i_dataout, nl0Ol1i, ~(nl0OiOl));
	and(wire_nlOi11i_dataout, nl0Ol1i, ~(nl0OiOi));
	and(wire_nlOi11O_dataout, (~ nl0Ol1i), ~(nl0OiOl));
	and(wire_nlOi1ii_dataout, wire_nlOi1iO_dataout, ~(nl0Ol1l));
	and(wire_nlOi1il_dataout, wire_nlOi1li_dataout, ~(nl0Ol1l));
	and(wire_nlOi1iO_dataout, (~ nl0OiOO), ~(nl0Ol1i));
	or(wire_nlOi1li_dataout, nl0OiOO, nl0Ol1i);
	and(wire_nlOiiO_dataout, nli00li, ~((~ nlOOii)));
	or(wire_nlOil0i_dataout, wire_nlOil0l_dataout, wire_n111Ol_o);
	and(wire_nlOil0l_dataout, nlOil1i, ~((wire_nlOOOll_dataout | (wire_n111ii_dataout | (wire_n111ll_dataout | wire_nlOOOOl_o)))));
	and(wire_nlOil1O_dataout, wire_nlOil0i_dataout, ~(n1i11l));
	and(wire_nlOili_dataout, wire_nlOiOl_dataout, ~((~ nlOOii)));
	and(wire_nlOill_dataout, wire_nlOiOO_dataout, ~((~ nlOOii)));
	and(wire_nlOilO_dataout, wire_nlOl1i_dataout, ~((~ nlOOii)));
	or(wire_nlOiOi_dataout, wire_nlOl1l_dataout, (~ nlOOii));
	and(wire_nlOiOl_dataout, nli00ii, ~(nli00li));
	and(wire_nlOiOO_dataout, wire_nlOl1O_dataout, ~(nli00li));
	and(wire_nlOl00i_dataout, nlOiOll, ~(n1i11l));
	and(wire_nlOl00l_dataout, nlOiOlO, ~(n1i11l));
	and(wire_nlOl00O_dataout, nlOiOOi, ~(n1i11l));
	and(wire_nlOl01i_dataout, nlOiOil, ~(n1i11l));
	and(wire_nlOl01l_dataout, nlOiOiO, ~(n1i11l));
	and(wire_nlOl01O_dataout, nlOiOli, ~(n1i11l));
	and(wire_nlOl0i_dataout, nli000O, ~(nli00ii));
	and(wire_nlOl0ii_dataout, nlOiOOl, ~(n1i11l));
	and(wire_nlOl0il_dataout, nlOiOOO, ~(n1i11l));
	and(wire_nlOl0iO_dataout, nlOl11i, ~(n1i11l));
	and(wire_nlOl0l_dataout, wire_nlOlii_dataout, ~(nli00ii));
	and(wire_nlOl0li_dataout, wire_nlOllOi_dataout, ~(n1i11l));
	and(wire_nlOl0ll_dataout, wire_nlOllOl_dataout, ~(n1i11l));
	and(wire_nlOl0lO_dataout, wire_nlOllOO_dataout, ~(n1i11l));
	and(wire_nlOl0O_dataout, nli000l, ~(nli000O));
	and(wire_nlOl0Oi_dataout, wire_nlOlO1i_dataout, ~(n1i11l));
	and(wire_nlOl0Ol_dataout, wire_nlOlO1l_dataout, ~(n1i11l));
	and(wire_nlOl0OO_dataout, wire_nlOlO1O_dataout, ~(n1i11l));
	and(wire_nlOl1i_dataout, wire_nlOl0i_dataout, ~(nli00li));
	and(wire_nlOl1iO_dataout, nlOiO1i, ~(n1i11l));
	and(wire_nlOl1l_dataout, wire_nlOl0l_dataout, ~(nli00li));
	and(wire_nlOl1li_dataout, nlOiO1l, ~(n1i11l));
	and(wire_nlOl1ll_dataout, nlOiO1O, ~(n1i11l));
	and(wire_nlOl1lO_dataout, nlOiO0i, ~(n1i11l));
	and(wire_nlOl1O_dataout, wire_nlOl0O_dataout, ~(nli00ii));
	and(wire_nlOl1Oi_dataout, nlOiO0l, ~(n1i11l));
	and(wire_nlOl1Ol_dataout, nlOiO0O, ~(n1i11l));
	and(wire_nlOl1OO_dataout, nlOiOii, ~(n1i11l));
	and(wire_nlOli0i_dataout, wire_nlOlill_dataout, ~(n1i11l));
	and(wire_nlOli0l_dataout, wire_nlOlilO_dataout, ~(n1i11l));
	and(wire_nlOli0O_dataout, wire_nlOll1i_dataout, ~(n1i11l));
	and(wire_nlOli1i_dataout, wire_nlOlO0i_dataout, ~(n1i11l));
	and(wire_nlOli1l_dataout, wire_nlOlO0l_dataout, ~(n1i11l));
	and(wire_nlOli1O_dataout, wire_nlOliiO_dataout, ~(n1i11l));
	and(wire_nlOlii_dataout, (~ nli000l), ~(nli000O));
	and(wire_nlOliii_dataout, wire_nlOllll_dataout, ~(n1i11l));
	and(wire_nlOliil_dataout, wire_nlOlO0O_dataout, ~(n1i11l));
	or(wire_nlOliiO_dataout, wire_nlOlili_dataout, wire_nlOOOll_dataout);
	or(wire_nlOlili_dataout, nlOl11O, nl0Olii);
	or(wire_nlOlill_dataout, nlOl10i, nl0Olii);
	or(wire_nlOlilO_dataout, (wire_n111il_o | wire_n111ii_dataout), ((n10O1O & wire_n111lO_o) & nl0Ol0l));
	or(wire_nlOll1i_dataout, wire_nlOll1l_dataout, nl0Olii);
	or(wire_nlOll1l_dataout, nlOl10O, nl0Olil);
	or(wire_nlOllll_dataout, wire_nlOlllO_dataout, nl0Olii);
	assign		wire_nlOlllO_dataout = (nl0Olil === 1'b1) ? nlOl10O : nlOl1ii;
	or(wire_nlOllOi_dataout, wire_nlOlOii_dataout, wire_n111Ol_o);
	and(wire_nlOllOl_dataout, wire_nlOlOil_dataout, ~(wire_n111Ol_o));
	or(wire_nlOllOO_dataout, wire_nlOlOiO_dataout, wire_n111Ol_o);
	or(wire_nlOlO0i_dataout, wire_nlOlOOi_dataout, wire_n111Ol_o);
	and(wire_nlOlO0l_dataout, wire_nlOlOOl_dataout, ~(wire_n111Ol_o));
	or(wire_nlOlO0O_dataout, nl0OliO, wire_n111Ol_o);
	and(wire_nlOlO1i_dataout, wire_nlOlOli_dataout, ~(wire_n111Ol_o));
	or(wire_nlOlO1l_dataout, wire_nlOlOll_dataout, wire_n111Ol_o);
	and(wire_nlOlO1O_dataout, wire_nlOlOlO_dataout, ~(wire_n111Ol_o));
	and(wire_nlOlOii_dataout, n10lli, nl0OliO);
	assign		wire_nlOlOil_dataout = (nl0OliO === 1'b1) ? n10lll : wire_n111il_o;
	assign		wire_nlOlOiO_dataout = (nl0OliO === 1'b1) ? n10llO : wire_n111il_o;
	assign		wire_nlOlOli_dataout = (nl0OliO === 1'b1) ? n10lOi : wire_n111il_o;
	and(wire_nlOlOll_dataout, n10lOl, nl0OliO);
	and(wire_nlOlOlO_dataout, n10lOO, nl0OliO);
	and(wire_nlOlOOi_dataout, n10O1i, nl0OliO);
	and(wire_nlOlOOl_dataout, n10O1l, nl0OliO);
	and(wire_nlOO0iO_dataout, wire_nlOOili_dataout, ~(n1i11l));
	and(wire_nlOO0li_dataout, wire_nlOOill_dataout, ~(n1i11l));
	and(wire_nlOO0ll_dataout, wire_nlOOilO_dataout, ~(n1i11l));
	and(wire_nlOO0lO_dataout, wire_nlOOiOi_dataout, ~(n1i11l));
	and(wire_nlOO0Oi_dataout, wire_nlOOiOl_dataout, ~(n1i11l));
	and(wire_nlOO0Ol_dataout, wire_nlOOiOO_dataout, ~(n1i11l));
	and(wire_nlOO0OO_dataout, wire_nlOOl1i_dataout, ~(n1i11l));
	and(wire_nlOO11l_dataout, ((n101Ol & wire_n1101i_o) | (n101Oi & wire_n1101O_o)), ~(n1i11l));
	and(wire_nlOO1ii_dataout, wire_n1111O_dataout, ~(n1i11l));
	and(wire_nlOOi0i_dataout, wire_nlOOl0l_dataout, ~(n1i11l));
	and(wire_nlOOi0l_dataout, wire_nlOOl0O_dataout, ~(n1i11l));
	and(wire_nlOOi0O_dataout, wire_nlOOlii_dataout, ~(n1i11l));
	and(wire_nlOOi1i_dataout, wire_nlOOl1l_dataout, ~(n1i11l));
	and(wire_nlOOi1l_dataout, wire_nlOOl1O_dataout, ~(n1i11l));
	and(wire_nlOOi1O_dataout, wire_nlOOl0i_dataout, ~(n1i11l));
	and(wire_nlOOiii_dataout, wire_nlOOlil_dataout, ~(n1i11l));
	and(wire_nlOOiil_dataout, wire_nlOOliO_dataout, ~(n1i11l));
	and(wire_nlOOiiO_dataout, wire_nlOOlli_dataout, ~(n1i11l));
	and(wire_nlOOil_dataout, wire_nlOOiO_dataout, nlOO0l);
	assign		wire_nlOOili_dataout = (wire_n1110i_o === 1'b1) ? n10lli : nlOO10O;
	assign		wire_nlOOill_dataout = (wire_n1110i_o === 1'b1) ? n10lll : nlOO1il;
	assign		wire_nlOOilO_dataout = (wire_n1110i_o === 1'b1) ? n10llO : nlOO1iO;
	or(wire_nlOOiO_dataout, wire_nlOOli_o[0], nlOOii);
	assign		wire_nlOOiOi_dataout = (wire_n1110i_o === 1'b1) ? n10lOi : nlOO1li;
	assign		wire_nlOOiOl_dataout = (wire_n1110i_o === 1'b1) ? n10lOl : nlOO1ll;
	assign		wire_nlOOiOO_dataout = (wire_n1110i_o === 1'b1) ? n10lOO : nlOO1lO;
	assign		wire_nlOOl0i_dataout = (wire_n1110i_o === 1'b1) ? nlOO01i : wire_nlOOllO_dataout;
	assign		wire_nlOOl0l_dataout = (wire_n1110i_o === 1'b1) ? nlOO01l : wire_nlOOlOi_dataout;
	assign		wire_nlOOl0O_dataout = (wire_n1110i_o === 1'b1) ? nlOO01O : wire_nlOOlOl_dataout;
	assign		wire_nlOOl1i_dataout = (wire_n1110i_o === 1'b1) ? n10O1i : nlOO1Oi;
	assign		wire_nlOOl1l_dataout = (wire_n1110i_o === 1'b1) ? n10O1l : nlOO1Ol;
	assign		wire_nlOOl1O_dataout = (wire_n1110i_o === 1'b1) ? nlOO1OO : wire_nlOOlll_dataout;
	assign		wire_nlOOlii_dataout = (wire_n1110i_o === 1'b1) ? nlOO00i : wire_nlOOlOO_dataout;
	assign		wire_nlOOlil_dataout = (wire_n1110i_o === 1'b1) ? nlOO00l : wire_nlOOO1i_dataout;
	assign		wire_nlOOliO_dataout = (wire_n1110i_o === 1'b1) ? nlOO00O : wire_nlOOO1l_dataout;
	assign		wire_nlOOlli_dataout = (wire_n1110i_o === 1'b1) ? nlOO0ii : wire_nlOOO1O_dataout;
	assign		wire_nlOOlll_dataout = (wire_n1111O_dataout === 1'b1) ? n10lli : nlOO1OO;
	assign		wire_nlOOllO_dataout = (wire_n1111O_dataout === 1'b1) ? n10lll : nlOO01i;
	assign		wire_nlOOlOi_dataout = (wire_n1111O_dataout === 1'b1) ? n10llO : nlOO01l;
	assign		wire_nlOOlOl_dataout = (wire_n1111O_dataout === 1'b1) ? n10lOi : nlOO01O;
	assign		wire_nlOOlOO_dataout = (wire_n1111O_dataout === 1'b1) ? n10lOl : nlOO00i;
	or(wire_nlOOO0l_dataout, wire_nlOOO0O_dataout, n1011O);
	and(wire_nlOOO0O_dataout, nlOO0il, ~((wire_n1101i_o | wire_n1111O_dataout)));
	assign		wire_nlOOO1i_dataout = (wire_n1111O_dataout === 1'b1) ? n10lOO : nlOO00l;
	assign		wire_nlOOO1l_dataout = (wire_n1111O_dataout === 1'b1) ? n10O1i : nlOO00O;
	assign		wire_nlOOO1O_dataout = (wire_n1111O_dataout === 1'b1) ? n10O1l : nlOO0ii;
	and(wire_nlOOOli_dataout, nl0OO0O, n11OOl);
	and(wire_nlOOOll_dataout, wire_n110OO_dataout, n101ll);
	oper_add   n00i1l
	( 
	.a({n001iO, n001il, n001ii, n0010O, n0010l, n0010i, n01OOO}),
	.b({{6{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n00i1l_o));
	defparam
		n00i1l.sgate_representation = 0,
		n00i1l.width_a = 7,
		n00i1l.width_b = 7,
		n00i1l.width_o = 7;
	oper_add   n00O0i
	( 
	.a({n00lOO, n001li}),
	.b({1'b0, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n00O0i_o));
	defparam
		n00O0i.sgate_representation = 0,
		n00O0i.width_a = 2,
		n00O0i.width_b = 2,
		n00O0i.width_o = 2;
	oper_add   n01il
	( 
	.a({n011i, n1OOO, n01iO, 1'b1}),
	.b({{2{1'b1}}, 1'b0, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n01il_o));
	defparam
		n01il.sgate_representation = 0,
		n01il.width_a = 4,
		n01il.width_b = 4,
		n01il.width_o = 4;
	oper_add   n0i0ii
	( 
	.a({n0i01l, n0i1OO, n0i1Ol, n0i1Oi}),
	.b({{3{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n0i0ii_o));
	defparam
		n0i0ii.sgate_representation = 0,
		n0i0ii.width_a = 4,
		n0i0ii.width_b = 4,
		n0i0ii.width_o = 4;
	oper_add   n0il1i
	( 
	.a({n0iill, n0iiiO, n0iiil, n0ii0O}),
	.b({{3{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n0il1i_o));
	defparam
		n0il1i.sgate_representation = 0,
		n0il1i.width_a = 4,
		n0il1i.width_b = 4,
		n0il1i.width_o = 4;
	oper_add   n0ilOl
	( 
	.a({n0iOlO, n0iOll, n0iOli, n0iOil, 1'b1}),
	.b({(~ n0ii0i), (~ n0ii1O), (~ n0ii1l), (~ n0i0lO), 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n0ilOl_o));
	defparam
		n0ilOl.sgate_representation = 0,
		n0ilOl.width_a = 5,
		n0ilOl.width_b = 5,
		n0ilOl.width_o = 5;
	oper_add   n0iO0l
	( 
	.a({n0i1ll, n0i1li, n0i1iO, n0i10i, 1'b1}),
	.b({(~ n0l1Oi), (~ n0l1lO), (~ n0l1ll), (~ n0l1iO), 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n0iO0l_o));
	defparam
		n0iO0l.sgate_representation = 0,
		n0iO0l.width_a = 5,
		n0iO0l.width_b = 5,
		n0iO0l.width_o = 5;
	oper_add   n11ll
	( 
	.a({n110l, n11lO, 1'b1}),
	.b({1'b1, 1'b0, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n11ll_o));
	defparam
		n11ll.sgate_representation = 0,
		n11ll.width_a = 3,
		n11ll.width_b = 3,
		n11ll.width_o = 3;
	oper_add   n1iiO
	( 
	.a({n1i0l, n1i1i, 1'b1}),
	.b({1'b1, 1'b0, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n1iiO_o));
	defparam
		n1iiO.sgate_representation = 0,
		n1iiO.width_a = 3,
		n1iiO.width_b = 3,
		n1iiO.width_o = 3;
	oper_add   n1lll
	( 
	.a({n1l0l, n1l0i, n1l1O, n1l1l, 1'b1}),
	.b({{3{1'b1}}, 1'b0, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n1lll_o));
	defparam
		n1lll.sgate_representation = 0,
		n1lll.width_a = 5,
		n1lll.width_b = 5,
		n1lll.width_o = 5;
	oper_add   n1Oll
	( 
	.a({n1O0i, n1O1O, n1OlO, 1'b1}),
	.b({{2{1'b1}}, 1'b0, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n1Oll_o));
	defparam
		n1Oll.sgate_representation = 0,
		n1Oll.width_a = 4,
		n1Oll.width_b = 4,
		n1Oll.width_o = 4;
	oper_add   ni01lO
	( 
	.a({ni01ii, ni010l, ni010i, ni011l}),
	.b({{3{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_ni01lO_o));
	defparam
		ni01lO.sgate_representation = 0,
		ni01lO.width_a = 4,
		ni01lO.width_b = 4,
		ni01lO.width_o = 4;
	oper_add   ni0i0l
	( 
	.a({ni00OO, ni00Oi, ni00lO, ni00ll}),
	.b({{3{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_ni0i0l_o));
	defparam
		ni0i0l.sgate_representation = 0,
		ni0i0l.width_a = 4,
		ni0i0l.width_b = 4,
		ni0i0l.width_o = 4;
	oper_add   ni0l1O
	( 
	.a({ni0lOO, ni0lOl, ni0lOi, ni0lll, 1'b1}),
	.b({(~ ni00iO), (~ ni00il), (~ ni00ii), (~ ni001l), 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_ni0l1O_o));
	defparam
		ni0l1O.sgate_representation = 0,
		ni0l1O.width_a = 5,
		ni0l1O.width_b = 5,
		ni0l1O.width_o = 5;
	oper_add   ni0lil
	( 
	.a({ni1OOO, ni1OOl, ni1OOi, ni1Oil, 1'b1}),
	.b({(~ nii11l), (~ nii11i), (~ ni0OOO), (~ ni0OOi), 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_ni0lil_o));
	defparam
		ni0lil.sgate_representation = 0,
		ni0lil.width_a = 5,
		ni0lil.width_b = 5,
		ni0lil.width_o = 5;
	oper_add   niiO0i
	( 
	.a({niiill, niiili, niiiiO, niiiil, niiiii, niii0O, niii1l}),
	.b({{6{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_niiO0i_o));
	defparam
		niiO0i.sgate_representation = 0,
		niiO0i.width_a = 7,
		niiO0i.width_b = 7,
		niiO0i.width_o = 7;
	oper_add   nliiOOO
	( 
	.a({nliiO0i, nliiO1O, nliiO1l, nliiO1i, nliilOO, nliiliO}),
	.b({{5{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nliiOOO_o));
	defparam
		nliiOOO.sgate_representation = 0,
		nliiOOO.width_a = 6,
		nliiOOO.width_b = 6,
		nliiOOO.width_o = 6;
	oper_add   nlil10i
	( 
	.a({nliiOii, nliiO0O, nliiO0l}),
	.b({{2{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlil10i_o));
	defparam
		nlil10i.sgate_representation = 0,
		nlil10i.width_a = 3,
		nlil10i.width_b = 3,
		nlil10i.width_o = 3;
	oper_add   nlili1O
	( 
	.a({nlil0ii, nlil00O, nlil00l, nlil00i, nlil01O, nlil1lO}),
	.b({{5{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlili1O_o));
	defparam
		nlili1O.sgate_representation = 0,
		nlili1O.width_a = 6,
		nlili1O.width_b = 6,
		nlili1O.width_o = 6;
	oper_add   nliliii
	( 
	.a({nlil0li, nlil0iO, nlil0il}),
	.b({{2{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nliliii_o));
	defparam
		nliliii.sgate_representation = 0,
		nliliii.width_a = 3,
		nliliii.width_b = 3,
		nliliii.width_o = 3;
	oper_add   nll01ll
	( 
	.a({nll100O, nll100l, nll100i, nll101O, nll101l, nll101i, nll11OO, nll11Ol, nll11Oi, nll11lO, nll11ll, nll11li, nll11iO, nll11il, nll11ii, nll110O, nll110l, nll110i, nll111O, nll111l, nliOOlO}),
	.b({{20{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nll01ll_o));
	defparam
		nll01ll.sgate_representation = 0,
		nll01ll.width_a = 21,
		nll01ll.width_b = 21,
		nll01ll.width_o = 21;
	oper_add   nll0iii
	( 
	.a({nll00il, nll00ii, nll000i}),
	.b({{2{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nll0iii_o));
	defparam
		nll0iii.sgate_representation = 0,
		nll0iii.width_a = 3,
		nll0iii.width_b = 3,
		nll0iii.width_o = 3;
	oper_add   nlllOl
	( 
	.a({nlll0i, nlll1O, nlll1l, nlll1i, nlliOO, nlliOl, nlliOi, nllilO}),
	.b({{7{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlllOl_o));
	defparam
		nlllOl.sgate_representation = 0,
		nlllOl.width_a = 8,
		nlllOl.width_b = 8,
		nlllOl.width_o = 8;
	oper_add   nllO1iO
	( 
	.a({nlliOOi, nlliOlO, nlliOll, nlliOli, nlliOiO, nlliOil, nlliOii, nlliO0O, nlliO0l, nlliO0i, nlliO1O, nlliO1l, nlliO1i, nllilOO, nllilOl, nllilOi, nllillO, nllilll, nllilli, nlliliO, nllil0l}),
	.b({{20{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nllO1iO_o));
	defparam
		nllO1iO.sgate_representation = 0,
		nllO1iO.width_a = 21,
		nllO1iO.width_b = 21,
		nllO1iO.width_o = 21;
	oper_add   nllOlii
	( 
	.a({nllOi0O, nllO01O}),
	.b({1'b0, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nllOlii_o));
	defparam
		nllOlii.sgate_representation = 0,
		nllOlii.width_a = 2,
		nllOlii.width_b = 2,
		nllOlii.width_o = 2;
	oper_add   nllOO1l
	( 
	.a({nllOiil, nllOiii}),
	.b({1'b0, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nllOO1l_o));
	defparam
		nllOO1l.sgate_representation = 0,
		nllOO1l.width_a = 2,
		nllOO1l.width_b = 2,
		nllOO1l.width_o = 2;
	oper_add   nlOOli
	( 
	.a({nlOOii}),
	.b({1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlOOli_o));
	defparam
		nlOOli.sgate_representation = 0,
		nlOOli.width_a = 1,
		nlOOli.width_b = 1,
		nlOOli.width_o = 1;
	oper_decoder   n01iil
	( 
	.i({n01i0l}),
	.o(wire_n01iil_o));
	defparam
		n01iil.width_i = 1,
		n01iil.width_o = 2;
	oper_decoder   n0lilO
	( 
	.i({n0lili}),
	.o(wire_n0lilO_o));
	defparam
		n0lilO.width_i = 1,
		n0lilO.width_o = 2;
	oper_decoder   niO0lO
	( 
	.i({niO0il}),
	.o(wire_niO0lO_o));
	defparam
		niO0lO.width_i = 1,
		niO0lO.width_o = 2;
	oper_decoder   niOi0O
	( 
	.i({niOiiO}),
	.o(wire_niOi0O_o));
	defparam
		niOi0O.width_i = 1,
		niOi0O.width_o = 2;
	oper_less_than   n00i1O
	( 
	.a({{3{1'b0}}, 1'b1, {2{1'b0}}, 1'b1}),
	.b({n001iO, n001il, n001ii, n0010O, n0010l, n0010i, n01OOO}),
	.cin(1'b1),
	.o(wire_n00i1O_o));
	defparam
		n00i1O.sgate_representation = 0,
		n00i1O.width_a = 7,
		n00i1O.width_b = 7;
	oper_less_than   n0i0il
	( 
	.a({n0i01l, n0i1OO, n0i1Ol, n0i1Oi}),
	.b({4{1'b1}}),
	.cin(1'b0),
	.o(wire_n0i0il_o));
	defparam
		n0i0il.sgate_representation = 0,
		n0i0il.width_a = 4,
		n0i0il.width_b = 4;
	oper_less_than   n0il1l
	( 
	.a({n0iill, n0iiiO, n0iiil, n0ii0O}),
	.b({4{1'b1}}),
	.cin(1'b0),
	.o(wire_n0il1l_o));
	defparam
		n0il1l.sgate_representation = 0,
		n0il1l.width_a = 4,
		n0il1l.width_b = 4;
	oper_less_than   n0iOiO
	( 
	.a({wire_n0ilOl_o[4:1]}),
	.b({1'b0, n0O0li, n0O0iO, 1'b0}),
	.cin(1'b0),
	.o(wire_n0iOiO_o));
	defparam
		n0iOiO.sgate_representation = 0,
		n0iOiO.width_a = 4,
		n0iOiO.width_b = 4;
	oper_less_than   n0l1li
	( 
	.a({(~ n0O0ll), 1'b0, {2{1'b1}}}),
	.b({n0iO1l, n0iO1i, n0ilOO, n0ilOi}),
	.cin(1'b1),
	.o(wire_n0l1li_o));
	defparam
		n0l1li.sgate_representation = 0,
		n0l1li.width_a = 4,
		n0l1li.width_b = 4;
	oper_less_than   ni01Oi
	( 
	.a({ni01ii, ni010l, ni010i, ni011l}),
	.b({4{1'b1}}),
	.cin(1'b0),
	.o(wire_ni01Oi_o));
	defparam
		ni01Oi.sgate_representation = 0,
		ni01Oi.width_a = 4,
		ni01Oi.width_b = 4;
	oper_less_than   ni0i0O
	( 
	.a({ni00OO, ni00Oi, ni00lO, ni00ll}),
	.b({4{1'b1}}),
	.cin(1'b0),
	.o(wire_ni0i0O_o));
	defparam
		ni0i0O.sgate_representation = 0,
		ni0i0O.width_a = 4,
		ni0i0O.width_b = 4;
	oper_less_than   ni0llO
	( 
	.a({wire_ni0l1O_o[4:1]}),
	.b({{2{1'b0}}, {2{1'b1}}}),
	.cin(1'b0),
	.o(wire_ni0llO_o));
	defparam
		ni0llO.sgate_representation = 0,
		ni0llO.width_a = 4,
		ni0llO.width_b = 4;
	oper_less_than   ni0OOl
	( 
	.a({1'b1, 1'b0, {2{1'b1}}}),
	.b({ni0l0O, ni0l0l, ni0l0i, ni0l1l}),
	.cin(1'b1),
	.o(wire_ni0OOl_o));
	defparam
		ni0OOl.sgate_representation = 0,
		ni0OOl.width_a = 4,
		ni0OOl.width_b = 4;
	oper_less_than   niiO0l
	( 
	.a({{3{1'b0}}, 1'b1, {2{1'b0}}, 1'b1}),
	.b({niiill, niiili, niiiiO, niiiil, niiiii, niii0O, niii1l}),
	.cin(1'b1),
	.o(wire_niiO0l_o));
	defparam
		niiO0l.sgate_representation = 0,
		niiO0l.width_a = 7,
		niiO0l.width_b = 7;
	oper_less_than   nllill
	( 
	.a({{5{1'b0}}, 1'b1, {2{1'b0}}}),
	.b({nlll0i, nlll1O, nlll1l, nlll1i, nlliOO, nlliOl, nlliOi, nllilO}),
	.cin(1'b0),
	.o(wire_nllill_o));
	defparam
		nllill.sgate_representation = 0,
		nllill.width_a = 8,
		nllill.width_b = 8;
	oper_mux   nl100i
	( 
	.data({{11{1'b0}}, nl00Oi, nl0lil, nl0i0i, 1'b0, nl0O1l, {9{1'b0}}, nli10l, nl1i0l, {5{1'b0}}}),
	.o(wire_nl100i_o),
	.sel({nlO1ii, nlO10O, nlO10l, nlO10i, nlO11O}));
	defparam
		nl100i.width_data = 32,
		nl100i.width_sel = 5;
	oper_mux   nl100l
	( 
	.data({{11{1'b0}}, nl00Ol, nl0liO, nl0i0O, 1'b0, nl0O1O, {10{1'b0}}, nl1i0O, {3{1'b0}}, nlil0i, 1'b0}),
	.o(wire_nl100l_o),
	.sel({nlO1ii, nlO10O, nlO10l, nlO10i, nlO11O}));
	defparam
		nl100l.width_data = 32,
		nl100l.width_sel = 5;
	oper_mux   nl100O
	( 
	.data({{11{1'b0}}, nl00OO, nl0lll, nl0iii, 1'b0, nl0O0i, {10{1'b0}}, nl1iii, {3{1'b0}}, 1'b1, 1'b0}),
	.o(wire_nl100O_o),
	.sel({nlO1ii, nlO10O, nlO10l, nlO10i, nlO11O}));
	defparam
		nl100O.width_data = 32,
		nl100O.width_sel = 5;
	oper_mux   nl101O
	( 
	.data({{9{1'b0}}, nl010l, nl00ii, nl00ll, nl0lii, 1'b0, 1'b1, nl0lOl, {9{1'b0}}, nli11O, nl111i, {3{1'b0}}, 1'b1, 1'b0}),
	.o(wire_nl101O_o),
	.sel({nlO1ii, nlO10O, nlO10l, nlO10i, nlO11O}));
	defparam
		nl101O.width_data = 32,
		nl101O.width_sel = 5;
	oper_mux   nl10ii
	( 
	.data({{11{1'b0}}, nl0i1i, nl0lOi, nl0iil, 1'b0, nl0O0l, {10{1'b0}}, nl1iil, {5{1'b0}}}),
	.o(wire_nl10ii_o),
	.sel({nlO1ii, nlO10O, nlO10l, nlO10i, nlO11O}));
	defparam
		nl10ii.width_data = 32,
		nl10ii.width_sel = 5;
	oper_mux   nl10il
	( 
	.data({{11{1'b0}}, nl0i1O, 1'b0, nl0iiO, 1'b0, nl0O0O, {10{1'b0}}, nl1iiO, nlii0i, {2{1'b0}}, nlil0O, 1'b0}),
	.o(wire_nl10il_o),
	.sel({nlO1ii, nlO10O, nlO10l, nlO10i, nlO11O}));
	defparam
		nl10il.width_data = 32,
		nl10il.width_sel = 5;
	oper_mux   nl10iO
	( 
	.data({{13{1'b0}}, nl0ili, 1'b0, nl0Oii, {10{1'b0}}, nl1ili, nliill, {3{1'b0}}, 1'b1}),
	.o(wire_nl10iO_o),
	.sel({nlO1ii, nlO10O, nlO10l, nlO10i, nlO11O}));
	defparam
		nl10iO.width_data = 32,
		nl10iO.width_sel = 5;
	oper_mux   nl10li
	( 
	.data({{13{1'b0}}, nl0ill, 1'b0, nl0Oil, {10{1'b0}}, nl1ill, nliilO, {4{1'b0}}}),
	.o(wire_nl10li_o),
	.sel({nlO1ii, nlO10O, nlO10l, nlO10i, nlO11O}));
	defparam
		nl10li.width_data = 32,
		nl10li.width_sel = 5;
	oper_mux   nl10ll
	( 
	.data({{13{1'b0}}, nl0ilO, 1'b1, nl0OiO, {10{1'b0}}, nl1ilO, nliiOl, {3{1'b0}}, 1'b1}),
	.o(wire_nl10ll_o),
	.sel({nlO1ii, nlO10O, nlO10l, nlO10i, nlO11O}));
	defparam
		nl10ll.width_data = 32,
		nl10ll.width_sel = 5;
	oper_mux   nl10lO
	( 
	.data({{13{1'b0}}, nl0iOi, 1'b1, nl0Oli, {10{1'b0}}, nl1iOi, {4{1'b0}}, nliOil}),
	.o(wire_nl10lO_o),
	.sel({nlO1ii, nlO10O, nlO10l, nlO10i, nlO11O}));
	defparam
		nl10lO.width_data = 32,
		nl10lO.width_sel = 5;
	oper_mux   nl10Oi
	( 
	.data({{13{1'b0}}, nl0iOl, 1'b0, nl0Oll, {10{1'b0}}, nl1iOl, {4{1'b0}}, nliOli}),
	.o(wire_nl10Oi_o),
	.sel({nlO1ii, nlO10O, nlO10l, nlO10i, nlO11O}));
	defparam
		nl10Oi.width_data = 32,
		nl10Oi.width_sel = 5;
	oper_mux   nl10Ol
	( 
	.data({{13{1'b0}}, nl0iOO, 1'b1, nl0OlO, {10{1'b0}}, nl1iOO, {4{1'b0}}, nliOll}),
	.o(wire_nl10Ol_o),
	.sel({nlO1ii, nlO10O, nlO10l, nlO10i, nlO11O}));
	defparam
		nl10Ol.width_data = 32,
		nl10Ol.width_sel = 5;
	oper_mux   nl10OO
	( 
	.data({{13{1'b0}}, nl0l1l, 1'b0, nl0OOi, {10{1'b0}}, nl1l1i, nliiOO, {3{1'b0}}, nliOOi}),
	.o(wire_nl10OO_o),
	.sel({nlO1ii, nlO10O, nlO10l, nlO10i, nlO11O}));
	defparam
		nl10OO.width_data = 32,
		nl10OO.width_sel = 5;
	oper_mux   nl1i1i
	( 
	.data({{13{1'b0}}, nl0l1O, 1'b0, nl0OOl, {10{1'b0}}, nl1l1l, nlil1l, {4{1'b0}}}),
	.o(wire_nl1i1i_o),
	.sel({nlO1ii, nlO10O, nlO10l, nlO10i, nlO11O}));
	defparam
		nl1i1i.width_data = 32,
		nl1i1i.width_sel = 5;
	oper_mux   nl1i1l
	( 
	.data({{13{1'b0}}, nl0l0i, 1'b0, nl0OOO, {10{1'b0}}, nl1l1O, nlil1O, {3{1'b0}}, nliOOO}),
	.o(wire_nl1i1l_o),
	.sel({nlO1ii, nlO10O, nlO10l, nlO10i, nlO11O}));
	defparam
		nl1i1l.width_data = 32,
		nl1i1l.width_sel = 5;
	oper_mux   nl1i1O
	( 
	.data({{13{1'b0}}, nl0l0O, 1'b0, nli11l, {10{1'b0}}, nl1l0l, {4{1'b0}}, nll11i}),
	.o(wire_nl1i1O_o),
	.sel({nlO1ii, nlO10O, nlO10l, nlO10i, nlO11O}));
	defparam
		nl1i1O.width_data = 32,
		nl1i1O.width_sel = 5;
	oper_selector   n00ill
	( 
	.data({wire_n00lii_dataout, 1'b0, wire_n00l1O_dataout}),
	.o(wire_n00ill_o),
	.sel({n00Oii, (n00O0O | n00O1i), n00O0l}));
	defparam
		n00ill.width_data = 3,
		n00ill.width_sel = 3;
	oper_selector   n00iOi
	( 
	.data({1'b0, 1'b1, wire_n00l0i_dataout}),
	.o(wire_n00iOi_o),
	.sel({(n00Oii | n00O0O), n00O1i, n00O0l}));
	defparam
		n00iOi.width_data = 3,
		n00iOi.width_sel = 3;
	oper_selector   n00iOO
	( 
	.data({wire_n00lil_dataout, (~ nli1i0l), 1'b0}),
	.o(wire_n00iOO_o),
	.sel({n00Oii, n00O0O, (n00O0l | n00O1i)}));
	defparam
		n00iOO.width_data = 3,
		n00iOO.width_sel = 3;
	oper_selector   n00l1l
	( 
	.data({wire_n00liO_dataout, nli1i0l, 1'b0, nli1i0i}),
	.o(wire_n00l1l_o),
	.sel({n00Oii, n00O0O, n00O1i, n00O0l}));
	defparam
		n00l1l.width_data = 4,
		n00l1l.width_sel = 4;
	oper_selector   n1100l
	( 
	.data({(~ nl0OOOl), 1'b0, wire_n11l1i_dataout, 1'b1}),
	.o(wire_n1100l_o),
	.sel({n101OO, nl0OO0l, n1011O, n1011l}));
	defparam
		n1100l.width_data = 4,
		n1100l.width_sel = 4;
	oper_selector   n1101i
	( 
	.data({nl0OOOl, 1'b0, wire_n11lil_dataout, wire_n11l0i_dataout, {2{nl0OOOl}}, nli111l, {2{nl0OOOl}}}),
	.o(wire_n1101i_o),
	.sel({n101OO, nl0OO1O, n101Ol, n1010i, n101il, n1011O, n101iO, n11OOO, nlOOO0i}));
	defparam
		n1101i.width_data = 9,
		n1101i.width_sel = 9;
	oper_selector   n1101O
	( 
	.data({1'b0, wire_n11OiO_dataout, 1'b0, (~ nli11li)}),
	.o(wire_n1101O_o),
	.sel({nl0OO0i, n101Oi, n101Ol, n101ii}));
	defparam
		n1101O.width_data = 4,
		n1101O.width_sel = 4;
	oper_selector   n1110i
	( 
	.data({(~ nl0OOOO), 1'b0}),
	.o(wire_n1110i_o),
	.sel({n1010O, (~ n1010O)}));
	defparam
		n1110i.width_data = 2,
		n1110i.width_sel = 2;
	oper_selector   n1110l
	( 
	.data({1'b0, nli11li, 1'b0, nli11li}),
	.o(wire_n1110l_o),
	.sel({nl0OlOl, n101Oi, n1010O, n101ii}));
	defparam
		n1110l.width_data = 4,
		n1110l.width_sel = 4;
	oper_selector   n1111i
	( 
	.data({1'b0, wire_n11Oil_dataout, wire_n11l0O_dataout, {2{nl0OOOO}}, wire_n11l1O_dataout, wire_n11iOO_dataout}),
	.o(wire_n1111i_o),
	.sel({nl0OlOi, n101Oi, n101Ol, n1010O, n1010l, n1010i, n1011O}));
	defparam
		n1111i.width_data = 7,
		n1111i.width_sel = 7;
	oper_selector   n111il
	( 
	.data({1'b0, wire_n11lii_dataout, (~ nl0OOOl)}),
	.o(wire_n111il_o),
	.sel({nl0OlOO, n101Ol, n101il}));
	defparam
		n111il.width_data = 3,
		n111il.width_sel = 3;
	oper_selector   n111lO
	( 
	.data({1'b0, 1'b1, wire_n11i1O_dataout, (~ nl0OO0O), wire_n110Ol_dataout, (~ nl0OO0O), wire_n110il_dataout, {2{(~ nl0OO0O)}}}),
	.o(wire_n111lO_o),
	.sel({nl0OO1i, n101lO, n101ll, n101li, n101iO, n1011i, n11OOO, n11OOl, n11OOi}));
	defparam
		n111lO.width_data = 9,
		n111lO.width_sel = 9;
	oper_selector   n111Ol
	( 
	.data({1'b0, nli110O, wire_n110iO_dataout}),
	.o(wire_n111Ol_o),
	.sel({nl0OO1l, n101Ol, n11OOO}));
	defparam
		n111Ol.width_data = 3,
		n111Ol.width_sel = 3;
	oper_selector   n1Oili
	( 
	.data({nli10lO, 1'b0, nli10ii}),
	.o(wire_n1Oili_o),
	.sel({n0101O, nli101i, n1i0Ol}));
	defparam
		n1Oili.width_data = 3,
		n1Oili.width_sel = 3;
	oper_selector   n1OiOi
	( 
	.data({wire_n1OO0O_dataout, 1'b0, wire_n1OlOi_dataout, wire_n1Olii_dataout}),
	.o(wire_n1OiOi_o),
	.sel({n0101O, nli101O, n011ii, n1i0Ol}));
	defparam
		n1OiOi.width_data = 4,
		n1OiOi.width_sel = 4;
	oper_selector   n1OiOO
	( 
	.data({1'b0, 1'b1, (~ nli10il)}),
	.o(wire_n1OiOO_o),
	.sel({nli101l, (n0101l | n011lO), n0101i}));
	defparam
		n1OiOO.width_data = 3,
		n1OiOO.width_sel = 3;
	oper_selector   n1Ol0l
	( 
	.data({wire_n1OOil_dataout, 1'b0, (~ n1i1lO), 1'b1, wire_n1OlOO_dataout, wire_n1OliO_dataout}),
	.o(wire_n1Ol0l_o),
	.sel({n0101O, nli100i, n011Ol, n011ll, n011ii, n1i0Ol}));
	defparam
		n1Ol0l.width_data = 6,
		n1Ol0l.width_sel = 6;
	oper_selector   n1Ol1O
	( 
	.data({wire_n1OOii_dataout, 1'b0, wire_n1OlOl_dataout, wire_n1Olil_dataout}),
	.o(wire_n1Ol1O_o),
	.sel({n0101O, nli101O, n011ii, n1i0Ol}));
	defparam
		n1Ol1O.width_data = 4,
		n1Ol1O.width_sel = 4;
	oper_selector   ni101l
	( 
	.data({wire_ni10iO_dataout, 1'b0, nliilOi}),
	.o(wire_ni101l_o),
	.sel({ni1i1l, nli1iOl, n0OOli}));
	defparam
		ni101l.width_data = 3,
		ni101l.width_sel = 3;
	oper_selector   ni11lO
	( 
	.data({1'b0, nli1l1i, nli1iOO, (~ nliilOi)}),
	.o(wire_ni11lO_o),
	.sel({ni1i1l, ni10OO, ni10Ol, n0OOli}));
	defparam
		ni11lO.width_data = 4,
		ni11lO.width_sel = 4;
	oper_selector   ni11Oi
	( 
	.data({wire_ni10il_dataout, 1'b0, (~ nli1iOO)}),
	.o(wire_ni11Oi_o),
	.sel({ni1i1l, nli1iOi, ni10Ol}));
	defparam
		ni11Oi.width_data = 3,
		ni11Oi.width_sel = 3;
	oper_selector   ni11OO
	( 
	.data({nli1l1O, (~ nli1l1i), 1'b0}),
	.o(wire_ni11OO_o),
	.sel({ni1i1l, ni10OO, (ni10Ol | n0OOli)}));
	defparam
		ni11OO.width_data = 3,
		ni11OO.width_sel = 3;
	oper_selector   niiOOi
	( 
	.data({wire_nil1iO_dataout, 1'b0, wire_nil10l_dataout}),
	.o(wire_niiOOi_o),
	.sel({nil01i, (nil1OO | niiilO), nil1Ol}));
	defparam
		niiOOi.width_data = 3,
		niiOOi.width_sel = 3;
	oper_selector   niiOOO
	( 
	.data({1'b0, 1'b1, wire_nil10O_dataout}),
	.o(wire_niiOOO_o),
	.sel({(nil01i | nil1OO), niiilO, nil1Ol}));
	defparam
		niiOOO.width_data = 3,
		niiOOO.width_sel = 3;
	oper_selector   nil10i
	( 
	.data({wire_nil1li_dataout, nli1lll, 1'b0, nli1lli}),
	.o(wire_nil10i_o),
	.sel({nil01i, nil1OO, niiilO, nil1Ol}));
	defparam
		nil10i.width_data = 4,
		nil10i.width_sel = 4;
	oper_selector   nil11l
	( 
	.data({nli1lOi, (~ nli1lll), 1'b0}),
	.o(wire_nil11l_o),
	.sel({nil01i, nil1OO, (nil1Ol | niiilO)}));
	defparam
		nil11l.width_data = 3,
		nil11l.width_sel = 3;
	oper_selector   nlO0lO
	( 
	.data({wire_nlOiiO_dataout, (~ nli000i), 1'b0}),
	.o(wire_nlO0lO_o),
	.sel({nlOO0l, nlO0li, (((nlOO1O | nlOO1l) | nlOO1i) | nlOlOO)}));
	defparam
		nlO0lO.width_data = 3,
		nlO0lO.width_sel = 3;
	oper_selector   nlO0lOl
	( 
	.data({1'b0, (~ wire_nliliOl_dout)}),
	.o(wire_nlO0lOl_o),
	.sel({nl0Oi0O, (~ nl0Oi0O)}));
	defparam
		nlO0lOl.width_data = 2,
		nlO0lOl.width_sel = 2;
	oper_selector   nlO0O0l
	( 
	.data({1'b0, nl0Ol1l, wire_nlOi11O_dataout}),
	.o(wire_nlO0O0l_o),
	.sel({nl0OiiO, nlOi01O, nlOi01l}));
	defparam
		nlO0O0l.width_data = 3,
		nlO0O0l.width_sel = 3;
	oper_selector   nlO0O1i
	( 
	.data({1'b0, nl0OiOi, (~ nllO01l)}),
	.o(wire_nlO0O1i_o),
	.sel({nl0Oiii, nlOi01i, nlOi1OO}));
	defparam
		nlO0O1i.width_data = 3,
		nlO0O1i.width_sel = 3;
	oper_selector   nlO0O1O
	( 
	.data({1'b0, nl0OiOl, wire_nlO0OOO_dataout}),
	.o(wire_nlO0O1O_o),
	.sel({nl0Oiil, nlOi01l, nlOi01i}));
	defparam
		nlO0O1O.width_data = 3,
		nlO0O1O.width_sel = 3;
	oper_selector   nlO0Oii
	( 
	.data({1'b0, nl0Ol1O, wire_nlOi1ii_dataout}),
	.o(wire_nlO0Oii_o),
	.sel({nl0Oili, nlOi00i, nlOi01O}));
	defparam
		nlO0Oii.width_data = 3,
		nlO0Oii.width_sel = 3;
	oper_selector   nlO0OiO
	( 
	.data({1'b0, nll0lOO, (~ nl0Ol1O)}),
	.o(wire_nlO0OiO_o),
	.sel({nl0Oill, nlOi00l, nlOi00i}));
	defparam
		nlO0OiO.width_data = 3,
		nlO0OiO.width_sel = 3;
	oper_selector   nlO0Ol
	( 
	.data({wire_nlOili_dataout, 1'b0, (~ nli001O)}),
	.o(wire_nlO0Ol_o),
	.sel({nlOO0l, (((nlOO1O | nlOO1l) | nlOO1i) | nlO0li), nlOlOO}));
	defparam
		nlO0Ol.width_data = 3,
		nlO0Ol.width_sel = 3;
	oper_selector   nlO0Oll
	( 
	.data({wire_nliliOl_dout, (~ nll0lOO), 1'b0}),
	.o(wire_nlO0Oll_o),
	.sel({nlOi00O, nlOi00l, nl0OilO}));
	defparam
		nlO0Oll.width_data = 3,
		nlO0Oll.width_sel = 3;
	oper_selector   nlO0OOi
	( 
	.data({1'b0, wire_nlOi1il_dataout, wire_nlOi10i_dataout, wire_nlOi11i_dataout, nllO01l, wire_nliliOl_dout}),
	.o(wire_nlO0OOi_o),
	.sel({((nlOi00O | nlOi00l) | nlOi00i), nlOi01O, nlOi01l, nlOi01i, nlOi1OO, nlO100O}));
	defparam
		nlO0OOi.width_data = 6,
		nlO0OOi.width_sel = 6;
	oper_selector   nlOi0l
	( 
	.data({wire_nlOiOi_dataout, 1'b0, 1'b1}),
	.o(wire_nlOi0l_o),
	.sel({nlOO0l, (((nlOO1O | nlOO1l) | nlOlOO) | nlO0li), nlOO1i}));
	defparam
		nlOi0l.width_data = 3,
		nlOi0l.width_sel = 3;
	oper_selector   nlOi1i
	( 
	.data({wire_nlOill_dataout, nli000i, nli001O, 1'b0}),
	.o(wire_nlOi1i_o),
	.sel({nlOO0l, nlO0li, nlOlOO, ((nlOO1O | nlOO1l) | nlOO1i)}));
	defparam
		nlOi1i.width_data = 4,
		nlOi1i.width_sel = 4;
	oper_selector   nlOi1O
	( 
	.data({wire_nlOilO_dataout, 1'b0, 1'b1}),
	.o(wire_nlOi1O_o),
	.sel({nlOO0l, (((nlOO1O | nlOO1i) | nlOlOO) | nlO0li), nlOO1l}));
	defparam
		nlOi1O.width_data = 3,
		nlOi1O.width_sel = 3;
	oper_selector   nlOOOil
	( 
	.data({1'b0, nl0OO0O, (~ nl0OOOl)}),
	.o(wire_nlOOOil_o),
	.sel({nl0Olli, n11OOi, nlOOO0i}));
	defparam
		nlOOOil.width_data = 3,
		nlOOOil.width_sel = 3;
	oper_selector   nlOOOlO
	( 
	.data({1'b0, nl0OO0O, wire_n110ii_dataout}),
	.o(wire_nlOOOlO_o),
	.sel({nl0Olll, n1011i, n11OOO}));
	defparam
		nlOOOlO.width_data = 3,
		nlOOOlO.width_sel = 3;
	oper_selector   nlOOOOl
	( 
	.data({1'b0, wire_n11i1i_dataout, wire_n110Oi_dataout}),
	.o(wire_nlOOOOl_o),
	.sel({nl0OllO, n101ll, n101iO}));
	defparam
		nlOOOOl.width_data = 3,
		nlOOOOl.width_sel = 3;
	assign
		gmii_rx_d = {n0O1li, n0O1iO, n0O1il, n0O1ii, n0O10O, n0O10l, n0O10i, n0O11O},
		gmii_rx_dv = n0O1ll,
		gmii_rx_err = n0O1Oi,
		hd_ena = nl011l,
		led_an = nll111i,
		led_char_err = nil0O,
		led_col = niOiiO,
		led_crs = n01i0O,
		led_disp_err = niliO,
		led_link = nil1i,
		mii_col = niOiiO,
		mii_crs = niO0li,
		mii_rx_d = {n0ll1l, n0ll1i, n0liOO, n0liOl},
		mii_rx_dv = n0liOi,
		mii_rx_err = n0llli,
		nl0O00i = ((((((((((((((((((((~ (nll111l ^ nl0i0i)) & (~ (nll111O ^ nl0i0O))) & (~ (nll110i ^ nl0iii))) & (~ (nll110l ^ nl0iil))) & (~ (nll110O ^ nl0iiO))) & (~ (nll11ii ^ nl0ili))) & (~ (nll11il ^ nl0ill))) & (~ (nll11iO ^ nl0ilO))) & (~ (nll11li ^ nl0iOi))) & (~ (nll11ll ^ nl0iOl))) & (~ (nll11lO ^ nl0iOO))) & (~ (nll11Oi ^ nl0l1l))) & (~ (nll11Ol ^ nl0l1O))) & (~ (nll11OO ^ nl0l0i))) & (~ (nll101i ^ nl0l0O))) & (~ (nll101l ^ nl0lii))) & (~ (nll101O ^ nl0lil))) & (~ (nll100i ^ nl0liO))) & (~ (nll100l ^ nl0lll))) & (~ (nll100O ^ nl0lOi))),
		nl0O00l = ((~ nl0O00O) & nlOl1il),
		nl0O00O = ((nll00il & nll00ii) & (~ nll000i)),
		nl0O01i = ((nliiOii & (~ nliiO0O)) & (~ nliiO0l)),
		nl0O01l = (((((nlil0ii & nlil00O) & (~ nlil00l)) & (~ nlil00i)) & (~ nlil01O)) & nlil1lO),
		nl0O01O = ((nlil0li & (~ nlil0iO)) & (~ nlil0il)),
		nl0O0ii = ((((((((((((((((((((~ (nlliliO ^ nl0i0i)) & (~ (nllilli ^ nl0i0O))) & (~ (nllilll ^ nl0iii))) & (~ (nllillO ^ nl0iil))) & (~ (nllilOi ^ nl0iiO))) & (~ (nllilOl ^ nl0ili))) & (~ (nllilOO ^ nl0ill))) & (~ (nlliO1i ^ nl0ilO))) & (~ (nlliO1l ^ nl0iOi))) & (~ (nlliO1O ^ nl0iOl))) & (~ (nlliO0i ^ nl0iOO))) & (~ (nlliO0l ^ nl0l1l))) & (~ (nlliO0O ^ nl0l1O))) & (~ (nlliOii ^ nl0l0i))) & (~ (nlliOil ^ nl0l0O))) & (~ (nlliOiO ^ nl0lii))) & (~ (nlliOli ^ nl0lil))) & (~ (nlliOll ^ nl0liO))) & (~ (nlliOlO ^ nl0lll))) & (~ (nlliOOi ^ nl0lOi))),
		nl0O0il = (wire_nlO0O0l_o | (wire_nlO0O1O_o | (wire_nlO0Oll_o | wire_nlO0Oii_o))),
		nl0O0iO = ((nlOi00O | wire_nlO0Oii_o) | nl0O0li),
		nl0O0li = (nlOi01l & wire_nlO0O1O_o),
		nl0O0ll = ((((((((((((((~ (nlO110l ^ nllOiiO)) & (~ (nlO110O ^ nllOO0l))) & (~ (nlO11ii ^ nllOO0O))) & (~ (nlO11il ^ nllOOii))) & (~ (nlO11iO ^ nllOOil))) & (~ (nlO11li ^ nllOOiO))) & (~ (nlO11ll ^ nllOOli))) & (~ (nlO11lO ^ nllOOll))) & (~ (nlO11Oi ^ nllOOlO))) & (~ (nlO11Ol ^ nllOOOi))) & (~ (nlO11OO ^ nllOOOl))) & (~ (nlO101i ^ nllOOOO))) & (~ (nlO101l ^ nlO111i))) & (~ (nlO101O ^ nlO111l))),
		nl0O0lO = ((((((((wire_nlO0lOl_o ^ nlO100O) | (nlOi1OO ^ wire_nlO0O1i_o)) | (nlOi01i ^ wire_nlO0O1O_o)) | (nlOi01l ^ wire_nlO0O0l_o)) | (nlOi01O ^ wire_nlO0Oii_o)) | (nlOi00i ^ wire_nlO0OiO_o)) | (nlOi00l ^ wire_nlO0Oll_o)) | (nlOi00O ^ wire_nlO0OOi_o)),
		nl0O0Oi = (nllOi0O & (~ nllO01O)),
		nl0O0Ol = (nlO100i & nl0O0OO),
		nl0O0OO = ((((((((((((((((~ (nlO110l ^ nlOO10O)) & (~ (nlO110O ^ nlOO1il))) & (~ (nlO11ii ^ nlOO1iO))) & (~ (nlO11il ^ nlOO1li))) & (~ (nlO11iO ^ nlOO1ll))) & (~ (nlO11li ^ nlOO1lO))) & (~ (nlO11ll ^ nlOO1Oi))) & (~ (nlO11lO ^ nlOO1Ol))) & (~ (nlO11Oi ^ nlOO1OO))) & (~ (nlO11Ol ^ nlOO01i))) & (~ (nlO11OO ^ nlOO01l))) & (~ (nlO101i ^ nlOO01O))) & (~ (nlO101l ^ nlOO00i))) & (~ (nlO101O ^ nlOO00l))) & (~ (nlO100i ^ nlOO00O))) & (~ (nlO100l ^ nlOO0ii))),
		nl0O1OO = (((((nliiO0i & nliiO1O) & (~ nliiO1l)) & (~ nliiO1i)) & (~ nliilOO)) & nliiliO),
		nl0Oi0i = ((((((((((((((((~ nlO100l) & (~ nlO100i)) & (~ nlO101O)) & (~ nlO101l)) & (~ nlO101i)) & (~ nlO11OO)) & (~ nlO11Ol)) & (~ nlO11Oi)) & (~ nlO11lO)) & (~ nlO11ll)) & (~ nlO11li)) & (~ nlO11iO)) & (~ nlO11il)) & (~ nlO11ii)) & (~ nlO110O)) & (~ nlO110l)),
		nl0Oi0l = (nlOi00i & nllO01l),
		nl0Oi0O = (((((nlOi00l | nlOi00i) | nlOi01O) | nlOi01l) | nlOi01i) | nlOi1OO),
		nl0Oi1i = (nllOiil & (~ nllOiii)),
		nl0Oi1l = ((~ (nlO100l ^ nlOO0ii)) & nl0Oi1O),
		nl0Oi1O = ((((((((((((((~ (nlO110l ^ nlOO10O)) & (~ (nlO110O ^ nlOO1il))) & (~ (nlO11ii ^ nlOO1iO))) & (~ (nlO11il ^ nlOO1li))) & (~ (nlO11iO ^ nlOO1ll))) & (~ (nlO11li ^ nlOO1lO))) & (~ (nlO11ll ^ nlOO1Oi))) & (~ (nlO11lO ^ nlOO1Ol))) & (~ (nlO11Oi ^ nlOO1OO))) & (~ (nlO11Ol ^ nlOO01i))) & (~ (nlO11OO ^ nlOO01l))) & (~ (nlO101i ^ nlOO01O))) & (~ (nlO101l ^ nlOO00i))) & (~ (nlO101O ^ nlOO00l))),
		nl0Oiii = (((((nlOi00O | nlOi00l) | nlOi00i) | nlOi01O) | nlOi01l) | nlO100O),
		nl0Oiil = (((((nlOi00O | nlOi00l) | nlOi00i) | nlOi01O) | nlOi1OO) | nlO100O),
		nl0OiiO = (((((nlOi00O | nlOi00l) | nlOi00i) | nlOi01i) | nlOi1OO) | nlO100O),
		nl0Oili = (((((nlOi00O | nlOi00l) | nlOi01l) | nlOi01i) | nlOi1OO) | nlO100O),
		nl0Oill = (((((nlOi00O | nlOi01O) | nlOi01l) | nlOi01i) | nlOi1OO) | nlO100O),
		nl0OilO = (((((nlOi00i | nlOi01O) | nlOi01l) | nlOi01i) | nlOi1OO) | nlO100O),
		nl0OiOi = (nll0lOO & nll01OO),
		nl0OiOl = (((~ nlO110i) | (~ nllO01l)) & nll0lOO),
		nl0OiOO = (nllO01i & (~ nlliOOl)),
		nl0Ol0i = ((((nll10ii | (~ nliOO0l)) | wire_nlill1i_dout) | ((((~ nlOi01i) & (~ nlOi1OO)) & (~ nlO100O)) & nlOO0il)) | (nlOi0ii ^ wire_nliliOl_dout)),
		nl0Ol0l = (((((((n10O1l & n10O1i) & n10lOO) & n10lOl) & n10lOi) & n10llO) & n10lll) & (~ n10lli)),
		nl0Ol0O = (n101li | n101iO),
		nl0Ol1i = (nlO110i & nllO01l),
		nl0Ol1l = (nllO01i & nlliOOl),
		nl0Ol1O = ((~ nlO110i) & nllO01l),
		nl0Olii = (wire_n111lO_o & (n11OOO | (n1011i | nl0Ol0O))),
		nl0Olil = (wire_n111lO_o & (nlOOO0i | (n11OOi | (n11OOl | nl0Ol0O)))),
		nl0OliO = (wire_n111lO_o | wire_n111ii_dataout),
		nl0Olli = ((((((((((((((((n101OO | n101Ol) | n101Oi) | n101lO) | n101ll) | n101li) | n101iO) | n101il) | n101ii) | n1010O) | n1010l) | n1010i) | n1011O) | n1011l) | n1011i) | n11OOO) | n11OOl),
		nl0Olll = ((((((((((((((((n101OO | n101Ol) | n101Oi) | n101lO) | n101ll) | n101li) | n101iO) | n101il) | n101ii) | n1010O) | n1010l) | n1010i) | n1011O) | n1011l) | n11OOl) | n11OOi) | nlOOO0i),
		nl0OllO = ((((((((((((((((n101OO | n101Ol) | n101Oi) | n101lO) | n101li) | n101il) | n101ii) | n1010O) | n1010l) | n1010i) | n1011O) | n1011l) | n1011i) | n11OOO) | n11OOl) | n11OOi) | nlOOO0i),
		nl0OlOi = ((((((((((((n101OO | n101lO) | n101ll) | n101li) | n101iO) | n101il) | n101ii) | n1011l) | n1011i) | n11OOO) | n11OOl) | n11OOi) | nlOOO0i),
		nl0OlOl = (((((((((((((((n101OO | n101Ol) | n101lO) | n101ll) | n101li) | n101iO) | n101il) | n1010l) | n1010i) | n1011O) | n1011l) | n1011i) | n11OOO) | n11OOl) | n11OOi) | nlOOO0i),
		nl0OlOO = ((((((((((((((((n101OO | n101Oi) | n101lO) | n101ll) | n101li) | n101iO) | n101ii) | n1010O) | n1010l) | n1010i) | n1011O) | n1011l) | n1011i) | n11OOO) | n11OOl) | n11OOi) | nlOOO0i),
		nl0OO0i = (((((((((((((((n101OO | n101lO) | n101ll) | n101li) | n101iO) | n101il) | n1010O) | n1010l) | n1010i) | n1011O) | n1011l) | n1011i) | n11OOO) | n11OOl) | n11OOi) | nlOOO0i),
		nl0OO0l = (((((((((((((((n101Ol | n101Oi) | n101lO) | n101ll) | n101li) | n101iO) | n101il) | n101ii) | n1010O) | n1010l) | n1010i) | n1011i) | n11OOO) | n11OOl) | n11OOi) | nlOOO0i),
		nl0OO0O = (n10O1O & nl0OOii),
		nl0OO1i = ((((((((((n101OO | n101Ol) | n101Oi) | n101il) | n101ii) | n1010O) | n1010l) | n1010i) | n1011O) | n1011l) | nlOOO0i),
		nl0OO1l = ((((((((((((((((n101OO | n101Oi) | n101lO) | n101ll) | n101li) | n101iO) | n101il) | n101ii) | n1010O) | n1010l) | n1010i) | n1011O) | n1011l) | n1011i) | n11OOl) | n11OOi) | nlOOO0i),
		nl0OO1O = ((((((((((n101Oi | n101lO) | n101ll) | n101li) | n101ii) | n1010O) | n1010l) | n1011l) | n1011i) | n11OOl) | n11OOi),
		nl0OOii = (((((((n10O1l & n10O1i) & n10lOO) & n10lOl) & (~ n10lOi)) & n10llO) & n10lll) & n10lli),
		nl0OOil = (n1i11i & nli111l),
		nl0OOiO = ((~ n1i11i) & nl0OOlO),
		nl0OOli = (((((((n10O1l & n10O1i) & n10lOO) & n10lOl) & n10lOi) & n10llO) & (~ n10lll)) & n10lli),
		nl0OOll = (n1i11i & nl0OOlO),
		nl0OOlO = (n10O1O & nl0OOli),
		nl0OOOi = ((~ n1i11i) & (~ n10O1O)),
		nl0OOOl = (n1i11i & nli111l),
		nl0OOOO = (n10O1O | n10liO),
		nli000i = (nlliil | nll0iO),
		nli000l = (nli00lO & (~ nlli0O)),
		nli000O = ((~ read) & write),
		nli001i = (nl00ii & wire_nllill_o),
		nli001l = (wire_nlO0Ol_o | wire_nlO0lO_o),
		nli001O = (nlliil | nlli0O),
		nli00ii = ((nli00iO & (~ nlli0O)) & nli00il),
		nli00il = ((((address[0] & (~ address[1])) & address[2]) & (~ address[3])) & (~ address[4])),
		nli00iO = (read & (~ write)),
		nli00li = (nli00lO & nli00ll),
		nli00ll = (((((~ address[0]) & address[1]) & address[2]) & address[3]) & (~ address[4])),
		nli00lO = (nli00iO & (~ nll0iO)),
		nli010i = (((((~ nlO1ii) & (~ nlO10O)) & nlO10l) & nlO10i) & (~ nlO11O)),
		nli011l = (nli011O & nlO1il),
		nli011O = ((((nlO1ii & (~ nlO10O)) & (~ nlO10l)) & (~ nlO10i)) & (~ nlO11O)),
		nli01ii = (nli01il & nlO1il),
		nli01il = (((((~ nlO1ii) & (~ nlO10O)) & nlO10l) & (~ nlO10i)) & (~ nlO11O)),
		nli01iO = (((((~ nlO1ii) & (~ nlO10O)) & (~ nlO10l)) & (~ nlO10i)) & nlO11O),
		nli01lO = (nli01Oi & nlO1il),
		nli01Oi = (((((~ nlO1ii) & (~ nlO10O)) & (~ nlO10l)) & (~ nlO10i)) & (~ nlO11O)),
		nli01OO = (((((((nlll0i & nlll1O) & nlll1l) & nlll1i) & nlliOO) & nlliOl) & nlliOi) & (~ nllilO)),
		nli0i0i = (nlii0lO & (~ n10ll)),
		nli0i0l = (nli0iOl & n1i0O),
		nli0i0O = (nli0iii | (((~ nli0iOl) | n1i0l) & n1i0O)),
		nli0i1i = ((nli0i1l | ((~ n111l) & n11Oi)) | n110l),
		nli0i1l = (nlii0lO & (~ n101l)),
		nli0i1O = (nli0i0i | ((~ n110O) & n10ii)),
		nli0iii = (nlii0lO & (~ n1ill)),
		nli0iil = (nli0ilO & n1l0O),
		nli0iiO = (nlii0lO & (~ n1OOi)),
		nli0ili = (nlii0lO & (~ n01ll)),
		nli0ill = (n10ii | n1O0i),
		nli0ilO = (n110i & n1ilO),
		nli0iOi = ((nlii0lO & (~ n000i)) | (~ n110i)),
		nli0iOl = ((~ n111O) & n10Ol),
		nli0l0i = ((((((((~ nl11l) & niOOO) & (~ niOOl)) & (~ niOOi)) & (~ niOlO)) & (~ niOll)) & (~ niOli)) & niOiO),
		nli0l0l = ((((((((~ nl11l) & niOOO) & (~ niOOl)) & (~ niOOi)) & (~ niOlO)) & niOll) & niOli) & niOiO),
		nli0l0O = ((((((((~ nl11l) & niOOO) & (~ niOOl)) & (~ niOOi)) & niOlO) & (~ niOll)) & niOli) & niOiO),
		nli0l1i = (n1l0O | n011i),
		nli0l1l = ((((((((~ nl11l) & niOOO) & (~ niOOl)) & (~ niOOi)) & (~ niOlO)) & (~ niOll)) & niOli) & (~ niOiO)),
		nli0l1O = (((~ niOii) & nli0lli) | (niOii & nli0liO)),
		nli0lii = ((((((((~ nl11l) & niOOO) & (~ niOOl)) & niOOi) & (~ niOlO)) & (~ niOll)) & niOli) & niOiO),
		nli0lil = ((((((((~ nl11l) & niOOO) & (~ niOOl)) & (~ niOOi)) & (~ niOlO)) & (~ niOll)) & niOli) & niOiO),
		nli0liO = (niO0l & (~ wire_nl1ii_runningdisp[0])),
		nli0lli = (niO0l & wire_nl1ii_runningdisp[0]),
		nli0lll = (((((((nl11l & (~ niOOO)) & niOOl) & (~ niOOi)) & (~ niOlO)) & (~ niOll)) & niOli) & (~ niOiO)),
		nli0lOl = (((((((nl11l & (~ niOOO)) & niOOl) & (~ niOOi)) & (~ niOlO)) & (~ niOll)) & (~ niOli)) & niOiO),
		nli0O0O = (((((((nl11l & (~ niOOO)) & niOOl) & (~ niOOi)) & (~ niOlO)) & niOll) & niOli) & niOiO),
		nli0OiO = (((((((nl11l & (~ niOOO)) & niOOl) & niOOi) & (~ niOlO)) & niOll) & (~ niOli)) & (~ niOiO)),
		nli0OOl = (((((((nl11l & (~ niOOO)) & niOOl) & (~ niOOi)) & niOlO) & niOll) & (~ niOli)) & (~ niOiO)),
		nli100i = ((((((((((n0101l | n0101i) | n011OO) | n011Oi) | n011lO) | n011li) | n011iO) | n011il) | n0110O) | n0110l) | n0110i),
		nli100l = (nli10ll & wire_n1i1ii_dout),
		nli100O = (nli10iO & wire_n1i1ii_dout),
		nli101i = (((((((((((((n0101l | n0101i) | n011OO) | n011Ol) | n011Oi) | n011lO) | n011ll) | n011li) | n011iO) | n011il) | n011ii) | n0110O) | n0110l) | n0110i),
		nli101l = ((((((((((((n0101O | n011OO) | n011Ol) | n011Oi) | n011ll) | n011li) | n011iO) | n011il) | n011ii) | n0110O) | n0110l) | n0110i) | n1i0Ol),
		nli101O = ((((((((((((n0101l | n0101i) | n011OO) | n011Ol) | n011Oi) | n011lO) | n011ll) | n011li) | n011iO) | n011il) | n0110O) | n0110l) | n0110i),
		nli10ii = ((~ wire_n1i1il_dout) & (~ wire_n1i1ii_dout)),
		nli10il = ((~ nii00l) | (~ wire_n1i1ii_dout)),
		nli10iO = ((niii0l & nii00l) & n1i1lO),
		nli10li = (nli10ll & wire_n1i1ii_dout),
		nli10ll = (((~ niii0l) & nii00l) & (~ n1i1lO)),
		nli10lO = (((wire_n1i1ll_dout & (~ wire_n1i1il_dout)) & (~ n1i1lO)) & (~ wire_n1i1ii_dout)),
		nli10Oi = ((~ nlOl10l) & n0l11l),
		nli10Ol = ((((((n001iO & n001il) & (~ n001ii)) & (~ n0010O)) & (~ n0010l)) & n0010i) & (~ n01OOO)),
		nli10OO = (((((((~ n001iO) & (~ n001il)) & (~ n001ii)) & n0010O) & (~ n0010l)) & (~ n0010i)) & (~ n01OOO)),
		nli110i = (nll0iiO & (n10lil & ((n10O1O & (~ nli11il)) & (~ nli110l)))),
		nli110l = (((((((n10O1l & (~ n10O1i)) & n10lOO) & n10lOl) & n10lOi) & n10llO) & (~ n10lll)) & (~ n10lli)),
		nli110O = (nll0iiO & nli11ii),
		nli111i = ((~ nll0iiO) & (~ nli111l)),
		nli111l = (n10O1O & nli110l),
		nli111O = (nll0iiO & ((~ n10O1O) & n10lil)),
		nli11ii = (n10O1O & nli11il),
		nli11il = (((((((n10O1l & n10O1i) & n10lOO) & n10lOl) & n10lOi) & (~ n10llO)) & n10lll) & n10lli),
		nli11iO = ((~ nll0iiO) & n10liO),
		nli11li = ((~ n10O1O) & (nli11lO | nli11ll)),
		nli11ll = (((((((n10O1l & (~ n10O1i)) & n10lOO) & n10lOl) & (~ n10lOi)) & n10llO) & (~ n10lll)) & n10lli),
		nli11lO = ((((((((~ n10O1l) & n10O1i) & (~ n10lOO)) & (~ n10lOl)) & (~ n10lOi)) & (~ n10llO)) & n10lll) & (~ n10lli)),
		nli11Oi = (wire_n1Ol0l_o & n1i1lO),
		nli11Ol = ((~ n0101O) & wire_n1Ol0l_o),
		nli11OO = (wire_n1OiOO_o & niii0l),
		nli1i0i = (n00Oil | nli1iil),
		nli1i0l = (n00Oil | (~ nli1iil)),
		nli1i0O = ((~ n00Oil) & (~ n0l11l)),
		nli1i1i = ((~ n00Oll) & (~ n00Oli)),
		nli1i1l = ((~ n00Oll) & n00Oli),
		nli1i1O = ((((((n001iO & n001il) & (~ n001ii)) & (~ n0010O)) & (~ n0010l)) & n0010i) & n01OOO),
		nli1iii = ((~ n00Oil) & (nli1iil & (~ n0l11l))),
		nli1iil = (n00Oll & (~ n00Oli)),
		nli1iiO = ((~ n00lOO) & n001li),
		nli1ili = (nlil01i & n0li0O),
		nli1ill = (wire_n01l0O_dout[1] & (~ wire_n01l0O_dout[0])),
		nli1ilO = (wire_n01l0O_dout[1] & (~ wire_n01l0O_dout[0])),
		nli1iOi = (ni10OO | n0OOli),
		nli1iOl = (ni10OO | ni10Ol),
		nli1iOO = (nliilOi & ((~ niO1ii) & (~ ni1lOl))),
		nli1l0i = (nliilOi & nli1lOO),
		nli1l0l = ((((((niiill & niiili) & (~ niiiiO)) & (~ niiiil)) & (~ niiiii)) & niii0O) & (~ niii1l)),
		nli1l0O = (((((((~ niiill) & (~ niiili)) & (~ niiiiO)) & niiiil) & (~ niiiii)) & (~ niii0O)) & (~ niii1l)),
		nli1l1i = (nliilOi & (niO1ii & (~ ni1lOl))),
		nli1l1l = (nliilOi & ((~ niO1ii) & ni1lOl)),
		nli1l1O = (nliilOi & (niO1ii & ni1lOl)),
		nli1lii = ((~ nil00l) & (~ nil00i)),
		nli1lil = ((~ nil00l) & nil00i),
		nli1liO = ((((((niiill & niiili) & (~ niiiiO)) & (~ niiiil)) & (~ niiiii)) & niii0O) & niii1l),
		nli1lli = (nil01l | nli1lOl),
		nli1lll = (nil01l | (~ nli1lOl)),
		nli1llO = ((~ ni0lii) & (~ nil01l)),
		nli1lOi = ((~ nil01l) & ((~ ni0lii) & nli1lOl)),
		nli1lOl = (nil00l & (~ nil00i)),
		nli1lOO = (nliilOi & (niO1ii & (~ ni0O0O))),
		nli1O0i = ((~ nl00Oi) & nl00ll),
		nli1O0l = ((((nlO1ii & (~ nlO10O)) & nlO10l) & (~ nlO10i)) & nlO11O),
		nli1O0O = ((((nlO1ii & (~ nlO10O)) & nlO10l) & nlO10i) & (~ nlO11O)),
		nli1O1i = (niO00i & (~ niO01O)),
		nli1O1l = (((((~ nl1Oll) & (~ nl1Oli)) & nl1OiO) & (~ nl1Oil)) & nl1l0O),
		nli1O1O = (nll1lO & (nlii1O & (nl00Oi & nl00ll))),
		nli1Oii = (nli1Oil & nlO1il),
		nli1Oil = ((((nlO1ii & (~ nlO10O)) & nlO10l) & (~ nlO10i)) & (~ nlO11O)),
		nli1Oll = (nli1OlO & nlO1il),
		nli1OlO = ((((nlO1ii & (~ nlO10O)) & (~ nlO10l)) & nlO10i) & nlO11O),
		nli1OOi = (nli1OOl & nlO1il),
		nli1OOl = ((((nlO1ii & (~ nlO10O)) & (~ nlO10l)) & nlO10i) & (~ nlO11O)),
		nlii00O = ((((((((~ nl11l) & (~ niOOO)) & (~ niOOl)) & niOOi) & niOlO) & niOll) & (~ niOli)) & (~ niOiO)),
		nlii0lO = (reset | nl0Oi),
		nlii0Oi = 1'b0,
		nlii11l = (((((((nl11l & (~ niOOO)) & niOOl) & niOOi) & niOlO) & niOll) & (~ niOli)) & (~ niOiO)),
		nlii1ii = (((((((nl11l & (~ niOOO)) & (~ niOOl)) & niOOi) & niOlO) & niOll) & (~ niOli)) & (~ niOiO)),
		nlii1Ol = (((((((nl11l & niOOO) & niOOl) & niOOi) & niOlO) & niOll) & (~ niOli)) & (~ niOiO)),
		nliii0i = (reset_rx_clk | nliiiOl),
		nliii0l = 1'b1,
		nliii1O = (reset_tx_clk | nliil1l),
		pcs_pwrdn_out = nliO0O,
		readdata = {nlO11i, nllOOO, nllOOl, nllOOi, nllOlO, nllOll, nllOli, nllOiO, nllOil, nllOii, nllO0O, nllO0l, nllO0i, nllO1O, nllO1l, nllO1i},
		reconfig_fromgxb = {{16{1'b0}}, wire_nl1il_dprioout},
		rx_clk = wire_nl10l_clkout,
		rx_clkena = nlil01i,
		rx_recovclkout = wire_nl10O_clockout,
		set_10 = (((~ nl010i) & (~ nl011O)) & (nliiili2 ^ nliiili1)),
		set_100 = ((~ nl010i) & nl011O),
		set_1000 = ((nl010i & (~ nl011O)) & (nliiiil4 ^ nliiiil3)),
		tx_clk = wire_nl10l_clkout,
		tx_clkena = nliilOi,
		txp = wire_nl10i_dataout,
		waitrequest = nlll0l;
endmodule //sgmii
//synopsys translate_on
//VALID FILE
